Version 4.0 HI-TECH Software Intermediate Code
"15 Source\rtc_main.h
[; ;Source\rtc_main.h: 15: typedef struct{
[s S940 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `us 1 `uc 1 ]
[n S940 . year month day wday hour min sec msec usec ]
[v F7279 `(v ~T0 @X0 0 tf1`*v ]
[v F7283 `(v ~T0 @X0 0 tf1`*v ]
"322 Source/FreeRTOS/include\FreeRTOS.h
[; ;Source/FreeRTOS/include\FreeRTOS.h: 322: extern uint8_t isr_cnt;
[v _isr_cnt `uc ~T0 @X0 0 e ]
"12798 Source\pic18f47j53.h
[; ;Source\pic18f47j53.h: 12798:     struct {
[s S587 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S587 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"12808
[; ;Source\pic18f47j53.h: 12808:     struct {
[s S588 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S588 . TX9D2 TRMT2 BRGH2 SENDB2 SYNC2 TXEN2 TX92 CSRC2 ]
"12818
[; ;Source\pic18f47j53.h: 12818:     struct {
[s S589 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S589 . TXD82 . TX8_92 ]
"12797
[; ;Source\pic18f47j53.h: 12797: typedef union {
[u S586 `S587 1 `S588 1 `S589 1 ]
[n S586 . . . . ]
"12824
[; ;Source\pic18f47j53.h: 12824: extern volatile TXSTA2bits_t TXSTA2bits __attribute__((address(0xFA8)));
[v _TXSTA2bits `VS586 ~T0 @X0 0 e@4008 ]
"12919
[; ;Source\pic18f47j53.h: 12919: extern volatile unsigned char TXREG2 __attribute__((address(0xFA9)));
[v _TXREG2 `Vuc ~T0 @X0 0 e@4009 ]
"320 Source/FreeRTOS/include\FreeRTOS.h
[; ;Source/FreeRTOS/include\FreeRTOS.h: 320: extern const char ConvC[];
[v _ConvC `Cuc ~T0 @X0 -> 0 `x e ]
"422
[; ;Source/FreeRTOS/include\FreeRTOS.h: 422: void Xprintf(const char *string, ...);
[v _Xprintf `(v ~T0 @X0 0 ev`*Cuc ]
"111 Source/FreeRTOS/portable/PIC18F/port.c
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 111: static void prvSetupTimerInterrupt( void );
[v _prvSetupTimerInterrupt `(v ~T0 @X0 0 sf ]
"19265 Source\pic18f47j53.h
[; ;Source\pic18f47j53.h: 19265: extern volatile unsigned char STKPTR __attribute__((address(0xFFC)));
[v _STKPTR `Vuc ~T0 @X0 0 e@4092 ]
"18630
[; ;Source\pic18f47j53.h: 18630: extern volatile unsigned char FSR0L __attribute__((address(0xFE9)));
[v _FSR0L `Vuc ~T0 @X0 0 e@4073 ]
"107 Source/FreeRTOS/portable/PIC18F/port.c
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 107: void pxCurrentTCB_point(uint32_t *dt);
[v _pxCurrentTCB_point `(v ~T0 @X0 0 ef1`*ul ]
"18603 Source\pic18f47j53.h
[; ;Source\pic18f47j53.h: 18603: extern volatile unsigned char WREG __attribute__((address(0xFE8)));
[v _WREG `Vuc ~T0 @X0 0 e@4072 ]
"18257
[; ;Source\pic18f47j53.h: 18257: extern volatile unsigned char STATUS __attribute__((address(0xFD8)));
[v _STATUS `Vuc ~T0 @X0 0 e@4056 ]
"18962
[; ;Source\pic18f47j53.h: 18962: extern volatile unsigned char INTCON __attribute__((address(0xFF2)));
[v _INTCON `Vuc ~T0 @X0 0 e@4082 ]
"18968
[; ;Source\pic18f47j53.h: 18968:     struct {
[s S893 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S893 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"18978
[; ;Source\pic18f47j53.h: 18978:     struct {
[s S894 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S894 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"18988
[; ;Source\pic18f47j53.h: 18988:     struct {
[s S895 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S895 . . GIEL GIEH ]
"18967
[; ;Source\pic18f47j53.h: 18967: typedef union {
[u S892 `S893 1 `S894 1 `S895 1 ]
[n S892 . . . . ]
"18994
[; ;Source\pic18f47j53.h: 18994: extern volatile INTCONbits_t INTCONbits __attribute__((address(0xFF2)));
[v _INTCONbits `VS892 ~T0 @X0 0 e@4082 ]
"18462
[; ;Source\pic18f47j53.h: 18462: extern volatile unsigned char BSR __attribute__((address(0xFE0)));
[v _BSR `Vuc ~T0 @X0 0 e@4064 ]
"18335
[; ;Source\pic18f47j53.h: 18335: extern volatile unsigned char FSR2L __attribute__((address(0xFD9)));
[v _FSR2L `Vuc ~T0 @X0 0 e@4057 ]
"18355
[; ;Source\pic18f47j53.h: 18355: extern volatile unsigned char FSR2H __attribute__((address(0xFDA)));
[v _FSR2H `Vuc ~T0 @X0 0 e@4058 ]
"19126
[; ;Source\pic18f47j53.h: 19126: extern volatile unsigned char TABLAT __attribute__((address(0xFF5)));
[v _TABLAT `Vuc ~T0 @X0 0 e@4085 ]
"19195
[; ;Source\pic18f47j53.h: 19195: extern volatile unsigned char TBLPTRU __attribute__((address(0xFF8)));
[v _TBLPTRU `Vuc ~T0 @X0 0 e@4088 ]
"19175
[; ;Source\pic18f47j53.h: 19175: extern volatile unsigned char TBLPTRH __attribute__((address(0xFF7)));
[v _TBLPTRH `Vuc ~T0 @X0 0 e@4087 ]
"19155
[; ;Source\pic18f47j53.h: 19155: extern volatile unsigned char TBLPTRL __attribute__((address(0xFF6)));
[v _TBLPTRL `Vuc ~T0 @X0 0 e@4086 ]
"19106
[; ;Source\pic18f47j53.h: 19106: extern volatile unsigned char PRODH __attribute__((address(0xFF4)));
[v _PRODH `Vuc ~T0 @X0 0 e@4084 ]
"19086
[; ;Source\pic18f47j53.h: 19086: extern volatile unsigned char PRODL __attribute__((address(0xFF3)));
[v _PRODL `Vuc ~T0 @X0 0 e@4083 ]
"19258
[; ;Source\pic18f47j53.h: 19258: extern volatile unsigned char PCLATU __attribute__((address(0xFFB)));
[v _PCLATU `Vuc ~T0 @X0 0 e@4091 ]
"19238
[; ;Source\pic18f47j53.h: 19238: extern volatile unsigned char PCLATH __attribute__((address(0xFFA)));
[v _PCLATH `Vuc ~T0 @X0 0 e@4090 ]
"18737
[; ;Source\pic18f47j53.h: 18737: extern volatile unsigned char INDF0 __attribute__((address(0xFEF)));
[v _INDF0 `Vuc ~T0 @X0 0 e@4079 ]
"18650
[; ;Source\pic18f47j53.h: 18650: extern volatile unsigned char FSR0H __attribute__((address(0xFEA)));
[v _FSR0H `Vuc ~T0 @X0 0 e@4074 ]
"19346
[; ;Source\pic18f47j53.h: 19346: extern volatile unsigned char TOSL __attribute__((address(0xFFD)));
[v _TOSL `Vuc ~T0 @X0 0 e@4093 ]
"19366
[; ;Source\pic18f47j53.h: 19366: extern volatile unsigned char TOSH __attribute__((address(0xFFE)));
[v _TOSH `Vuc ~T0 @X0 0 e@4094 ]
"19386
[; ;Source\pic18f47j53.h: 19386: extern volatile unsigned char TOSU __attribute__((address(0xFFF)));
[v _TOSU `Vuc ~T0 @X0 0 e@4095 ]
"18476
[; ;Source\pic18f47j53.h: 18476: extern volatile unsigned char FSR1L __attribute__((address(0xFE1)));
[v _FSR1L `Vuc ~T0 @X0 0 e@4065 ]
"18496
[; ;Source\pic18f47j53.h: 18496: extern volatile unsigned char FSR1H __attribute__((address(0xFE2)));
[v _FSR1H `Vuc ~T0 @X0 0 e@4066 ]
"3014 Source/FreeRTOS/include/task.h
[v _vTaskSwitchContext `(v ~T0 @X0 0 ef ]
"12025 Source\pic18f47j53.h
[; ;Source\pic18f47j53.h: 12025:     struct {
[s S553 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S553 . TMR1IF TMR2IF CCP1IF SSP1IF TX1IF RC1IF ADIF PMPIF ]
"12035
[; ;Source\pic18f47j53.h: 12035:     struct {
[s S554 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S554 . . SSPIF TXIF RCIF ]
"12041
[; ;Source\pic18f47j53.h: 12041:     struct {
[s S555 :7 `uc 1 :1 `uc 1 ]
[n S555 . . PSPIF ]
"12024
[; ;Source\pic18f47j53.h: 12024: typedef union {
[u S552 `S553 1 `S554 1 `S555 1 ]
[n S552 . . . . ]
"12046
[; ;Source\pic18f47j53.h: 12046: extern volatile PIR1bits_t PIR1bits __attribute__((address(0xF9E)));
[v _PIR1bits `VS552 ~T0 @X0 0 e@3998 ]
"2924 Source/FreeRTOS/include/task.h
[v _xTaskIncrementTick `(c ~T0 @X0 0 ef ]
"18237 Source\pic18f47j53.h
[; ;Source\pic18f47j53.h: 18237: extern volatile unsigned char TMR0H __attribute__((address(0xFD7)));
[v _TMR0H `Vuc ~T0 @X0 0 e@4055 ]
"18217
[; ;Source\pic18f47j53.h: 18217: extern volatile unsigned char TMR0L __attribute__((address(0xFD6)));
[v _TMR0L `Vuc ~T0 @X0 0 e@4054 ]
[t ~ __interrupt . k ]
[t T11 __interrupt high_priority ]
"8266
[; ;Source\pic18f47j53.h: 8266: extern volatile unsigned char TMR3H __attribute__((address(0xF7B)));
[v _TMR3H `Vuc ~T0 @X0 0 e@3963 ]
"8246
[; ;Source\pic18f47j53.h: 8246: extern volatile unsigned char TMR3L __attribute__((address(0xF7A)));
[v _TMR3L `Vuc ~T0 @X0 0 e@3962 ]
"14814
[; ;Source\pic18f47j53.h: 14814: extern volatile unsigned char CCPR1L __attribute__((address(0xFBB)));
[v _CCPR1L `Vuc ~T0 @X0 0 e@4027 ]
"14834
[; ;Source\pic18f47j53.h: 14834: extern volatile unsigned char CCPR1H __attribute__((address(0xFBC)));
[v _CCPR1H `Vuc ~T0 @X0 0 e@4028 ]
"14615
[; ;Source\pic18f47j53.h: 14615: extern volatile unsigned char CCP1CON __attribute__((address(0xFBA)));
[v _CCP1CON `Vuc ~T0 @X0 0 e@4026 ]
"5873
[; ;Source\pic18f47j53.h: 5873: extern volatile unsigned char CCPTMRS0 __attribute__((address(0xF52)));
[v _CCPTMRS0 `Vuc ~T0 @X0 0 e@3922 ]
"8128
[; ;Source\pic18f47j53.h: 8128: extern volatile unsigned char T3CON __attribute__((address(0xF79)));
[v _T3CON `Vuc ~T0 @X0 0 e@3961 ]
"17389
[; ;Source\pic18f47j53.h: 17389:     struct {
[s S808 :1 `uc 1 ]
[n S808 . NOT_BOR ]
"17392
[; ;Source\pic18f47j53.h: 17392:     struct {
[s S809 :1 `uc 1 :1 `uc 1 ]
[n S809 . . NOT_POR ]
"17396
[; ;Source\pic18f47j53.h: 17396:     struct {
[s S810 :2 `uc 1 :1 `uc 1 ]
[n S810 . . NOT_PD ]
"17400
[; ;Source\pic18f47j53.h: 17400:     struct {
[s S811 :3 `uc 1 :1 `uc 1 ]
[n S811 . . NOT_TO ]
"17404
[; ;Source\pic18f47j53.h: 17404:     struct {
[s S812 :4 `uc 1 :1 `uc 1 ]
[n S812 . . NOT_RI ]
"17408
[; ;Source\pic18f47j53.h: 17408:     struct {
[s S813 :5 `uc 1 :1 `uc 1 ]
[n S813 . . NOT_CM ]
"17412
[; ;Source\pic18f47j53.h: 17412:     struct {
[s S814 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S814 . nBOR nPOR nPD nTO nRI nCM . IPEN ]
"17422
[; ;Source\pic18f47j53.h: 17422:     struct {
[s S815 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S815 . BOR POR PD TO RI CM ]
"17388
[; ;Source\pic18f47j53.h: 17388: typedef union {
[u S807 `S808 1 `S809 1 `S810 1 `S811 1 `S812 1 `S813 1 `S814 1 `S815 1 ]
[n S807 . . . . . . . . . ]
"17431
[; ;Source\pic18f47j53.h: 17431: extern volatile RCONbits_t RCONbits __attribute__((address(0xFD0)));
[v _RCONbits `VS807 ~T0 @X0 0 e@4048 ]
"12117
[; ;Source\pic18f47j53.h: 12117:     struct {
[s S557 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S557 . TMR1IP TMR2IP CCP1IP SSP1IP TX1IP RC1IP ADIP PMPIP ]
"12127
[; ;Source\pic18f47j53.h: 12127:     struct {
[s S558 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S558 . . SSPIP TXIP RCIP ]
"12133
[; ;Source\pic18f47j53.h: 12133:     struct {
[s S559 :7 `uc 1 :1 `uc 1 ]
[n S559 . . PSPIP ]
"12116
[; ;Source\pic18f47j53.h: 12116: typedef union {
[u S556 `S557 1 `S558 1 `S559 1 ]
[n S556 . . . . ]
"12138
[; ;Source\pic18f47j53.h: 12138: extern volatile IPR1bits_t IPR1bits __attribute__((address(0xF9F)));
[v _IPR1bits `VS556 ~T0 @X0 0 e@3999 ]
"11933
[; ;Source\pic18f47j53.h: 11933:     struct {
[s S549 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S549 . TMR1IE TMR2IE CCP1IE SSP1IE TX1IE RC1IE ADIE PMPIE ]
"11943
[; ;Source\pic18f47j53.h: 11943:     struct {
[s S550 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S550 . . SSPIE TXIE RCIE ]
"11949
[; ;Source\pic18f47j53.h: 11949:     struct {
[s S551 :7 `uc 1 :1 `uc 1 ]
[n S551 . . PSPIE ]
"11932
[; ;Source\pic18f47j53.h: 11932: typedef union {
[u S548 `S549 1 `S550 1 `S551 1 ]
[n S548 . . . . ]
"11954
[; ;Source\pic18f47j53.h: 11954: extern volatile PIE1bits_t PIE1bits __attribute__((address(0xF9D)));
[v _PIE1bits `VS548 ~T0 @X0 0 e@3997 ]
"57 Source\pic18f47j53.h
[; ;Source\pic18f47j53.h: 57: __asm("ADCTRIG equ 0EB8h");
[; <" ADCTRIG equ 0EB8h ;# ">
"113
[; ;Source\pic18f47j53.h: 113: __asm("PMDIS0 equ 0EB9h");
[; <" PMDIS0 equ 0EB9h ;# ">
"118
[; ;Source\pic18f47j53.h: 118: __asm("PD0 equ 0EB9h");
[; <" PD0 equ 0EB9h ;# ">
"419
[; ;Source\pic18f47j53.h: 419: __asm("PMDIS1 equ 0EBAh");
[; <" PMDIS1 equ 0EBAh ;# ">
"424
[; ;Source\pic18f47j53.h: 424: __asm("PD1 equ 0EBAh");
[; <" PD1 equ 0EBAh ;# ">
"657
[; ;Source\pic18f47j53.h: 657: __asm("PMDIS2 equ 0EBBh");
[; <" PMDIS2 equ 0EBBh ;# ">
"662
[; ;Source\pic18f47j53.h: 662: __asm("PD2 equ 0EBBh");
[; <" PD2 equ 0EBBh ;# ">
"867
[; ;Source\pic18f47j53.h: 867: __asm("PMDIS3 equ 0EBCh");
[; <" PMDIS3 equ 0EBCh ;# ">
"872
[; ;Source\pic18f47j53.h: 872: __asm("PD3 equ 0EBCh");
[; <" PD3 equ 0EBCh ;# ">
"1105
[; ;Source\pic18f47j53.h: 1105: __asm("PPSCON equ 0EBFh");
[; <" PPSCON equ 0EBFh ;# ">
"1125
[; ;Source\pic18f47j53.h: 1125: __asm("RPOR0 equ 0EC0h");
[; <" RPOR0 equ 0EC0h ;# ">
"1132
[; ;Source\pic18f47j53.h: 1132: __asm("RPOR1 equ 0EC1h");
[; <" RPOR1 equ 0EC1h ;# ">
"1139
[; ;Source\pic18f47j53.h: 1139: __asm("RPOR2 equ 0EC2h");
[; <" RPOR2 equ 0EC2h ;# ">
"1146
[; ;Source\pic18f47j53.h: 1146: __asm("RPOR3 equ 0EC3h");
[; <" RPOR3 equ 0EC3h ;# ">
"1153
[; ;Source\pic18f47j53.h: 1153: __asm("RPOR4 equ 0EC4h");
[; <" RPOR4 equ 0EC4h ;# ">
"1160
[; ;Source\pic18f47j53.h: 1160: __asm("RPOR5 equ 0EC5h");
[; <" RPOR5 equ 0EC5h ;# ">
"1167
[; ;Source\pic18f47j53.h: 1167: __asm("RPOR6 equ 0EC6h");
[; <" RPOR6 equ 0EC6h ;# ">
"1174
[; ;Source\pic18f47j53.h: 1174: __asm("RPOR7 equ 0EC7h");
[; <" RPOR7 equ 0EC7h ;# ">
"1181
[; ;Source\pic18f47j53.h: 1181: __asm("RPOR8 equ 0EC8h");
[; <" RPOR8 equ 0EC8h ;# ">
"1188
[; ;Source\pic18f47j53.h: 1188: __asm("RPOR9 equ 0EC9h");
[; <" RPOR9 equ 0EC9h ;# ">
"1195
[; ;Source\pic18f47j53.h: 1195: __asm("RPOR10 equ 0ECAh");
[; <" RPOR10 equ 0ECAh ;# ">
"1202
[; ;Source\pic18f47j53.h: 1202: __asm("RPOR11 equ 0ECBh");
[; <" RPOR11 equ 0ECBh ;# ">
"1209
[; ;Source\pic18f47j53.h: 1209: __asm("RPOR12 equ 0ECCh");
[; <" RPOR12 equ 0ECCh ;# ">
"1216
[; ;Source\pic18f47j53.h: 1216: __asm("RPOR13 equ 0ECDh");
[; <" RPOR13 equ 0ECDh ;# ">
"1223
[; ;Source\pic18f47j53.h: 1223: __asm("RPOR17 equ 0ED1h");
[; <" RPOR17 equ 0ED1h ;# ">
"1230
[; ;Source\pic18f47j53.h: 1230: __asm("RPOR18 equ 0ED2h");
[; <" RPOR18 equ 0ED2h ;# ">
"1237
[; ;Source\pic18f47j53.h: 1237: __asm("RPOR19 equ 0ED3h");
[; <" RPOR19 equ 0ED3h ;# ">
"1244
[; ;Source\pic18f47j53.h: 1244: __asm("RPOR20 equ 0ED4h");
[; <" RPOR20 equ 0ED4h ;# ">
"1251
[; ;Source\pic18f47j53.h: 1251: __asm("RPOR21 equ 0ED5h");
[; <" RPOR21 equ 0ED5h ;# ">
"1258
[; ;Source\pic18f47j53.h: 1258: __asm("RPOR22 equ 0ED6h");
[; <" RPOR22 equ 0ED6h ;# ">
"1265
[; ;Source\pic18f47j53.h: 1265: __asm("RPOR23 equ 0ED7h");
[; <" RPOR23 equ 0ED7h ;# ">
"1272
[; ;Source\pic18f47j53.h: 1272: __asm("RPOR24 equ 0ED8h");
[; <" RPOR24 equ 0ED8h ;# ">
"1279
[; ;Source\pic18f47j53.h: 1279: __asm("RPINR1 equ 0EE1h");
[; <" RPINR1 equ 0EE1h ;# ">
"1286
[; ;Source\pic18f47j53.h: 1286: __asm("RPINR2 equ 0EE2h");
[; <" RPINR2 equ 0EE2h ;# ">
"1293
[; ;Source\pic18f47j53.h: 1293: __asm("RPINR3 equ 0EE3h");
[; <" RPINR3 equ 0EE3h ;# ">
"1300
[; ;Source\pic18f47j53.h: 1300: __asm("RPINR4 equ 0EE4h");
[; <" RPINR4 equ 0EE4h ;# ">
"1307
[; ;Source\pic18f47j53.h: 1307: __asm("RPINR6 equ 0EE6h");
[; <" RPINR6 equ 0EE6h ;# ">
"1314
[; ;Source\pic18f47j53.h: 1314: __asm("RPINR15 equ 0EE7h");
[; <" RPINR15 equ 0EE7h ;# ">
"1321
[; ;Source\pic18f47j53.h: 1321: __asm("RPINR7 equ 0EE8h");
[; <" RPINR7 equ 0EE8h ;# ">
"1328
[; ;Source\pic18f47j53.h: 1328: __asm("RPINR8 equ 0EE9h");
[; <" RPINR8 equ 0EE9h ;# ">
"1335
[; ;Source\pic18f47j53.h: 1335: __asm("RPINR9 equ 0EEAh");
[; <" RPINR9 equ 0EEAh ;# ">
"1342
[; ;Source\pic18f47j53.h: 1342: __asm("RPINR12 equ 0EF2h");
[; <" RPINR12 equ 0EF2h ;# ">
"1349
[; ;Source\pic18f47j53.h: 1349: __asm("RPINR13 equ 0EF3h");
[; <" RPINR13 equ 0EF3h ;# ">
"1356
[; ;Source\pic18f47j53.h: 1356: __asm("RPINR14 equ 0EF4h");
[; <" RPINR14 equ 0EF4h ;# ">
"1363
[; ;Source\pic18f47j53.h: 1363: __asm("RPINR16 equ 0EF7h");
[; <" RPINR16 equ 0EF7h ;# ">
"1370
[; ;Source\pic18f47j53.h: 1370: __asm("RPINR17 equ 0EF8h");
[; <" RPINR17 equ 0EF8h ;# ">
"1377
[; ;Source\pic18f47j53.h: 1377: __asm("RPINR21 equ 0EFCh");
[; <" RPINR21 equ 0EFCh ;# ">
"1384
[; ;Source\pic18f47j53.h: 1384: __asm("RPINR22 equ 0EFDh");
[; <" RPINR22 equ 0EFDh ;# ">
"1391
[; ;Source\pic18f47j53.h: 1391: __asm("RPINR23 equ 0EFEh");
[; <" RPINR23 equ 0EFEh ;# ">
"1398
[; ;Source\pic18f47j53.h: 1398: __asm("RPINR24 equ 0EFFh");
[; <" RPINR24 equ 0EFFh ;# ">
"1405
[; ;Source\pic18f47j53.h: 1405: __asm("CCP10CON equ 0F00h");
[; <" CCP10CON equ 0F00h ;# ">
"1469
[; ;Source\pic18f47j53.h: 1469: __asm("CCPR10L equ 0F01h");
[; <" CCPR10L equ 0F01h ;# ">
"1489
[; ;Source\pic18f47j53.h: 1489: __asm("CCPR10H equ 0F02h");
[; <" CCPR10H equ 0F02h ;# ">
"1509
[; ;Source\pic18f47j53.h: 1509: __asm("CCP9CON equ 0F03h");
[; <" CCP9CON equ 0F03h ;# ">
"1573
[; ;Source\pic18f47j53.h: 1573: __asm("CCPR9L equ 0F04h");
[; <" CCPR9L equ 0F04h ;# ">
"1593
[; ;Source\pic18f47j53.h: 1593: __asm("CCPR9H equ 0F05h");
[; <" CCPR9H equ 0F05h ;# ">
"1613
[; ;Source\pic18f47j53.h: 1613: __asm("CCP8CON equ 0F06h");
[; <" CCP8CON equ 0F06h ;# ">
"1677
[; ;Source\pic18f47j53.h: 1677: __asm("CCPR8L equ 0F07h");
[; <" CCPR8L equ 0F07h ;# ">
"1697
[; ;Source\pic18f47j53.h: 1697: __asm("CCPR8H equ 0F08h");
[; <" CCPR8H equ 0F08h ;# ">
"1717
[; ;Source\pic18f47j53.h: 1717: __asm("CCP7CON equ 0F09h");
[; <" CCP7CON equ 0F09h ;# ">
"1781
[; ;Source\pic18f47j53.h: 1781: __asm("CCPR7L equ 0F0Ah");
[; <" CCPR7L equ 0F0Ah ;# ">
"1801
[; ;Source\pic18f47j53.h: 1801: __asm("CCPR7H equ 0F0Bh");
[; <" CCPR7H equ 0F0Bh ;# ">
"1821
[; ;Source\pic18f47j53.h: 1821: __asm("CCP6CON equ 0F0Ch");
[; <" CCP6CON equ 0F0Ch ;# ">
"1885
[; ;Source\pic18f47j53.h: 1885: __asm("CCPR6L equ 0F0Dh");
[; <" CCPR6L equ 0F0Dh ;# ">
"1905
[; ;Source\pic18f47j53.h: 1905: __asm("CCPR6H equ 0F0Eh");
[; <" CCPR6H equ 0F0Eh ;# ">
"1925
[; ;Source\pic18f47j53.h: 1925: __asm("CCP5CON equ 0F0Fh");
[; <" CCP5CON equ 0F0Fh ;# ">
"1989
[; ;Source\pic18f47j53.h: 1989: __asm("CCPR5L equ 0F10h");
[; <" CCPR5L equ 0F10h ;# ">
"2009
[; ;Source\pic18f47j53.h: 2009: __asm("CCPR5H equ 0F11h");
[; <" CCPR5H equ 0F11h ;# ">
"2029
[; ;Source\pic18f47j53.h: 2029: __asm("CCP4CON equ 0F12h");
[; <" CCP4CON equ 0F12h ;# ">
"2093
[; ;Source\pic18f47j53.h: 2093: __asm("CCPR4L equ 0F13h");
[; <" CCPR4L equ 0F13h ;# ">
"2113
[; ;Source\pic18f47j53.h: 2113: __asm("CCPR4H equ 0F14h");
[; <" CCPR4H equ 0F14h ;# ">
"2133
[; ;Source\pic18f47j53.h: 2133: __asm("CCP3CON equ 0F15h");
[; <" CCP3CON equ 0F15h ;# ">
"2215
[; ;Source\pic18f47j53.h: 2215: __asm("CCPR3L equ 0F16h");
[; <" CCPR3L equ 0F16h ;# ">
"2235
[; ;Source\pic18f47j53.h: 2235: __asm("CCPR3H equ 0F17h");
[; <" CCPR3H equ 0F17h ;# ">
"2255
[; ;Source\pic18f47j53.h: 2255: __asm("ECCP3DEL equ 0F18h");
[; <" ECCP3DEL equ 0F18h ;# ">
"2325
[; ;Source\pic18f47j53.h: 2325: __asm("ECCP3AS equ 0F19h");
[; <" ECCP3AS equ 0F19h ;# ">
"2407
[; ;Source\pic18f47j53.h: 2407: __asm("PSTR3CON equ 0F1Ah");
[; <" PSTR3CON equ 0F1Ah ;# ">
"2518
[; ;Source\pic18f47j53.h: 2518: __asm("T8CON equ 0F1Bh");
[; <" T8CON equ 0F1Bh ;# ">
"2589
[; ;Source\pic18f47j53.h: 2589: __asm("PR8 equ 0F1Ch");
[; <" PR8 equ 0F1Ch ;# ">
"2609
[; ;Source\pic18f47j53.h: 2609: __asm("TMR8 equ 0F1Dh");
[; <" TMR8 equ 0F1Dh ;# ">
"2629
[; ;Source\pic18f47j53.h: 2629: __asm("T6CON equ 0F1Eh");
[; <" T6CON equ 0F1Eh ;# ">
"2700
[; ;Source\pic18f47j53.h: 2700: __asm("PR6 equ 0F1Fh");
[; <" PR6 equ 0F1Fh ;# ">
"2720
[; ;Source\pic18f47j53.h: 2720: __asm("TMR6 equ 0F20h");
[; <" TMR6 equ 0F20h ;# ">
"2740
[; ;Source\pic18f47j53.h: 2740: __asm("T5GCON equ 0F21h");
[; <" T5GCON equ 0F21h ;# ">
"2853
[; ;Source\pic18f47j53.h: 2853: __asm("T5CON equ 0F22h");
[; <" T5CON equ 0F22h ;# ">
"2955
[; ;Source\pic18f47j53.h: 2955: __asm("TMR5L equ 0F23h");
[; <" TMR5L equ 0F23h ;# ">
"2975
[; ;Source\pic18f47j53.h: 2975: __asm("TMR5H equ 0F24h");
[; <" TMR5H equ 0F24h ;# ">
"2995
[; ;Source\pic18f47j53.h: 2995: __asm("CM3CON equ 0F25h");
[; <" CM3CON equ 0F25h ;# ">
"3122
[; ;Source\pic18f47j53.h: 3122: __asm("UEP0 equ 0F26h");
[; <" UEP0 equ 0F26h ;# ">
"3230
[; ;Source\pic18f47j53.h: 3230: __asm("UEP1 equ 0F27h");
[; <" UEP1 equ 0F27h ;# ">
"3338
[; ;Source\pic18f47j53.h: 3338: __asm("UEP2 equ 0F28h");
[; <" UEP2 equ 0F28h ;# ">
"3446
[; ;Source\pic18f47j53.h: 3446: __asm("UEP3 equ 0F29h");
[; <" UEP3 equ 0F29h ;# ">
"3554
[; ;Source\pic18f47j53.h: 3554: __asm("UEP4 equ 0F2Ah");
[; <" UEP4 equ 0F2Ah ;# ">
"3662
[; ;Source\pic18f47j53.h: 3662: __asm("UEP5 equ 0F2Bh");
[; <" UEP5 equ 0F2Bh ;# ">
"3770
[; ;Source\pic18f47j53.h: 3770: __asm("UEP6 equ 0F2Ch");
[; <" UEP6 equ 0F2Ch ;# ">
"3878
[; ;Source\pic18f47j53.h: 3878: __asm("UEP7 equ 0F2Dh");
[; <" UEP7 equ 0F2Dh ;# ">
"3986
[; ;Source\pic18f47j53.h: 3986: __asm("UEP8 equ 0F2Eh");
[; <" UEP8 equ 0F2Eh ;# ">
"4062
[; ;Source\pic18f47j53.h: 4062: __asm("UEP9 equ 0F2Fh");
[; <" UEP9 equ 0F2Fh ;# ">
"4138
[; ;Source\pic18f47j53.h: 4138: __asm("UEP10 equ 0F30h");
[; <" UEP10 equ 0F30h ;# ">
"4214
[; ;Source\pic18f47j53.h: 4214: __asm("UEP11 equ 0F31h");
[; <" UEP11 equ 0F31h ;# ">
"4290
[; ;Source\pic18f47j53.h: 4290: __asm("UEP12 equ 0F32h");
[; <" UEP12 equ 0F32h ;# ">
"4366
[; ;Source\pic18f47j53.h: 4366: __asm("UEP13 equ 0F33h");
[; <" UEP13 equ 0F33h ;# ">
"4442
[; ;Source\pic18f47j53.h: 4442: __asm("UEP14 equ 0F34h");
[; <" UEP14 equ 0F34h ;# ">
"4518
[; ;Source\pic18f47j53.h: 4518: __asm("UEP15 equ 0F35h");
[; <" UEP15 equ 0F35h ;# ">
"4594
[; ;Source\pic18f47j53.h: 4594: __asm("UIE equ 0F36h");
[; <" UIE equ 0F36h ;# ">
"4650
[; ;Source\pic18f47j53.h: 4650: __asm("UEIE equ 0F37h");
[; <" UEIE equ 0F37h ;# ">
"4701
[; ;Source\pic18f47j53.h: 4701: __asm("UADDR equ 0F38h");
[; <" UADDR equ 0F38h ;# ">
"4765
[; ;Source\pic18f47j53.h: 4765: __asm("UCFG equ 0F39h");
[; <" UCFG equ 0F39h ;# ">
"4836
[; ;Source\pic18f47j53.h: 4836: __asm("RTCVALL equ 0F3Ah");
[; <" RTCVALL equ 0F3Ah ;# ">
"4856
[; ;Source\pic18f47j53.h: 4856: __asm("RTCVALH equ 0F3Bh");
[; <" RTCVALH equ 0F3Bh ;# ">
"4926
[; ;Source\pic18f47j53.h: 4926: __asm("PADCFG1 equ 0F3Ch");
[; <" PADCFG1 equ 0F3Ch ;# ">
"4958
[; ;Source\pic18f47j53.h: 4958: __asm("REFOCON equ 0F3Dh");
[; <" REFOCON equ 0F3Dh ;# ">
"5023
[; ;Source\pic18f47j53.h: 5023: __asm("RTCCAL equ 0F3Eh");
[; <" RTCCAL equ 0F3Eh ;# ">
"5093
[; ;Source\pic18f47j53.h: 5093: __asm("RTCCFG equ 0F3Fh");
[; <" RTCCFG equ 0F3Fh ;# ">
"5150
[; ;Source\pic18f47j53.h: 5150: __asm("ODCON3 equ 0F40h");
[; <" ODCON3 equ 0F40h ;# ">
"5176
[; ;Source\pic18f47j53.h: 5176: __asm("ODCON2 equ 0F41h");
[; <" ODCON2 equ 0F41h ;# ">
"5214
[; ;Source\pic18f47j53.h: 5214: __asm("ODCON1 equ 0F42h");
[; <" ODCON1 equ 0F42h ;# ">
"5276
[; ;Source\pic18f47j53.h: 5276: __asm("ALRMVALL equ 0F44h");
[; <" ALRMVALL equ 0F44h ;# ">
"5296
[; ;Source\pic18f47j53.h: 5296: __asm("ALRMVALH equ 0F45h");
[; <" ALRMVALH equ 0F45h ;# ">
"5316
[; ;Source\pic18f47j53.h: 5316: __asm("ALRMRPT equ 0F46h");
[; <" ALRMRPT equ 0F46h ;# ">
"5386
[; ;Source\pic18f47j53.h: 5386: __asm("ALRMCFG equ 0F47h");
[; <" ALRMCFG equ 0F47h ;# ">
"5462
[; ;Source\pic18f47j53.h: 5462: __asm("ANCON0 equ 0F48h");
[; <" ANCON0 equ 0F48h ;# ">
"5524
[; ;Source\pic18f47j53.h: 5524: __asm("ANCON1 equ 0F49h");
[; <" ANCON1 equ 0F49h ;# ">
"5584
[; ;Source\pic18f47j53.h: 5584: __asm("DSWAKEL equ 0F4Ah");
[; <" DSWAKEL equ 0F4Ah ;# ">
"5636
[; ;Source\pic18f47j53.h: 5636: __asm("DSWAKEH equ 0F4Bh");
[; <" DSWAKEH equ 0F4Bh ;# ">
"5656
[; ;Source\pic18f47j53.h: 5656: __asm("DSCONL equ 0F4Ch");
[; <" DSCONL equ 0F4Ch ;# ">
"5688
[; ;Source\pic18f47j53.h: 5688: __asm("DSCONH equ 0F4Dh");
[; <" DSCONH equ 0F4Dh ;# ">
"5721
[; ;Source\pic18f47j53.h: 5721: __asm("DSGPR0 equ 0F4Eh");
[; <" DSGPR0 equ 0F4Eh ;# ">
"5741
[; ;Source\pic18f47j53.h: 5741: __asm("DSGPR1 equ 0F4Fh");
[; <" DSGPR1 equ 0F4Fh ;# ">
"5761
[; ;Source\pic18f47j53.h: 5761: __asm("CCPTMRS2 equ 0F50h");
[; <" CCPTMRS2 equ 0F50h ;# ">
"5808
[; ;Source\pic18f47j53.h: 5808: __asm("CCPTMRS1 equ 0F51h");
[; <" CCPTMRS1 equ 0F51h ;# ">
"5875
[; ;Source\pic18f47j53.h: 5875: __asm("CCPTMRS0 equ 0F52h");
[; <" CCPTMRS0 equ 0F52h ;# ">
"5957
[; ;Source\pic18f47j53.h: 5957: __asm("CVRCON equ 0F53h");
[; <" CVRCON equ 0F53h ;# ">
"6036
[; ;Source\pic18f47j53.h: 6036: __asm("PMSTATL equ 0F54h");
[; <" PMSTATL equ 0F54h ;# ">
"6087
[; ;Source\pic18f47j53.h: 6087: __asm("PMSTATH equ 0F55h");
[; <" PMSTATH equ 0F55h ;# ">
"6138
[; ;Source\pic18f47j53.h: 6138: __asm("PMEL equ 0F56h");
[; <" PMEL equ 0F56h ;# ">
"6208
[; ;Source\pic18f47j53.h: 6208: __asm("PMEH equ 0F57h");
[; <" PMEH equ 0F57h ;# ">
"6278
[; ;Source\pic18f47j53.h: 6278: __asm("PMDIN2L equ 0F58h");
[; <" PMDIN2L equ 0F58h ;# ">
"6298
[; ;Source\pic18f47j53.h: 6298: __asm("PMDIN2H equ 0F59h");
[; <" PMDIN2H equ 0F59h ;# ">
"6318
[; ;Source\pic18f47j53.h: 6318: __asm("PMDOUT2L equ 0F5Ah");
[; <" PMDOUT2L equ 0F5Ah ;# ">
"6338
[; ;Source\pic18f47j53.h: 6338: __asm("PMDOUT2H equ 0F5Bh");
[; <" PMDOUT2H equ 0F5Bh ;# ">
"6358
[; ;Source\pic18f47j53.h: 6358: __asm("PMMODEL equ 0F5Ch");
[; <" PMMODEL equ 0F5Ch ;# ">
"6440
[; ;Source\pic18f47j53.h: 6440: __asm("PMMODEH equ 0F5Dh");
[; <" PMMODEH equ 0F5Dh ;# ">
"6502
[; ;Source\pic18f47j53.h: 6502: __asm("PMCONL equ 0F5Eh");
[; <" PMCONL equ 0F5Eh ;# ">
"6559
[; ;Source\pic18f47j53.h: 6559: __asm("PMCONH equ 0F5Fh");
[; <" PMCONH equ 0F5Fh ;# ">
"6616
[; ;Source\pic18f47j53.h: 6616: __asm("UFRM equ 0F60h");
[; <" UFRM equ 0F60h ;# ">
"6623
[; ;Source\pic18f47j53.h: 6623: __asm("UFRML equ 0F60h");
[; <" UFRML equ 0F60h ;# ">
"6701
[; ;Source\pic18f47j53.h: 6701: __asm("UFRMH equ 0F61h");
[; <" UFRMH equ 0F61h ;# ">
"6741
[; ;Source\pic18f47j53.h: 6741: __asm("UIR equ 0F62h");
[; <" UIR equ 0F62h ;# ">
"6797
[; ;Source\pic18f47j53.h: 6797: __asm("UEIR equ 0F63h");
[; <" UEIR equ 0F63h ;# ">
"6848
[; ;Source\pic18f47j53.h: 6848: __asm("USTAT equ 0F64h");
[; <" USTAT equ 0F64h ;# ">
"6908
[; ;Source\pic18f47j53.h: 6908: __asm("UCON equ 0F65h");
[; <" UCON equ 0F65h ;# ">
"6959
[; ;Source\pic18f47j53.h: 6959: __asm("DMABCH equ 0F66h");
[; <" DMABCH equ 0F66h ;# ">
"6979
[; ;Source\pic18f47j53.h: 6979: __asm("DMABCL equ 0F67h");
[; <" DMABCL equ 0F67h ;# ">
"6999
[; ;Source\pic18f47j53.h: 6999: __asm("RXADDRH equ 0F68h");
[; <" RXADDRH equ 0F68h ;# ">
"7019
[; ;Source\pic18f47j53.h: 7019: __asm("RXADDRL equ 0F69h");
[; <" RXADDRL equ 0F69h ;# ">
"7039
[; ;Source\pic18f47j53.h: 7039: __asm("TXADDRH equ 0F6Ah");
[; <" TXADDRH equ 0F6Ah ;# ">
"7059
[; ;Source\pic18f47j53.h: 7059: __asm("TXADDRL equ 0F6Bh");
[; <" TXADDRL equ 0F6Bh ;# ">
"7079
[; ;Source\pic18f47j53.h: 7079: __asm("PMDIN1L equ 0F6Ch");
[; <" PMDIN1L equ 0F6Ch ;# ">
"7099
[; ;Source\pic18f47j53.h: 7099: __asm("PMDIN1H equ 0F6Dh");
[; <" PMDIN1H equ 0F6Dh ;# ">
"7119
[; ;Source\pic18f47j53.h: 7119: __asm("PMADDRL equ 0F6Eh");
[; <" PMADDRL equ 0F6Eh ;# ">
"7139
[; ;Source\pic18f47j53.h: 7139: __asm("PMDOUT1L equ 0F6Eh");
[; <" PMDOUT1L equ 0F6Eh ;# ">
"7159
[; ;Source\pic18f47j53.h: 7159: __asm("PMADDRH equ 0F6Fh");
[; <" PMADDRH equ 0F6Fh ;# ">
"7185
[; ;Source\pic18f47j53.h: 7185: __asm("PMDOUT1H equ 0F6Fh");
[; <" PMDOUT1H equ 0F6Fh ;# ">
"7205
[; ;Source\pic18f47j53.h: 7205: __asm("CMSTAT equ 0F70h");
[; <" CMSTAT equ 0F70h ;# ">
"7210
[; ;Source\pic18f47j53.h: 7210: __asm("CMSTATUS equ 0F70h");
[; <" CMSTATUS equ 0F70h ;# ">
"7267
[; ;Source\pic18f47j53.h: 7267: __asm("SSP2CON2 equ 0F71h");
[; <" SSP2CON2 equ 0F71h ;# ">
"7445
[; ;Source\pic18f47j53.h: 7445: __asm("SSP2CON1 equ 0F72h");
[; <" SSP2CON1 equ 0F72h ;# ">
"7565
[; ;Source\pic18f47j53.h: 7565: __asm("SSP2STAT equ 0F73h");
[; <" SSP2STAT equ 0F73h ;# ">
"7867
[; ;Source\pic18f47j53.h: 7867: __asm("SSP2ADD equ 0F74h");
[; <" SSP2ADD equ 0F74h ;# ">
"7937
[; ;Source\pic18f47j53.h: 7937: __asm("SSP2MSK equ 0F74h");
[; <" SSP2MSK equ 0F74h ;# ">
"7999
[; ;Source\pic18f47j53.h: 7999: __asm("SSP2BUF equ 0F75h");
[; <" SSP2BUF equ 0F75h ;# ">
"8019
[; ;Source\pic18f47j53.h: 8019: __asm("T4CON equ 0F76h");
[; <" T4CON equ 0F76h ;# ">
"8090
[; ;Source\pic18f47j53.h: 8090: __asm("PR4 equ 0F77h");
[; <" PR4 equ 0F77h ;# ">
"8110
[; ;Source\pic18f47j53.h: 8110: __asm("TMR4 equ 0F78h");
[; <" TMR4 equ 0F78h ;# ">
"8130
[; ;Source\pic18f47j53.h: 8130: __asm("T3CON equ 0F79h");
[; <" T3CON equ 0F79h ;# ">
"8241
[; ;Source\pic18f47j53.h: 8241: __asm("TMR3 equ 0F7Ah");
[; <" TMR3 equ 0F7Ah ;# ">
"8248
[; ;Source\pic18f47j53.h: 8248: __asm("TMR3L equ 0F7Ah");
[; <" TMR3L equ 0F7Ah ;# ">
"8268
[; ;Source\pic18f47j53.h: 8268: __asm("TMR3H equ 0F7Bh");
[; <" TMR3H equ 0F7Bh ;# ">
"8288
[; ;Source\pic18f47j53.h: 8288: __asm("BAUDCON2 equ 0F7Ch");
[; <" BAUDCON2 equ 0F7Ch ;# ">
"8411
[; ;Source\pic18f47j53.h: 8411: __asm("SPBRGH2 equ 0F7Dh");
[; <" SPBRGH2 equ 0F7Dh ;# ">
"8431
[; ;Source\pic18f47j53.h: 8431: __asm("BAUDCON1 equ 0F7Eh");
[; <" BAUDCON1 equ 0F7Eh ;# ">
"8436
[; ;Source\pic18f47j53.h: 8436: __asm("BAUDCON equ 0F7Eh");
[; <" BAUDCON equ 0F7Eh ;# ">
"8440
[; ;Source\pic18f47j53.h: 8440: __asm("BAUDCTL equ 0F7Eh");
[; <" BAUDCTL equ 0F7Eh ;# ">
"8938
[; ;Source\pic18f47j53.h: 8938: __asm("SPBRGH1 equ 0F7Fh");
[; <" SPBRGH1 equ 0F7Fh ;# ">
"8943
[; ;Source\pic18f47j53.h: 8943: __asm("SPBRGH equ 0F7Fh");
[; <" SPBRGH equ 0F7Fh ;# ">
"8976
[; ;Source\pic18f47j53.h: 8976: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"9257
[; ;Source\pic18f47j53.h: 9257: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"9603
[; ;Source\pic18f47j53.h: 9603: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"9869
[; ;Source\pic18f47j53.h: 9869: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"10040
[; ;Source\pic18f47j53.h: 10040: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"10181
[; ;Source\pic18f47j53.h: 10181: __asm("HLVDCON equ 0F85h");
[; <" HLVDCON equ 0F85h ;# ">
"10251
[; ;Source\pic18f47j53.h: 10251: __asm("DMACON2 equ 0F86h");
[; <" DMACON2 equ 0F86h ;# ">
"10327
[; ;Source\pic18f47j53.h: 10327: __asm("OSCCON2 equ 0F87h");
[; <" OSCCON2 equ 0F87h ;# ">
"10367
[; ;Source\pic18f47j53.h: 10367: __asm("DMACON1 equ 0F88h");
[; <" DMACON1 equ 0F88h ;# ">
"10429
[; ;Source\pic18f47j53.h: 10429: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"10531
[; ;Source\pic18f47j53.h: 10531: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"10643
[; ;Source\pic18f47j53.h: 10643: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"10721
[; ;Source\pic18f47j53.h: 10721: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"10833
[; ;Source\pic18f47j53.h: 10833: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"10885
[; ;Source\pic18f47j53.h: 10885: __asm("PIE4 equ 0F8Eh");
[; <" PIE4 equ 0F8Eh ;# ">
"10947
[; ;Source\pic18f47j53.h: 10947: __asm("PIR4 equ 0F8Fh");
[; <" PIR4 equ 0F8Fh ;# ">
"11009
[; ;Source\pic18f47j53.h: 11009: __asm("IPR4 equ 0F90h");
[; <" IPR4 equ 0F90h ;# ">
"11079
[; ;Source\pic18f47j53.h: 11079: __asm("PIE5 equ 0F91h");
[; <" PIE5 equ 0F91h ;# ">
"11129
[; ;Source\pic18f47j53.h: 11129: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"11186
[; ;Source\pic18f47j53.h: 11186: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"11248
[; ;Source\pic18f47j53.h: 11248: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"11293
[; ;Source\pic18f47j53.h: 11293: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"11355
[; ;Source\pic18f47j53.h: 11355: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"11400
[; ;Source\pic18f47j53.h: 11400: __asm("T3GCON equ 0F97h");
[; <" T3GCON equ 0F97h ;# ">
"11489
[; ;Source\pic18f47j53.h: 11489: __asm("PIR5 equ 0F98h");
[; <" PIR5 equ 0F98h ;# ">
"11539
[; ;Source\pic18f47j53.h: 11539: __asm("IPR5 equ 0F99h");
[; <" IPR5 equ 0F99h ;# ">
"11616
[; ;Source\pic18f47j53.h: 11616: __asm("T1GCON equ 0F9Ah");
[; <" T1GCON equ 0F9Ah ;# ">
"11723
[; ;Source\pic18f47j53.h: 11723: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"11793
[; ;Source\pic18f47j53.h: 11793: __asm("RCSTA2 equ 0F9Ch");
[; <" RCSTA2 equ 0F9Ch ;# ">
"11929
[; ;Source\pic18f47j53.h: 11929: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"12021
[; ;Source\pic18f47j53.h: 12021: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"12113
[; ;Source\pic18f47j53.h: 12113: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"12205
[; ;Source\pic18f47j53.h: 12205: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"12291
[; ;Source\pic18f47j53.h: 12291: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"12377
[; ;Source\pic18f47j53.h: 12377: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"12463
[; ;Source\pic18f47j53.h: 12463: __asm("PIE3 equ 0FA3h");
[; <" PIE3 equ 0FA3h ;# ">
"12573
[; ;Source\pic18f47j53.h: 12573: __asm("PIR3 equ 0FA4h");
[; <" PIR3 equ 0FA4h ;# ">
"12651
[; ;Source\pic18f47j53.h: 12651: __asm("IPR3 equ 0FA5h");
[; <" IPR3 equ 0FA5h ;# ">
"12729
[; ;Source\pic18f47j53.h: 12729: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"12774
[; ;Source\pic18f47j53.h: 12774: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"12794
[; ;Source\pic18f47j53.h: 12794: __asm("TXSTA2 equ 0FA8h");
[; <" TXSTA2 equ 0FA8h ;# ">
"12921
[; ;Source\pic18f47j53.h: 12921: __asm("TXREG2 equ 0FA9h");
[; <" TXREG2 equ 0FA9h ;# ">
"12941
[; ;Source\pic18f47j53.h: 12941: __asm("RCREG2 equ 0FAAh");
[; <" RCREG2 equ 0FAAh ;# ">
"12961
[; ;Source\pic18f47j53.h: 12961: __asm("SPBRG2 equ 0FABh");
[; <" SPBRG2 equ 0FABh ;# ">
"12981
[; ;Source\pic18f47j53.h: 12981: __asm("RCSTA1 equ 0FACh");
[; <" RCSTA1 equ 0FACh ;# ">
"12986
[; ;Source\pic18f47j53.h: 12986: __asm("RCSTA equ 0FACh");
[; <" RCSTA equ 0FACh ;# ">
"13319
[; ;Source\pic18f47j53.h: 13319: __asm("TXSTA1 equ 0FADh");
[; <" TXSTA1 equ 0FADh ;# ">
"13324
[; ;Source\pic18f47j53.h: 13324: __asm("TXSTA equ 0FADh");
[; <" TXSTA equ 0FADh ;# ">
"13607
[; ;Source\pic18f47j53.h: 13607: __asm("TXREG1 equ 0FAEh");
[; <" TXREG1 equ 0FAEh ;# ">
"13612
[; ;Source\pic18f47j53.h: 13612: __asm("TXREG equ 0FAEh");
[; <" TXREG equ 0FAEh ;# ">
"13645
[; ;Source\pic18f47j53.h: 13645: __asm("RCREG1 equ 0FAFh");
[; <" RCREG1 equ 0FAFh ;# ">
"13650
[; ;Source\pic18f47j53.h: 13650: __asm("RCREG equ 0FAFh");
[; <" RCREG equ 0FAFh ;# ">
"13683
[; ;Source\pic18f47j53.h: 13683: __asm("SPBRG1 equ 0FB0h");
[; <" SPBRG1 equ 0FB0h ;# ">
"13688
[; ;Source\pic18f47j53.h: 13688: __asm("SPBRG equ 0FB0h");
[; <" SPBRG equ 0FB0h ;# ">
"13721
[; ;Source\pic18f47j53.h: 13721: __asm("CTMUICON equ 0FB1h");
[; <" CTMUICON equ 0FB1h ;# ">
"13797
[; ;Source\pic18f47j53.h: 13797: __asm("CTMUCONL equ 0FB2h");
[; <" CTMUCONL equ 0FB2h ;# ">
"13859
[; ;Source\pic18f47j53.h: 13859: __asm("CTMUCONH equ 0FB3h");
[; <" CTMUCONH equ 0FB3h ;# ">
"13916
[; ;Source\pic18f47j53.h: 13916: __asm("CCP2CON equ 0FB4h");
[; <" CCP2CON equ 0FB4h ;# ">
"13921
[; ;Source\pic18f47j53.h: 13921: __asm("ECCP2CON equ 0FB4h");
[; <" ECCP2CON equ 0FB4h ;# ">
"14108
[; ;Source\pic18f47j53.h: 14108: __asm("CCPR2 equ 0FB5h");
[; <" CCPR2 equ 0FB5h ;# ">
"14115
[; ;Source\pic18f47j53.h: 14115: __asm("CCPR2L equ 0FB5h");
[; <" CCPR2L equ 0FB5h ;# ">
"14135
[; ;Source\pic18f47j53.h: 14135: __asm("CCPR2H equ 0FB6h");
[; <" CCPR2H equ 0FB6h ;# ">
"14155
[; ;Source\pic18f47j53.h: 14155: __asm("ECCP2DEL equ 0FB7h");
[; <" ECCP2DEL equ 0FB7h ;# ">
"14160
[; ;Source\pic18f47j53.h: 14160: __asm("PWM2CON equ 0FB7h");
[; <" PWM2CON equ 0FB7h ;# ">
"14293
[; ;Source\pic18f47j53.h: 14293: __asm("ECCP2AS equ 0FB8h");
[; <" ECCP2AS equ 0FB8h ;# ">
"14375
[; ;Source\pic18f47j53.h: 14375: __asm("PSTR2CON equ 0FB9h");
[; <" PSTR2CON equ 0FB9h ;# ">
"14617
[; ;Source\pic18f47j53.h: 14617: __asm("CCP1CON equ 0FBAh");
[; <" CCP1CON equ 0FBAh ;# ">
"14622
[; ;Source\pic18f47j53.h: 14622: __asm("ECCP1CON equ 0FBAh");
[; <" ECCP1CON equ 0FBAh ;# ">
"14809
[; ;Source\pic18f47j53.h: 14809: __asm("CCPR1 equ 0FBBh");
[; <" CCPR1 equ 0FBBh ;# ">
"14816
[; ;Source\pic18f47j53.h: 14816: __asm("CCPR1L equ 0FBBh");
[; <" CCPR1L equ 0FBBh ;# ">
"14836
[; ;Source\pic18f47j53.h: 14836: __asm("CCPR1H equ 0FBCh");
[; <" CCPR1H equ 0FBCh ;# ">
"14856
[; ;Source\pic18f47j53.h: 14856: __asm("ECCP1DEL equ 0FBDh");
[; <" ECCP1DEL equ 0FBDh ;# ">
"14861
[; ;Source\pic18f47j53.h: 14861: __asm("PWM1CON equ 0FBDh");
[; <" PWM1CON equ 0FBDh ;# ">
"14994
[; ;Source\pic18f47j53.h: 14994: __asm("ECCP1AS equ 0FBEh");
[; <" ECCP1AS equ 0FBEh ;# ">
"15076
[; ;Source\pic18f47j53.h: 15076: __asm("PSTR1CON equ 0FBFh");
[; <" PSTR1CON equ 0FBFh ;# ">
"15133
[; ;Source\pic18f47j53.h: 15133: __asm("WDTCON equ 0FC0h");
[; <" WDTCON equ 0FC0h ;# ">
"15203
[; ;Source\pic18f47j53.h: 15203: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"15300
[; ;Source\pic18f47j53.h: 15300: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"15444
[; ;Source\pic18f47j53.h: 15444: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"15451
[; ;Source\pic18f47j53.h: 15451: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"15471
[; ;Source\pic18f47j53.h: 15471: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"15491
[; ;Source\pic18f47j53.h: 15491: __asm("SSP1CON2 equ 0FC5h");
[; <" SSP1CON2 equ 0FC5h ;# ">
"15496
[; ;Source\pic18f47j53.h: 15496: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"15845
[; ;Source\pic18f47j53.h: 15845: __asm("SSP1CON1 equ 0FC6h");
[; <" SSP1CON1 equ 0FC6h ;# ">
"15850
[; ;Source\pic18f47j53.h: 15850: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"16083
[; ;Source\pic18f47j53.h: 16083: __asm("SSP1STAT equ 0FC7h");
[; <" SSP1STAT equ 0FC7h ;# ">
"16088
[; ;Source\pic18f47j53.h: 16088: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"16681
[; ;Source\pic18f47j53.h: 16681: __asm("SSP1ADD equ 0FC8h");
[; <" SSP1ADD equ 0FC8h ;# ">
"16686
[; ;Source\pic18f47j53.h: 16686: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"16919
[; ;Source\pic18f47j53.h: 16919: __asm("SSP1MSK equ 0FC8h");
[; <" SSP1MSK equ 0FC8h ;# ">
"16981
[; ;Source\pic18f47j53.h: 16981: __asm("SSP1BUF equ 0FC9h");
[; <" SSP1BUF equ 0FC9h ;# ">
"16986
[; ;Source\pic18f47j53.h: 16986: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"17019
[; ;Source\pic18f47j53.h: 17019: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"17090
[; ;Source\pic18f47j53.h: 17090: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"17095
[; ;Source\pic18f47j53.h: 17095: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"17216
[; ;Source\pic18f47j53.h: 17216: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"17236
[; ;Source\pic18f47j53.h: 17236: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"17338
[; ;Source\pic18f47j53.h: 17338: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"17345
[; ;Source\pic18f47j53.h: 17345: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"17365
[; ;Source\pic18f47j53.h: 17365: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"17385
[; ;Source\pic18f47j53.h: 17385: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"17533
[; ;Source\pic18f47j53.h: 17533: __asm("CM2CON equ 0FD1h");
[; <" CM2CON equ 0FD1h ;# ">
"17538
[; ;Source\pic18f47j53.h: 17538: __asm("CM2CON1 equ 0FD1h");
[; <" CM2CON1 equ 0FD1h ;# ">
"17785
[; ;Source\pic18f47j53.h: 17785: __asm("CM1CON equ 0FD2h");
[; <" CM1CON equ 0FD2h ;# ">
"17790
[; ;Source\pic18f47j53.h: 17790: __asm("CM1CON1 equ 0FD2h");
[; <" CM1CON1 equ 0FD2h ;# ">
"18065
[; ;Source\pic18f47j53.h: 18065: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"18142
[; ;Source\pic18f47j53.h: 18142: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"18212
[; ;Source\pic18f47j53.h: 18212: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"18219
[; ;Source\pic18f47j53.h: 18219: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"18239
[; ;Source\pic18f47j53.h: 18239: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"18259
[; ;Source\pic18f47j53.h: 18259: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"18330
[; ;Source\pic18f47j53.h: 18330: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"18337
[; ;Source\pic18f47j53.h: 18337: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"18357
[; ;Source\pic18f47j53.h: 18357: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"18364
[; ;Source\pic18f47j53.h: 18364: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"18384
[; ;Source\pic18f47j53.h: 18384: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"18404
[; ;Source\pic18f47j53.h: 18404: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"18424
[; ;Source\pic18f47j53.h: 18424: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"18444
[; ;Source\pic18f47j53.h: 18444: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"18464
[; ;Source\pic18f47j53.h: 18464: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"18471
[; ;Source\pic18f47j53.h: 18471: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"18478
[; ;Source\pic18f47j53.h: 18478: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"18498
[; ;Source\pic18f47j53.h: 18498: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"18505
[; ;Source\pic18f47j53.h: 18505: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"18525
[; ;Source\pic18f47j53.h: 18525: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"18545
[; ;Source\pic18f47j53.h: 18545: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"18565
[; ;Source\pic18f47j53.h: 18565: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"18585
[; ;Source\pic18f47j53.h: 18585: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"18605
[; ;Source\pic18f47j53.h: 18605: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"18625
[; ;Source\pic18f47j53.h: 18625: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"18632
[; ;Source\pic18f47j53.h: 18632: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"18652
[; ;Source\pic18f47j53.h: 18652: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"18659
[; ;Source\pic18f47j53.h: 18659: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"18679
[; ;Source\pic18f47j53.h: 18679: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"18699
[; ;Source\pic18f47j53.h: 18699: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"18719
[; ;Source\pic18f47j53.h: 18719: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"18739
[; ;Source\pic18f47j53.h: 18739: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"18759
[; ;Source\pic18f47j53.h: 18759: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"18871
[; ;Source\pic18f47j53.h: 18871: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"18964
[; ;Source\pic18f47j53.h: 18964: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"19081
[; ;Source\pic18f47j53.h: 19081: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"19088
[; ;Source\pic18f47j53.h: 19088: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"19108
[; ;Source\pic18f47j53.h: 19108: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"19128
[; ;Source\pic18f47j53.h: 19128: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"19150
[; ;Source\pic18f47j53.h: 19150: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"19157
[; ;Source\pic18f47j53.h: 19157: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"19177
[; ;Source\pic18f47j53.h: 19177: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"19197
[; ;Source\pic18f47j53.h: 19197: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"19206
[; ;Source\pic18f47j53.h: 19206: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"19213
[; ;Source\pic18f47j53.h: 19213: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"19220
[; ;Source\pic18f47j53.h: 19220: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"19240
[; ;Source\pic18f47j53.h: 19240: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"19260
[; ;Source\pic18f47j53.h: 19260: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"19267
[; ;Source\pic18f47j53.h: 19267: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"19341
[; ;Source\pic18f47j53.h: 19341: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"19348
[; ;Source\pic18f47j53.h: 19348: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"19368
[; ;Source\pic18f47j53.h: 19368: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"19388
[; ;Source\pic18f47j53.h: 19388: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"66 Source/FreeRTOS/portable/PIC18F/port.c
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 66: RTC_DATA RTCdt;
[v _RTCdt `S940 ~T0 @X0 1 e ]
"450
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 450: StackType_t *stkptr[3];
[v _stkptr `*uc ~T0 @X0 -> 3 `i e ]
"451
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 451: uint8_t stkptrcnt=0;
[v _stkptrcnt `uc ~T0 @X0 1 e ]
[i _stkptrcnt
-> -> 0 `i `uc
]
"456
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 456: StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
[v _pxPortInitialiseStack `(*uc ~T0 @X0 1 ef3`*uc`*F7279`*v ]
"457
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 457: {
{
[e :U _pxPortInitialiseStack ]
"456
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 456: StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
[v _pxTopOfStack `*uc ~T0 @X0 1 r1 ]
[v _pxCode `*F7283 ~T0 @X0 1 r2 ]
[v _pvParameters `*v ~T0 @X0 1 r3 ]
"457
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 457: {
[f ]
"458
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 458: uint32_t ulAddress;
[v _ulAddress `ul ~T0 @X0 1 a ]
"459
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 459: uint8_t ucBlock;
[v _ucBlock `uc ~T0 @X0 1 a ]
"460
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 460: StackType_t *temp;
[v _temp `*uc ~T0 @X0 1 a ]
"461
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 461:     stkptr[stkptrcnt] = pxTopOfStack;
[e = *U + &U _stkptr * -> _stkptrcnt `ux -> -> # *U &U _stkptr `ui `ux _pxTopOfStack ]
"462
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 462:     temp = pxTopOfStack;
[e = _temp _pxTopOfStack ]
"463
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 463:     stkptrcnt++;
[e ++ _stkptrcnt -> -> 1 `i `uc ]
"465
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 465:     do { if( isr_cnt < 10 ){ const char* _s = ("pIS="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 944 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 945  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 1C ]
[e $U 946  ]
[e :U 947 ]
{
{
[e $U 949  ]
[e :U 950 ]
[e :U 949 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 950  ]
[e :U 951 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 946 ]
[e $ != -> *U __s `i -> 0 `i 947  ]
[e :U 948 ]
{
[e $U 952  ]
[e :U 953 ]
[e :U 952 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 953  ]
[e :U 954 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 1 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 955  ]
[e :U 956 ]
[e :U 955 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 956  ]
[e :U 957 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 1 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 958  ]
[e :U 959 ]
[e :U 958 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 959  ]
[e :U 960 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 961  ]
[e :U 962 ]
[e :U 961 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 962  ]
[e :U 963 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 945 ]
}
[e :U 943 ]
"468
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 468:  *pxTopOfStack = 0x11;
[e = *U _pxTopOfStack -> -> 17 `i `uc ]
"469
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 469:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"470
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 470:  *pxTopOfStack = 0x22;
[e = *U _pxTopOfStack -> -> 34 `i `uc ]
"471
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 471:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"472
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 472:  *pxTopOfStack = 0x33;
[e = *U _pxTopOfStack -> -> 51 `i `uc ]
"473
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 473:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"482
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 482:  ulAddress = ( uint32_t ) pvParameters;
[e = _ulAddress -> _pvParameters `ul ]
"483
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 483:  *pxTopOfStack = ( StackType_t ) ( ulAddress & ( uint32_t ) 0x00ff );
[e = *U _pxTopOfStack -> & _ulAddress -> -> 255 `i `ul `uc ]
"484
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 484:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"486
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 486:  ulAddress >>= 8;
[e =>> _ulAddress -> -> 8 `i `ul ]
"487
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 487:  *pxTopOfStack = ( StackType_t ) ( ulAddress & ( uint32_t ) 0x00ff );
[e = *U _pxTopOfStack -> & _ulAddress -> -> 255 `i `ul `uc ]
"488
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 488:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"510
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 510:  *pxTopOfStack = 0x44;
[e = *U _pxTopOfStack -> -> 68 `i `uc ]
"511
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 511:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"515
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 515:  *pxTopOfStack = ( StackType_t ) 0x66;
[e = *U _pxTopOfStack -> -> 102 `i `uc ]
"516
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 516:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"518
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 518:  *pxTopOfStack = ( StackType_t ) 0xcc;
[e = *U _pxTopOfStack -> -> 204 `i `uc ]
"519
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 519:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"522
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 522:  *pxTopOfStack = ( StackType_t ) 0xc0;
[e = *U _pxTopOfStack -> -> 192 `i `uc ]
"523
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 523:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"525
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 525:  *pxTopOfStack = ( StackType_t ) 0x11;
[e = *U _pxTopOfStack -> -> 17 `i `uc ]
"526
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 526:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"528
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 528:  *pxTopOfStack = ( StackType_t ) 0x22;
[e = *U _pxTopOfStack -> -> 34 `i `uc ]
"529
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 529:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"531
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 531:  *pxTopOfStack = ( StackType_t ) 0x33;
[e = *U _pxTopOfStack -> -> 51 `i `uc ]
"532
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 532:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"534
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 534:  *pxTopOfStack = ( StackType_t ) 0x44;
[e = *U _pxTopOfStack -> -> 68 `i `uc ]
"535
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 535:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"537
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 537:  *pxTopOfStack = ( StackType_t ) 0x55;
[e = *U _pxTopOfStack -> -> 85 `i `uc ]
"538
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 538:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"540
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 540:  *pxTopOfStack = ( StackType_t ) 0x66;
[e = *U _pxTopOfStack -> -> 102 `i `uc ]
"541
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 541:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"543
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 543:  *pxTopOfStack = ( StackType_t ) 0x00;
[e = *U _pxTopOfStack -> -> 0 `i `uc ]
"544
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 544:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"546
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 546:  *pxTopOfStack = ( StackType_t ) 0x88;
[e = *U _pxTopOfStack -> -> 136 `i `uc ]
"547
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 547:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"549
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 549:  *pxTopOfStack = ( StackType_t ) 0x99;
[e = *U _pxTopOfStack -> -> 153 `i `uc ]
"550
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 550:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"552
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 552:  *pxTopOfStack = ( StackType_t ) 0xaa;
[e = *U _pxTopOfStack -> -> 170 `i `uc ]
"553
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 553:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"555
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 555:  *pxTopOfStack = ( StackType_t ) 0xbb;
[e = *U _pxTopOfStack -> -> 187 `i `uc ]
"556
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 556:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"558
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 558:  *pxTopOfStack = ( StackType_t ) 0x00;
[e = *U _pxTopOfStack -> -> 0 `i `uc ]
"559
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 559:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"561
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 561:  *pxTopOfStack = ( StackType_t ) 0x00;
[e = *U _pxTopOfStack -> -> 0 `i `uc ]
"562
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 562:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"565
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 565:  for( ucBlock = 0; ucBlock <= ( ( uint8_t ) 0x13 ); ucBlock++ )
{
[e = _ucBlock -> -> 0 `i `uc ]
[e $ <= -> _ucBlock `i -> -> -> 19 `i `uc `i 964  ]
[e $U 965  ]
[e :U 964 ]
"566
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 566:  {
{
"567
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 567:   *pxTopOfStack = ( StackType_t ) ucBlock;
[e = *U _pxTopOfStack _ucBlock ]
"568
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 568:   *pxTopOfStack++;
[e *U ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"569
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 569:  }
}
[e ++ _ucBlock -> -> 1 `i `uc ]
[e $ <= -> _ucBlock `i -> -> -> 19 `i `uc `i 964  ]
[e :U 965 ]
}
"572
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 572:  *pxTopOfStack = ( StackType_t ) ( ( uint8_t ) 0x13 );
[e = *U _pxTopOfStack -> -> 19 `i `uc ]
"573
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 573:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"575
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 575:  *pxTopOfStack = ( StackType_t ) 0x00;
[e = *U _pxTopOfStack -> -> 0 `i `uc ]
"576
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 576:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"579
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 579:  ulAddress = ( uint32_t ) pxCode;
[e = _ulAddress -> _pxCode `ul ]
"581
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 581:     Xprintf("pxCode=%p\r\n",(TaskFunction_t)pxCode);
[e ( _Xprintf , (. :s 2C _pxCode ]
"582
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 582:     Xprintf("ulAddress=%p\r\n",(uint32_t)ulAddress);
[e ( _Xprintf , (. :s 3C _ulAddress ]
"585
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 585:  *pxTopOfStack = ( StackType_t ) ( ulAddress & ( uint32_t ) 0x00ff );
[e = *U _pxTopOfStack -> & _ulAddress -> -> 255 `i `ul `uc ]
"586
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 586:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"587
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 587:  ulAddress >>= 8;
[e =>> _ulAddress -> -> 8 `i `ul ]
"590
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 590:  *pxTopOfStack = ( StackType_t ) ( ulAddress & ( uint32_t ) 0x00ff );
[e = *U _pxTopOfStack -> & _ulAddress -> -> 255 `i `ul `uc ]
"591
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 591:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"592
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 592:  ulAddress >>= 8;
[e =>> _ulAddress -> -> 8 `i `ul ]
"595
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 595:  *pxTopOfStack = ( StackType_t ) ( ulAddress & ( uint32_t ) 0x00ff );
[e = *U _pxTopOfStack -> & _ulAddress -> -> 255 `i `ul `uc ]
"596
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 596:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"599
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 599:  *pxTopOfStack = ( StackType_t ) 1;
[e = *U _pxTopOfStack -> -> 1 `i `uc ]
"600
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 600:  pxTopOfStack++;
[e ++ _pxTopOfStack * -> -> 1 `i `x -> -> # *U _pxTopOfStack `i `x ]
"602
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 602:     ucBlock = 0;
[e = _ucBlock -> -> 0 `i `uc ]
"604
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 604:     Xprintf("-----------------\r\n");
[e ( _Xprintf :s 4C ]
"605
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 605:     Xprintf("  Stack List %p - %p\r\n",(void *) temp , (void *)pxTopOfStack);
[e ( _Xprintf , , (. :s 5C -> _temp `*v -> _pxTopOfStack `*v ]
"606
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 606:     Xprintf("-----------------\r\n");
[e ( _Xprintf :s 6C ]
"607
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 607:     while( temp != pxTopOfStack ){
[e $U 967  ]
[e :U 968 ]
{
"608
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 608:         Xprintf( "%d: 0x%x\r\n",ucBlock,*temp);
[e ( _Xprintf , , (. :s 7C -> _ucBlock `i -> *U _temp `i ]
"609
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 609:         ucBlock++;
[e ++ _ucBlock -> -> 1 `i `uc ]
"610
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 610:         temp++;
[e ++ _temp * -> -> 1 `i `x -> -> # *U _temp `i `x ]
"611
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 611:     }
}
[e :U 967 ]
"607
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 607:     while( temp != pxTopOfStack ){
[e $ != _temp _pxTopOfStack 968  ]
[e :U 969 ]
"612
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 612:     Xprintf("-----------------\r\n");
[e ( _Xprintf :s 8C ]
"616
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 616:  return pxTopOfStack;
[e ) _pxTopOfStack ]
[e $UE 941  ]
"617
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 617: }
[e :UE 941 ]
}
"620
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 620: BaseType_t xPortStartScheduler( void )
[v _xPortStartScheduler `(c ~T0 @X0 1 ef ]
"621
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 621: {
{
[e :U _xPortStartScheduler ]
[f ]
"623
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 623:     Xprintf("xPortStartScheduler(001) \r\n");
[e ( _Xprintf :s 9C ]
"625
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 625:  prvSetupTimerInterrupt();
[e ( _prvSetupTimerInterrupt ..  ]
"631
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 631:     Xprintf("xPortStartScheduler(002) \r\n");
[e ( _Xprintf :s 10C ]
"635
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 635:  { __asm("MOVFF	(_pxCurrentTCB), FSR0L;" "MOVFF	(_pxCurrentTCB + 1), FSR0H;" "MOVFF	POSTINC0, FSR1L;" "MOVFF	POSTINC0, FSR1H;" "MOVFF	POSTDEC1, FSR0L;" "MOVFF	POSTDEC1, FSR0L"); STKPTR = 0; while( STKPTR < FSR0L ) { __asm("PUSH"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSU, 0"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSH, 0"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSL, 0"); } __asm("MOVFF	POSTDEC1, FSR0H;" "MOVFF	POSTDEC1, FSR0L;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, INDF0;" "MOVFF	POSTDEC1, PCLATH;" "MOVFF	POSTDEC1, PCLATU;" "MOVFF	POSTDEC1, PRODL;" "MOVFF	POSTDEC1, PRODH;" "MOVFF	POSTDEC1, TBLPTRL;" "MOVFF	POSTDEC1, TBLPTRH;" "MOVFF	POSTDEC1, TBLPTRU;" "MOVFF	POSTDEC1, TABLAT;" "MOVFF	POSTDEC1, FSR0H;" "MOVFF	POSTDEC1, FSR0L;" "MOVFF	POSTDEC1, FSR2H;" "MOVFF	POSTDEC1, FSR2L;" "MOVFF	POSTDEC1, BSR;" "MOVFF	POSTDEC1, WREG"); __asm("MOVFF	POSTDEC1, STATUS"); __asm("MOVFF	POSTDEC1, WREG"); __asm("RETURN	0"); };
{
[; <" MOVFF	(_pxCurrentTCB), FSR0L;MOVFF	(_pxCurrentTCB + 1), FSR0H;MOVFF	POSTINC0, FSR1L;MOVFF	POSTINC0, FSR1H;MOVFF	POSTDEC1, FSR0L;MOVFF	POSTDEC1, FSR0L ;# ">
[e = _STKPTR -> -> 0 `i `uc ]
[e $U 971  ]
[e :U 972 ]
{
[; <" PUSH ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSU, 0 ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSH, 0 ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSL, 0 ;# ">
}
[e :U 971 ]
[e $ < -> _STKPTR `i -> _FSR0L `i 972  ]
[e :U 973 ]
[; <" MOVFF	POSTDEC1, FSR0H;MOVFF	POSTDEC1, FSR0L;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, INDF0;MOVFF	POSTDEC1, PCLATH;MOVFF	POSTDEC1, PCLATU;MOVFF	POSTDEC1, PRODL;MOVFF	POSTDEC1, PRODH;MOVFF	POSTDEC1, TBLPTRL;MOVFF	POSTDEC1, TBLPTRH;MOVFF	POSTDEC1, TBLPTRU;MOVFF	POSTDEC1, TABLAT;MOVFF	POSTDEC1, FSR0H;MOVFF	POSTDEC1, FSR0L;MOVFF	POSTDEC1, FSR2H;MOVFF	POSTDEC1, FSR2L;MOVFF	POSTDEC1, BSR;MOVFF	POSTDEC1, WREG ;# ">
[; <" MOVFF	POSTDEC1, STATUS ;# ">
[; <" MOVFF	POSTDEC1, WREG ;# ">
[; <" RETURN	0 ;# ">
}
"644
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 644:  return ( ( BaseType_t ) 1 );
[e ) -> -> 1 `i `c ]
[e $UE 970  ]
"645
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 645: }
[e :UE 970 ]
}
"648
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 648: void vPortEndScheduler( void )
[v _vPortEndScheduler `(v ~T0 @X0 1 ef ]
"649
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 649: {
{
[e :U _vPortEndScheduler ]
[f ]
"653
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 653: }
[e :UE 974 ]
}
"661
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 661: void vPortYield( void )
[v _vPortYield `(v ~T0 @X0 1 ef ]
"662
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 662: {
{
[e :U _vPortYield ]
[f ]
"665
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 665:  { uint32_t dt; pxCurrentTCB_point(&dt);do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	WREG, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("WREG"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); pxCurrentTCB_point(&dt);do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF   STATUS, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("STATUS"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STATUS >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STATUS & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	INTCON, WREG"); do { if( isr_cnt < 10 ){ const char* _s = ("INTCON"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INTCON >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INTCON & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	WREG, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("WREG"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); INTCONbits.GIE_GIEH = 0;; __asm("MOVFF	BSR, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("BSR"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( BSR >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( BSR & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR2L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR2L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR2H, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR2H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TABLAT, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TABLAT"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TABLAT >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TABLAT & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TBLPTRU, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TBLPTRH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TBLPTRL, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PRODH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PRODH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PRODL, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PRODL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PCLATU, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PCLATU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PCLATH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PCLATH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("CLRF	FSR0L, 0"); __asm("CLRF	FSR0H, 0"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	INDF0, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("INDF0"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INDF0 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INDF0 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0H, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	STKPTR, FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("STKPTR"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STKPTR >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STKPTR & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); while( STKPTR > ( uint8_t ) 0 ) { __asm("MOVFF	TOSL, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TOSH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TOSU, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("POP"); } __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVF	PREINC1, 1, 0"); __asm("MOVFF	(_pxCurrentTCB), FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	(_pxCurrentTCB + 1), FSR0H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR1L, POSTINC0"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR1L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR1H, POSTINC0"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR1H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); };
{
[v _dt `ul ~T0 @X0 1 a ]
[e ( _pxCurrentTCB_point (1 &U _dt ]
[e :U 978 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 979  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 11C ]
[e $U 980  ]
[e :U 981 ]
{
{
[e $U 983  ]
[e :U 984 ]
[e :U 983 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 984  ]
[e :U 985 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 980 ]
[e $ != -> *U __s `i -> 0 `i 981  ]
[e :U 982 ]
{
[e $U 986  ]
[e :U 987 ]
[e :U 986 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 987  ]
[e :U 988 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 989  ]
[e :U 990 ]
[e :U 989 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 990  ]
[e :U 991 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 992  ]
[e :U 993 ]
[e :U 992 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 993  ]
[e :U 994 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 995  ]
[e :U 996 ]
[e :U 995 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 996  ]
[e :U 997 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 998  ]
[e :U 999 ]
[e :U 998 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 999  ]
[e :U 1000 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1001  ]
[e :U 1002 ]
[e :U 1001 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1002  ]
[e :U 1003 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1004  ]
[e :U 1005 ]
[e :U 1004 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1005  ]
[e :U 1006 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1007  ]
[e :U 1008 ]
[e :U 1007 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1008  ]
[e :U 1009 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1010  ]
[e :U 1011 ]
[e :U 1010 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1011  ]
[e :U 1012 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1013  ]
[e :U 1014 ]
[e :U 1013 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1014  ]
[e :U 1015 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 979 ]
}
[e :U 977 ]
[; <" MOVFF	WREG, PREINC1 ;# ">
[e :U 1018 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1019  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 12C ]
[e $U 1020  ]
[e :U 1021 ]
{
{
[e $U 1023  ]
[e :U 1024 ]
[e :U 1023 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1024  ]
[e :U 1025 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1020 ]
[e $ != -> *U __s `i -> 0 `i 1021  ]
[e :U 1022 ]
{
[e $U 1026  ]
[e :U 1027 ]
[e :U 1026 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1027  ]
[e :U 1028 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1029  ]
[e :U 1030 ]
[e :U 1029 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1030  ]
[e :U 1031 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _WREG `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1032  ]
[e :U 1033 ]
[e :U 1032 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1033  ]
[e :U 1034 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _WREG `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1035  ]
[e :U 1036 ]
[e :U 1035 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1036  ]
[e :U 1037 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1038  ]
[e :U 1039 ]
[e :U 1038 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1039  ]
[e :U 1040 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1019 ]
}
[e :U 1017 ]
[e ( _pxCurrentTCB_point (1 &U _dt ]
[e :U 1043 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1044  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 13C ]
[e $U 1045  ]
[e :U 1046 ]
{
{
[e $U 1048  ]
[e :U 1049 ]
[e :U 1048 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1049  ]
[e :U 1050 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1045 ]
[e $ != -> *U __s `i -> 0 `i 1046  ]
[e :U 1047 ]
{
[e $U 1051  ]
[e :U 1052 ]
[e :U 1051 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1052  ]
[e :U 1053 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1054  ]
[e :U 1055 ]
[e :U 1054 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1055  ]
[e :U 1056 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1057  ]
[e :U 1058 ]
[e :U 1057 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1058  ]
[e :U 1059 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1060  ]
[e :U 1061 ]
[e :U 1060 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1061  ]
[e :U 1062 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1063  ]
[e :U 1064 ]
[e :U 1063 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1064  ]
[e :U 1065 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1066  ]
[e :U 1067 ]
[e :U 1066 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1067  ]
[e :U 1068 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1069  ]
[e :U 1070 ]
[e :U 1069 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1070  ]
[e :U 1071 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1072  ]
[e :U 1073 ]
[e :U 1072 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1073  ]
[e :U 1074 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1075  ]
[e :U 1076 ]
[e :U 1075 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1076  ]
[e :U 1077 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1078  ]
[e :U 1079 ]
[e :U 1078 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1079  ]
[e :U 1080 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1044 ]
}
[e :U 1042 ]
[; <" MOVFF   STATUS, PREINC1 ;# ">
[e :U 1083 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1084  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 14C ]
[e $U 1085  ]
[e :U 1086 ]
{
{
[e $U 1088  ]
[e :U 1089 ]
[e :U 1088 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1089  ]
[e :U 1090 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1085 ]
[e $ != -> *U __s `i -> 0 `i 1086  ]
[e :U 1087 ]
{
[e $U 1091  ]
[e :U 1092 ]
[e :U 1091 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1092  ]
[e :U 1093 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1094  ]
[e :U 1095 ]
[e :U 1094 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1095  ]
[e :U 1096 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _STATUS `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1097  ]
[e :U 1098 ]
[e :U 1097 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1098  ]
[e :U 1099 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _STATUS `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1100  ]
[e :U 1101 ]
[e :U 1100 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1101  ]
[e :U 1102 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1103  ]
[e :U 1104 ]
[e :U 1103 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1104  ]
[e :U 1105 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1084 ]
}
[e :U 1082 ]
[; <" MOVFF	INTCON, WREG ;# ">
[e :U 1108 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1109  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 15C ]
[e $U 1110  ]
[e :U 1111 ]
{
{
[e $U 1113  ]
[e :U 1114 ]
[e :U 1113 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1114  ]
[e :U 1115 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1110 ]
[e $ != -> *U __s `i -> 0 `i 1111  ]
[e :U 1112 ]
{
[e $U 1116  ]
[e :U 1117 ]
[e :U 1116 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1117  ]
[e :U 1118 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1119  ]
[e :U 1120 ]
[e :U 1119 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1120  ]
[e :U 1121 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _INTCON `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1122  ]
[e :U 1123 ]
[e :U 1122 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1123  ]
[e :U 1124 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _INTCON `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1125  ]
[e :U 1126 ]
[e :U 1125 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1126  ]
[e :U 1127 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1128  ]
[e :U 1129 ]
[e :U 1128 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1129  ]
[e :U 1130 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1109 ]
}
[e :U 1107 ]
[; <" MOVFF	WREG, PREINC1 ;# ">
[e :U 1133 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1134  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 16C ]
[e $U 1135  ]
[e :U 1136 ]
{
{
[e $U 1138  ]
[e :U 1139 ]
[e :U 1138 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1139  ]
[e :U 1140 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1135 ]
[e $ != -> *U __s `i -> 0 `i 1136  ]
[e :U 1137 ]
{
[e $U 1141  ]
[e :U 1142 ]
[e :U 1141 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1142  ]
[e :U 1143 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1144  ]
[e :U 1145 ]
[e :U 1144 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1145  ]
[e :U 1146 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _WREG `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1147  ]
[e :U 1148 ]
[e :U 1147 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1148  ]
[e :U 1149 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _WREG `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1150  ]
[e :U 1151 ]
[e :U 1150 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1151  ]
[e :U 1152 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1153  ]
[e :U 1154 ]
[e :U 1153 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1154  ]
[e :U 1155 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1134 ]
}
[e :U 1132 ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; <" MOVFF	BSR, PREINC1 ;# ">
[e :U 1158 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1159  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 17C ]
[e $U 1160  ]
[e :U 1161 ]
{
{
[e $U 1163  ]
[e :U 1164 ]
[e :U 1163 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1164  ]
[e :U 1165 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1160 ]
[e $ != -> *U __s `i -> 0 `i 1161  ]
[e :U 1162 ]
{
[e $U 1166  ]
[e :U 1167 ]
[e :U 1166 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1167  ]
[e :U 1168 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1169  ]
[e :U 1170 ]
[e :U 1169 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1170  ]
[e :U 1171 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _BSR `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1172  ]
[e :U 1173 ]
[e :U 1172 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1173  ]
[e :U 1174 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _BSR `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1175  ]
[e :U 1176 ]
[e :U 1175 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1176  ]
[e :U 1177 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1178  ]
[e :U 1179 ]
[e :U 1178 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1179  ]
[e :U 1180 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1159 ]
}
[e :U 1157 ]
[; <" MOVFF	FSR2L, PREINC1 ;# ">
[e :U 1183 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1184  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 18C ]
[e $U 1185  ]
[e :U 1186 ]
{
{
[e $U 1188  ]
[e :U 1189 ]
[e :U 1188 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1189  ]
[e :U 1190 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1185 ]
[e $ != -> *U __s `i -> 0 `i 1186  ]
[e :U 1187 ]
{
[e $U 1191  ]
[e :U 1192 ]
[e :U 1191 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1192  ]
[e :U 1193 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1194  ]
[e :U 1195 ]
[e :U 1194 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1195  ]
[e :U 1196 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR2L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1197  ]
[e :U 1198 ]
[e :U 1197 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1198  ]
[e :U 1199 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR2L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1200  ]
[e :U 1201 ]
[e :U 1200 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1201  ]
[e :U 1202 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1203  ]
[e :U 1204 ]
[e :U 1203 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1204  ]
[e :U 1205 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1184 ]
}
[e :U 1182 ]
[; <" MOVFF	FSR2H, PREINC1 ;# ">
[e :U 1208 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1209  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 19C ]
[e $U 1210  ]
[e :U 1211 ]
{
{
[e $U 1213  ]
[e :U 1214 ]
[e :U 1213 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1214  ]
[e :U 1215 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1210 ]
[e $ != -> *U __s `i -> 0 `i 1211  ]
[e :U 1212 ]
{
[e $U 1216  ]
[e :U 1217 ]
[e :U 1216 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1217  ]
[e :U 1218 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1219  ]
[e :U 1220 ]
[e :U 1219 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1220  ]
[e :U 1221 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR2H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1222  ]
[e :U 1223 ]
[e :U 1222 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1223  ]
[e :U 1224 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR2H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1225  ]
[e :U 1226 ]
[e :U 1225 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1226  ]
[e :U 1227 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1228  ]
[e :U 1229 ]
[e :U 1228 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1229  ]
[e :U 1230 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1209 ]
}
[e :U 1207 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 1233 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1234  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 20C ]
[e $U 1235  ]
[e :U 1236 ]
{
{
[e $U 1238  ]
[e :U 1239 ]
[e :U 1238 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1239  ]
[e :U 1240 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1235 ]
[e $ != -> *U __s `i -> 0 `i 1236  ]
[e :U 1237 ]
{
[e $U 1241  ]
[e :U 1242 ]
[e :U 1241 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1242  ]
[e :U 1243 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1244  ]
[e :U 1245 ]
[e :U 1244 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1245  ]
[e :U 1246 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1247  ]
[e :U 1248 ]
[e :U 1247 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1248  ]
[e :U 1249 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1250  ]
[e :U 1251 ]
[e :U 1250 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1251  ]
[e :U 1252 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1253  ]
[e :U 1254 ]
[e :U 1253 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1254  ]
[e :U 1255 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1234 ]
}
[e :U 1232 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 1258 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1259  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 21C ]
[e $U 1260  ]
[e :U 1261 ]
{
{
[e $U 1263  ]
[e :U 1264 ]
[e :U 1263 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1264  ]
[e :U 1265 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1260 ]
[e $ != -> *U __s `i -> 0 `i 1261  ]
[e :U 1262 ]
{
[e $U 1266  ]
[e :U 1267 ]
[e :U 1266 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1267  ]
[e :U 1268 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1269  ]
[e :U 1270 ]
[e :U 1269 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1270  ]
[e :U 1271 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1272  ]
[e :U 1273 ]
[e :U 1272 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1273  ]
[e :U 1274 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1275  ]
[e :U 1276 ]
[e :U 1275 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1276  ]
[e :U 1277 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1278  ]
[e :U 1279 ]
[e :U 1278 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1279  ]
[e :U 1280 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1259 ]
}
[e :U 1257 ]
[; <" MOVFF	TABLAT, PREINC1 ;# ">
[e :U 1283 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1284  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 22C ]
[e $U 1285  ]
[e :U 1286 ]
{
{
[e $U 1288  ]
[e :U 1289 ]
[e :U 1288 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1289  ]
[e :U 1290 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1285 ]
[e $ != -> *U __s `i -> 0 `i 1286  ]
[e :U 1287 ]
{
[e $U 1291  ]
[e :U 1292 ]
[e :U 1291 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1292  ]
[e :U 1293 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1294  ]
[e :U 1295 ]
[e :U 1294 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1295  ]
[e :U 1296 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TABLAT `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1297  ]
[e :U 1298 ]
[e :U 1297 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1298  ]
[e :U 1299 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TABLAT `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1300  ]
[e :U 1301 ]
[e :U 1300 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1301  ]
[e :U 1302 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1303  ]
[e :U 1304 ]
[e :U 1303 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1304  ]
[e :U 1305 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1284 ]
}
[e :U 1282 ]
[; <" MOVFF	TBLPTRU, PREINC1 ;# ">
[e :U 1308 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1309  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 23C ]
[e $U 1310  ]
[e :U 1311 ]
{
{
[e $U 1313  ]
[e :U 1314 ]
[e :U 1313 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1314  ]
[e :U 1315 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1310 ]
[e $ != -> *U __s `i -> 0 `i 1311  ]
[e :U 1312 ]
{
[e $U 1316  ]
[e :U 1317 ]
[e :U 1316 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1317  ]
[e :U 1318 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1319  ]
[e :U 1320 ]
[e :U 1319 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1320  ]
[e :U 1321 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1322  ]
[e :U 1323 ]
[e :U 1322 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1323  ]
[e :U 1324 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1325  ]
[e :U 1326 ]
[e :U 1325 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1326  ]
[e :U 1327 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1328  ]
[e :U 1329 ]
[e :U 1328 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1329  ]
[e :U 1330 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1309 ]
}
[e :U 1307 ]
[; <" MOVFF	TBLPTRH, PREINC1 ;# ">
[e :U 1333 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1334  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 24C ]
[e $U 1335  ]
[e :U 1336 ]
{
{
[e $U 1338  ]
[e :U 1339 ]
[e :U 1338 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1339  ]
[e :U 1340 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1335 ]
[e $ != -> *U __s `i -> 0 `i 1336  ]
[e :U 1337 ]
{
[e $U 1341  ]
[e :U 1342 ]
[e :U 1341 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1342  ]
[e :U 1343 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1344  ]
[e :U 1345 ]
[e :U 1344 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1345  ]
[e :U 1346 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1347  ]
[e :U 1348 ]
[e :U 1347 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1348  ]
[e :U 1349 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1350  ]
[e :U 1351 ]
[e :U 1350 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1351  ]
[e :U 1352 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1353  ]
[e :U 1354 ]
[e :U 1353 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1354  ]
[e :U 1355 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1334 ]
}
[e :U 1332 ]
[; <" MOVFF	TBLPTRL, PREINC1 ;# ">
[e :U 1358 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1359  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 25C ]
[e $U 1360  ]
[e :U 1361 ]
{
{
[e $U 1363  ]
[e :U 1364 ]
[e :U 1363 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1364  ]
[e :U 1365 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1360 ]
[e $ != -> *U __s `i -> 0 `i 1361  ]
[e :U 1362 ]
{
[e $U 1366  ]
[e :U 1367 ]
[e :U 1366 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1367  ]
[e :U 1368 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1369  ]
[e :U 1370 ]
[e :U 1369 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1370  ]
[e :U 1371 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1372  ]
[e :U 1373 ]
[e :U 1372 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1373  ]
[e :U 1374 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1375  ]
[e :U 1376 ]
[e :U 1375 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1376  ]
[e :U 1377 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1378  ]
[e :U 1379 ]
[e :U 1378 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1379  ]
[e :U 1380 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1359 ]
}
[e :U 1357 ]
[; <" MOVFF	PRODH, PREINC1 ;# ">
[e :U 1383 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1384  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 26C ]
[e $U 1385  ]
[e :U 1386 ]
{
{
[e $U 1388  ]
[e :U 1389 ]
[e :U 1388 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1389  ]
[e :U 1390 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1385 ]
[e $ != -> *U __s `i -> 0 `i 1386  ]
[e :U 1387 ]
{
[e $U 1391  ]
[e :U 1392 ]
[e :U 1391 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1392  ]
[e :U 1393 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1394  ]
[e :U 1395 ]
[e :U 1394 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1395  ]
[e :U 1396 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PRODH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1397  ]
[e :U 1398 ]
[e :U 1397 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1398  ]
[e :U 1399 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PRODH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1400  ]
[e :U 1401 ]
[e :U 1400 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1401  ]
[e :U 1402 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1403  ]
[e :U 1404 ]
[e :U 1403 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1404  ]
[e :U 1405 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1384 ]
}
[e :U 1382 ]
[; <" MOVFF	PRODL, PREINC1 ;# ">
[e :U 1408 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1409  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 27C ]
[e $U 1410  ]
[e :U 1411 ]
{
{
[e $U 1413  ]
[e :U 1414 ]
[e :U 1413 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1414  ]
[e :U 1415 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1410 ]
[e $ != -> *U __s `i -> 0 `i 1411  ]
[e :U 1412 ]
{
[e $U 1416  ]
[e :U 1417 ]
[e :U 1416 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1417  ]
[e :U 1418 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1419  ]
[e :U 1420 ]
[e :U 1419 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1420  ]
[e :U 1421 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PRODL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1422  ]
[e :U 1423 ]
[e :U 1422 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1423  ]
[e :U 1424 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PRODL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1425  ]
[e :U 1426 ]
[e :U 1425 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1426  ]
[e :U 1427 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1428  ]
[e :U 1429 ]
[e :U 1428 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1429  ]
[e :U 1430 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1409 ]
}
[e :U 1407 ]
[; <" MOVFF	PCLATU, PREINC1 ;# ">
[e :U 1433 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1434  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 28C ]
[e $U 1435  ]
[e :U 1436 ]
{
{
[e $U 1438  ]
[e :U 1439 ]
[e :U 1438 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1439  ]
[e :U 1440 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1435 ]
[e $ != -> *U __s `i -> 0 `i 1436  ]
[e :U 1437 ]
{
[e $U 1441  ]
[e :U 1442 ]
[e :U 1441 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1442  ]
[e :U 1443 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1444  ]
[e :U 1445 ]
[e :U 1444 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1445  ]
[e :U 1446 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PCLATU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1447  ]
[e :U 1448 ]
[e :U 1447 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1448  ]
[e :U 1449 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PCLATU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1450  ]
[e :U 1451 ]
[e :U 1450 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1451  ]
[e :U 1452 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1453  ]
[e :U 1454 ]
[e :U 1453 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1454  ]
[e :U 1455 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1434 ]
}
[e :U 1432 ]
[; <" MOVFF	PCLATH, PREINC1 ;# ">
[e :U 1458 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1459  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 29C ]
[e $U 1460  ]
[e :U 1461 ]
{
{
[e $U 1463  ]
[e :U 1464 ]
[e :U 1463 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1464  ]
[e :U 1465 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1460 ]
[e $ != -> *U __s `i -> 0 `i 1461  ]
[e :U 1462 ]
{
[e $U 1466  ]
[e :U 1467 ]
[e :U 1466 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1467  ]
[e :U 1468 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1469  ]
[e :U 1470 ]
[e :U 1469 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1470  ]
[e :U 1471 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PCLATH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1472  ]
[e :U 1473 ]
[e :U 1472 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1473  ]
[e :U 1474 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PCLATH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1475  ]
[e :U 1476 ]
[e :U 1475 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1476  ]
[e :U 1477 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1478  ]
[e :U 1479 ]
[e :U 1478 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1479  ]
[e :U 1480 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1459 ]
}
[e :U 1457 ]
[; <" CLRF	FSR0L, 0 ;# ">
[; <" CLRF	FSR0H, 0 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	INDF0, PREINC1 ;# ">
[e :U 1483 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1484  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 30C ]
[e $U 1485  ]
[e :U 1486 ]
{
{
[e $U 1488  ]
[e :U 1489 ]
[e :U 1488 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1489  ]
[e :U 1490 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1485 ]
[e $ != -> *U __s `i -> 0 `i 1486  ]
[e :U 1487 ]
{
[e $U 1491  ]
[e :U 1492 ]
[e :U 1491 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1492  ]
[e :U 1493 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1494  ]
[e :U 1495 ]
[e :U 1494 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1495  ]
[e :U 1496 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _INDF0 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1497  ]
[e :U 1498 ]
[e :U 1497 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1498  ]
[e :U 1499 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _INDF0 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1500  ]
[e :U 1501 ]
[e :U 1500 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1501  ]
[e :U 1502 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1503  ]
[e :U 1504 ]
[e :U 1503 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1504  ]
[e :U 1505 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1484 ]
}
[e :U 1482 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 1508 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1509  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 31C ]
[e $U 1510  ]
[e :U 1511 ]
{
{
[e $U 1513  ]
[e :U 1514 ]
[e :U 1513 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1514  ]
[e :U 1515 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1510 ]
[e $ != -> *U __s `i -> 0 `i 1511  ]
[e :U 1512 ]
{
[e $U 1516  ]
[e :U 1517 ]
[e :U 1516 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1517  ]
[e :U 1518 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1519  ]
[e :U 1520 ]
[e :U 1519 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1520  ]
[e :U 1521 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1522  ]
[e :U 1523 ]
[e :U 1522 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1523  ]
[e :U 1524 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1525  ]
[e :U 1526 ]
[e :U 1525 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1526  ]
[e :U 1527 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1528  ]
[e :U 1529 ]
[e :U 1528 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1529  ]
[e :U 1530 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1509 ]
}
[e :U 1507 ]
[; <" MOVFF	FSR0H, PREINC1 ;# ">
[e :U 1533 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1534  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 32C ]
[e $U 1535  ]
[e :U 1536 ]
{
{
[e $U 1538  ]
[e :U 1539 ]
[e :U 1538 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1539  ]
[e :U 1540 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1535 ]
[e $ != -> *U __s `i -> 0 `i 1536  ]
[e :U 1537 ]
{
[e $U 1541  ]
[e :U 1542 ]
[e :U 1541 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1542  ]
[e :U 1543 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1544  ]
[e :U 1545 ]
[e :U 1544 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1545  ]
[e :U 1546 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1547  ]
[e :U 1548 ]
[e :U 1547 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1548  ]
[e :U 1549 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1550  ]
[e :U 1551 ]
[e :U 1550 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1551  ]
[e :U 1552 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1553  ]
[e :U 1554 ]
[e :U 1553 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1554  ]
[e :U 1555 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1534 ]
}
[e :U 1532 ]
[; <" MOVFF	STKPTR, FSR0L ;# ">
[e :U 1558 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1559  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 33C ]
[e $U 1560  ]
[e :U 1561 ]
{
{
[e $U 1563  ]
[e :U 1564 ]
[e :U 1563 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1564  ]
[e :U 1565 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1560 ]
[e $ != -> *U __s `i -> 0 `i 1561  ]
[e :U 1562 ]
{
[e $U 1566  ]
[e :U 1567 ]
[e :U 1566 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1567  ]
[e :U 1568 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1569  ]
[e :U 1570 ]
[e :U 1569 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1570  ]
[e :U 1571 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _STKPTR `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1572  ]
[e :U 1573 ]
[e :U 1572 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1573  ]
[e :U 1574 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _STKPTR `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1575  ]
[e :U 1576 ]
[e :U 1575 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1576  ]
[e :U 1577 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1578  ]
[e :U 1579 ]
[e :U 1578 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1579  ]
[e :U 1580 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1559 ]
}
[e :U 1557 ]
[e $U 1581  ]
[e :U 1582 ]
{
[; <" MOVFF	TOSL, PREINC1 ;# ">
[e :U 1586 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1587  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 34C ]
[e $U 1588  ]
[e :U 1589 ]
{
{
[e $U 1591  ]
[e :U 1592 ]
[e :U 1591 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1592  ]
[e :U 1593 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1588 ]
[e $ != -> *U __s `i -> 0 `i 1589  ]
[e :U 1590 ]
{
[e $U 1594  ]
[e :U 1595 ]
[e :U 1594 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1595  ]
[e :U 1596 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1597  ]
[e :U 1598 ]
[e :U 1597 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1598  ]
[e :U 1599 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1600  ]
[e :U 1601 ]
[e :U 1600 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1601  ]
[e :U 1602 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1603  ]
[e :U 1604 ]
[e :U 1603 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1604  ]
[e :U 1605 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1606  ]
[e :U 1607 ]
[e :U 1606 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1607  ]
[e :U 1608 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1587 ]
}
[e :U 1585 ]
[; <" MOVFF	TOSH, PREINC1 ;# ">
[e :U 1611 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1612  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 35C ]
[e $U 1613  ]
[e :U 1614 ]
{
{
[e $U 1616  ]
[e :U 1617 ]
[e :U 1616 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1617  ]
[e :U 1618 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1613 ]
[e $ != -> *U __s `i -> 0 `i 1614  ]
[e :U 1615 ]
{
[e $U 1619  ]
[e :U 1620 ]
[e :U 1619 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1620  ]
[e :U 1621 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1622  ]
[e :U 1623 ]
[e :U 1622 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1623  ]
[e :U 1624 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1625  ]
[e :U 1626 ]
[e :U 1625 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1626  ]
[e :U 1627 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1628  ]
[e :U 1629 ]
[e :U 1628 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1629  ]
[e :U 1630 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1631  ]
[e :U 1632 ]
[e :U 1631 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1632  ]
[e :U 1633 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1612 ]
}
[e :U 1610 ]
[; <" MOVFF	TOSU, PREINC1 ;# ">
[e :U 1636 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1637  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 36C ]
[e $U 1638  ]
[e :U 1639 ]
{
{
[e $U 1641  ]
[e :U 1642 ]
[e :U 1641 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1642  ]
[e :U 1643 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1638 ]
[e $ != -> *U __s `i -> 0 `i 1639  ]
[e :U 1640 ]
{
[e $U 1644  ]
[e :U 1645 ]
[e :U 1644 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1645  ]
[e :U 1646 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1647  ]
[e :U 1648 ]
[e :U 1647 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1648  ]
[e :U 1649 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1650  ]
[e :U 1651 ]
[e :U 1650 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1651  ]
[e :U 1652 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1653  ]
[e :U 1654 ]
[e :U 1653 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1654  ]
[e :U 1655 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1656  ]
[e :U 1657 ]
[e :U 1656 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1657  ]
[e :U 1658 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1637 ]
}
[e :U 1635 ]
[; <" POP ;# ">
}
[e :U 1581 ]
[e $ > -> _STKPTR `i -> -> -> 0 `i `uc `i 1582  ]
[e :U 1583 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 1661 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1662  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 37C ]
[e $U 1663  ]
[e :U 1664 ]
{
{
[e $U 1666  ]
[e :U 1667 ]
[e :U 1666 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1667  ]
[e :U 1668 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1663 ]
[e $ != -> *U __s `i -> 0 `i 1664  ]
[e :U 1665 ]
{
[e $U 1669  ]
[e :U 1670 ]
[e :U 1669 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1670  ]
[e :U 1671 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1672  ]
[e :U 1673 ]
[e :U 1672 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1673  ]
[e :U 1674 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1675  ]
[e :U 1676 ]
[e :U 1675 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1676  ]
[e :U 1677 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1678  ]
[e :U 1679 ]
[e :U 1678 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1679  ]
[e :U 1680 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1681  ]
[e :U 1682 ]
[e :U 1681 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1682  ]
[e :U 1683 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1662 ]
}
[e :U 1660 ]
[; <" MOVF	PREINC1, 1, 0 ;# ">
[; <" MOVFF	(_pxCurrentTCB), FSR0L ;# ">
[e :U 1686 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1687  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 38C ]
[e $U 1688  ]
[e :U 1689 ]
{
{
[e $U 1691  ]
[e :U 1692 ]
[e :U 1691 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1692  ]
[e :U 1693 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1688 ]
[e $ != -> *U __s `i -> 0 `i 1689  ]
[e :U 1690 ]
{
[e $U 1694  ]
[e :U 1695 ]
[e :U 1694 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1695  ]
[e :U 1696 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1697  ]
[e :U 1698 ]
[e :U 1697 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1698  ]
[e :U 1699 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1700  ]
[e :U 1701 ]
[e :U 1700 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1701  ]
[e :U 1702 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1703  ]
[e :U 1704 ]
[e :U 1703 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1704  ]
[e :U 1705 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1706  ]
[e :U 1707 ]
[e :U 1706 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1707  ]
[e :U 1708 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1687 ]
}
[e :U 1685 ]
[; <" MOVFF	(_pxCurrentTCB + 1), FSR0H ;# ">
[e :U 1711 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1712  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 39C ]
[e $U 1713  ]
[e :U 1714 ]
{
{
[e $U 1716  ]
[e :U 1717 ]
[e :U 1716 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1717  ]
[e :U 1718 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1713 ]
[e $ != -> *U __s `i -> 0 `i 1714  ]
[e :U 1715 ]
{
[e $U 1719  ]
[e :U 1720 ]
[e :U 1719 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1720  ]
[e :U 1721 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1722  ]
[e :U 1723 ]
[e :U 1722 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1723  ]
[e :U 1724 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1725  ]
[e :U 1726 ]
[e :U 1725 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1726  ]
[e :U 1727 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1728  ]
[e :U 1729 ]
[e :U 1728 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1729  ]
[e :U 1730 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1731  ]
[e :U 1732 ]
[e :U 1731 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1732  ]
[e :U 1733 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1712 ]
}
[e :U 1710 ]
[; <" MOVFF	FSR1L, POSTINC0 ;# ">
[e :U 1736 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1737  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 40C ]
[e $U 1738  ]
[e :U 1739 ]
{
{
[e $U 1741  ]
[e :U 1742 ]
[e :U 1741 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1742  ]
[e :U 1743 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1738 ]
[e $ != -> *U __s `i -> 0 `i 1739  ]
[e :U 1740 ]
{
[e $U 1744  ]
[e :U 1745 ]
[e :U 1744 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1745  ]
[e :U 1746 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1747  ]
[e :U 1748 ]
[e :U 1747 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1748  ]
[e :U 1749 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR1L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1750  ]
[e :U 1751 ]
[e :U 1750 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1751  ]
[e :U 1752 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR1L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1753  ]
[e :U 1754 ]
[e :U 1753 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1754  ]
[e :U 1755 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1756  ]
[e :U 1757 ]
[e :U 1756 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1757  ]
[e :U 1758 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1737 ]
}
[e :U 1735 ]
[; <" MOVFF	FSR1H, POSTINC0 ;# ">
[e :U 1761 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1762  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 41C ]
[e $U 1763  ]
[e :U 1764 ]
{
{
[e $U 1766  ]
[e :U 1767 ]
[e :U 1766 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1767  ]
[e :U 1768 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1763 ]
[e $ != -> *U __s `i -> 0 `i 1764  ]
[e :U 1765 ]
{
[e $U 1769  ]
[e :U 1770 ]
[e :U 1769 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1770  ]
[e :U 1771 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1772  ]
[e :U 1773 ]
[e :U 1772 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1773  ]
[e :U 1774 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR1H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1775  ]
[e :U 1776 ]
[e :U 1775 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1776  ]
[e :U 1777 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR1H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1778  ]
[e :U 1779 ]
[e :U 1778 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1779  ]
[e :U 1780 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1781  ]
[e :U 1782 ]
[e :U 1781 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1782  ]
[e :U 1783 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1762 ]
}
[e :U 1760 ]
}
"668
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 668:  vTaskSwitchContext();
[e ( _vTaskSwitchContext ..  ]
"671
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 671:  { __asm("MOVFF	(_pxCurrentTCB), FSR0L;" "MOVFF	(_pxCurrentTCB + 1), FSR0H;" "MOVFF	POSTINC0, FSR1L;" "MOVFF	POSTINC0, FSR1H;" "MOVFF	POSTDEC1, FSR0L;" "MOVFF	POSTDEC1, FSR0L"); STKPTR = 0; while( STKPTR < FSR0L ) { __asm("PUSH"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSU, 0"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSH, 0"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSL, 0"); } __asm("MOVFF	POSTDEC1, FSR0H;" "MOVFF	POSTDEC1, FSR0L;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, POSTDEC0;" "MOVFF	POSTDEC1, INDF0;" "MOVFF	POSTDEC1, PCLATH;" "MOVFF	POSTDEC1, PCLATU;" "MOVFF	POSTDEC1, PRODL;" "MOVFF	POSTDEC1, PRODH;" "MOVFF	POSTDEC1, TBLPTRL;" "MOVFF	POSTDEC1, TBLPTRH;" "MOVFF	POSTDEC1, TBLPTRU;" "MOVFF	POSTDEC1, TABLAT;" "MOVFF	POSTDEC1, FSR0H;" "MOVFF	POSTDEC1, FSR0L;" "MOVFF	POSTDEC1, FSR2H;" "MOVFF	POSTDEC1, FSR2L;" "MOVFF	POSTDEC1, BSR;" "MOVFF	POSTDEC1, WREG"); __asm("MOVFF	POSTDEC1, STATUS"); __asm("MOVFF	POSTDEC1, WREG"); __asm("RETURN	0"); };
{
[; <" MOVFF	(_pxCurrentTCB), FSR0L;MOVFF	(_pxCurrentTCB + 1), FSR0H;MOVFF	POSTINC0, FSR1L;MOVFF	POSTINC0, FSR1H;MOVFF	POSTDEC1, FSR0L;MOVFF	POSTDEC1, FSR0L ;# ">
[e = _STKPTR -> -> 0 `i `uc ]
[e $U 1784  ]
[e :U 1785 ]
{
[; <" PUSH ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSU, 0 ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSH, 0 ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSL, 0 ;# ">
}
[e :U 1784 ]
[e $ < -> _STKPTR `i -> _FSR0L `i 1785  ]
[e :U 1786 ]
[; <" MOVFF	POSTDEC1, FSR0H;MOVFF	POSTDEC1, FSR0L;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, POSTDEC0;MOVFF	POSTDEC1, INDF0;MOVFF	POSTDEC1, PCLATH;MOVFF	POSTDEC1, PCLATU;MOVFF	POSTDEC1, PRODL;MOVFF	POSTDEC1, PRODH;MOVFF	POSTDEC1, TBLPTRL;MOVFF	POSTDEC1, TBLPTRH;MOVFF	POSTDEC1, TBLPTRU;MOVFF	POSTDEC1, TABLAT;MOVFF	POSTDEC1, FSR0H;MOVFF	POSTDEC1, FSR0L;MOVFF	POSTDEC1, FSR2H;MOVFF	POSTDEC1, FSR2L;MOVFF	POSTDEC1, BSR;MOVFF	POSTDEC1, WREG ;# ">
[; <" MOVFF	POSTDEC1, STATUS ;# ">
[; <" MOVFF	POSTDEC1, WREG ;# ">
[; <" RETURN	0 ;# ">
}
"672
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 672: }
[e :UE 975 ]
}
"727
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 727: uint16_t timer_cnt;
[v _timer_cnt `us ~T0 @X0 1 e ]
"728
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 728: uint16_t timer_cnt_buf;
[v _timer_cnt_buf `us ~T0 @X0 1 e ]
"795
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 795: void stack_ptr_disp(void)
[v _stack_ptr_disp `(v ~T0 @X0 1 ef ]
"796
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 796: {
{
[e :U _stack_ptr_disp ]
[f ]
"797
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 797:     uint8_t *dt;
[v _dt `*uc ~T0 @X0 1 a ]
"798
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 798:     uint8_t i,j;
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
"800
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 800:     for( j=0; j<3; j++ ){
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 3 `i 1788  ]
[e $U 1789  ]
[e :U 1788 ]
{
"801
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 801:         dt = (uint8_t *)stkptr[j];
[e = _dt *U + &U _stkptr * -> _j `ux -> -> # *U &U _stkptr `ui `ux ]
"802
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 802:         for(i=0; i<48; i++){
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 48 `i 1791  ]
[e $U 1792  ]
[e :U 1791 ]
{
"803
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 803:             dt --;
[e -- _dt * -> -> 1 `i `x -> -> # *U _dt `i `x ]
"804
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 804:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 48 `i 1791  ]
[e :U 1792 ]
}
"806
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 806:         for(i=0; i<128; i++){
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 128 `i 1794  ]
[e $U 1795  ]
[e :U 1794 ]
{
"807
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 807:             do { { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( *dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( *dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (' '); }; } while (0);
[e :U 1799 ]
{
{
[e $U 1800  ]
[e :U 1801 ]
[e :U 1800 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1801  ]
[e :U 1802 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> *U _dt `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1803  ]
[e :U 1804 ]
[e :U 1803 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1804  ]
[e :U 1805 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> *U _dt `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1806  ]
[e :U 1807 ]
[e :U 1806 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1807  ]
[e :U 1808 ]
[e = _TXREG2 -> -> 32 `ui `uc ]
}
}
[e :U 1798 ]
"808
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 808:             if((i % 16)==15 ){
[e $ ! == % -> _i `i -> 16 `i -> 15 `i 1809  ]
{
"809
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 809:                 { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); };
{
[e $U 1810  ]
[e :U 1811 ]
[e :U 1810 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1811  ]
[e :U 1812 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
"810
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 810:                 { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); };
{
[e $U 1813  ]
[e :U 1814 ]
[e :U 1813 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1814  ]
[e :U 1815 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
"811
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 811:             }
}
[e :U 1809 ]
"812
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 812:             dt++;
[e ++ _dt * -> -> 1 `i `x -> -> # *U _dt `i `x ]
"813
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 813:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 128 `i 1794  ]
[e :U 1795 ]
}
"814
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 814:         { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); };
{
[e $U 1816  ]
[e :U 1817 ]
[e :U 1816 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1817  ]
[e :U 1818 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
"815
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 815:         { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); };
{
[e $U 1819  ]
[e :U 1820 ]
[e :U 1819 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1820  ]
[e :U 1821 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
"816
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 816:     }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 3 `i 1788  ]
[e :U 1789 ]
}
"817
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 817: }
[e :UE 1787 ]
}
"819
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 819: static void prvTickISR( void )
[v _prvTickISR `(v ~T0 @X0 1 sf ]
"820
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 820: {
{
[e :U _prvTickISR ]
[f ]
"821
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 821:     uint32_t dt;
[v _dt `ul ~T0 @X0 1 a ]
"823
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 823:         do { if( isr_cnt < 10 ){ const char* _s = ("ISR="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1825 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1826  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 42C ]
[e $U 1827  ]
[e :U 1828 ]
{
{
[e $U 1830  ]
[e :U 1831 ]
[e :U 1830 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1831  ]
[e :U 1832 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1827 ]
[e $ != -> *U __s `i -> 0 `i 1828  ]
[e :U 1829 ]
{
[e $U 1833  ]
[e :U 1834 ]
[e :U 1833 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1834  ]
[e :U 1835 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 1 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1836  ]
[e :U 1837 ]
[e :U 1836 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1837  ]
[e :U 1838 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 1 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1839  ]
[e :U 1840 ]
[e :U 1839 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1840  ]
[e :U 1841 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1842  ]
[e :U 1843 ]
[e :U 1842 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1843  ]
[e :U 1844 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1826 ]
}
[e :U 1824 ]
"824
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 824:         stack_ptr_disp();
[e ( _stack_ptr_disp ..  ]
"825
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 825:         pxCurrentTCB_point(&dt);
[e ( _pxCurrentTCB_point (1 &U _dt ]
"826
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 826:         do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1847 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1848  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 43C ]
[e $U 1849  ]
[e :U 1850 ]
{
{
[e $U 1852  ]
[e :U 1853 ]
[e :U 1852 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1853  ]
[e :U 1854 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1849 ]
[e $ != -> *U __s `i -> 0 `i 1850  ]
[e :U 1851 ]
{
[e $U 1855  ]
[e :U 1856 ]
[e :U 1855 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1856  ]
[e :U 1857 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1858  ]
[e :U 1859 ]
[e :U 1858 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1859  ]
[e :U 1860 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1861  ]
[e :U 1862 ]
[e :U 1861 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1862  ]
[e :U 1863 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1864  ]
[e :U 1865 ]
[e :U 1864 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1865  ]
[e :U 1866 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1867  ]
[e :U 1868 ]
[e :U 1867 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1868  ]
[e :U 1869 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1870  ]
[e :U 1871 ]
[e :U 1870 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1871  ]
[e :U 1872 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1873  ]
[e :U 1874 ]
[e :U 1873 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1874  ]
[e :U 1875 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1876  ]
[e :U 1877 ]
[e :U 1876 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1877  ]
[e :U 1878 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1879  ]
[e :U 1880 ]
[e :U 1879 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1880  ]
[e :U 1881 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1882  ]
[e :U 1883 ]
[e :U 1882 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1883  ]
[e :U 1884 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1848 ]
}
[e :U 1846 ]
"830
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 830:         { uint32_t dt; pxCurrentTCB_point(&dt);do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	WREG, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("WREG"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); pxCurrentTCB_point(&dt);do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF   STATUS, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("STATUS"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STATUS >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STATUS & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	INTCON, WREG"); do { if( isr_cnt < 10 ){ const char* _s = ("INTCON"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INTCON >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INTCON & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	WREG, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("WREG"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); INTCONbits.GIE_GIEH = 0;; __asm("MOVFF	BSR, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("BSR"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( BSR >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( BSR & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR2L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR2L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR2H, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR2H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TABLAT, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TABLAT"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TABLAT >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TABLAT & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TBLPTRU, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TBLPTRH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TBLPTRL, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PRODH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PRODH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PRODL, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PRODL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PCLATU, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PCLATU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	PCLATH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("PCLATH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("CLRF	FSR0L, 0"); __asm("CLRF	FSR0H, 0"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	POSTINC0, PREINC1"); __asm("MOVFF	INDF0, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("INDF0"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INDF0 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INDF0 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR0H, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	STKPTR, FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("STKPTR"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STKPTR >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STKPTR & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); while( STKPTR > ( uint8_t ) 0 ) { __asm("MOVFF	TOSL, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TOSH, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	TOSU, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("POP"); } __asm("MOVFF	FSR0L, PREINC1"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVF	PREINC1, 1, 0"); __asm("MOVFF	(_pxCurrentTCB), FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	(_pxCurrentTCB + 1), FSR0H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR1L, POSTINC0"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR1L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	FSR1H, POSTINC0"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR1H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); };
{
[v _dt `ul ~T0 @X0 1 a ]
[e ( _pxCurrentTCB_point (1 &U _dt ]
[e :U 1887 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1888  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 44C ]
[e $U 1889  ]
[e :U 1890 ]
{
{
[e $U 1892  ]
[e :U 1893 ]
[e :U 1892 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1893  ]
[e :U 1894 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1889 ]
[e $ != -> *U __s `i -> 0 `i 1890  ]
[e :U 1891 ]
{
[e $U 1895  ]
[e :U 1896 ]
[e :U 1895 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1896  ]
[e :U 1897 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1898  ]
[e :U 1899 ]
[e :U 1898 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1899  ]
[e :U 1900 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1901  ]
[e :U 1902 ]
[e :U 1901 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1902  ]
[e :U 1903 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1904  ]
[e :U 1905 ]
[e :U 1904 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1905  ]
[e :U 1906 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1907  ]
[e :U 1908 ]
[e :U 1907 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1908  ]
[e :U 1909 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1910  ]
[e :U 1911 ]
[e :U 1910 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1911  ]
[e :U 1912 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1913  ]
[e :U 1914 ]
[e :U 1913 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1914  ]
[e :U 1915 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1916  ]
[e :U 1917 ]
[e :U 1916 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1917  ]
[e :U 1918 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1919  ]
[e :U 1920 ]
[e :U 1919 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1920  ]
[e :U 1921 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1922  ]
[e :U 1923 ]
[e :U 1922 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1923  ]
[e :U 1924 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1888 ]
}
[e :U 1886 ]
[; <" MOVFF	WREG, PREINC1 ;# ">
[e :U 1927 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1928  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 45C ]
[e $U 1929  ]
[e :U 1930 ]
{
{
[e $U 1932  ]
[e :U 1933 ]
[e :U 1932 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1933  ]
[e :U 1934 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1929 ]
[e $ != -> *U __s `i -> 0 `i 1930  ]
[e :U 1931 ]
{
[e $U 1935  ]
[e :U 1936 ]
[e :U 1935 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1936  ]
[e :U 1937 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 1938  ]
[e :U 1939 ]
[e :U 1938 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1939  ]
[e :U 1940 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _WREG `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1941  ]
[e :U 1942 ]
[e :U 1941 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1942  ]
[e :U 1943 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _WREG `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1944  ]
[e :U 1945 ]
[e :U 1944 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1945  ]
[e :U 1946 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1947  ]
[e :U 1948 ]
[e :U 1947 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1948  ]
[e :U 1949 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1928 ]
}
[e :U 1926 ]
[e ( _pxCurrentTCB_point (1 &U _dt ]
[e :U 1952 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1953  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 46C ]
[e $U 1954  ]
[e :U 1955 ]
{
{
[e $U 1957  ]
[e :U 1958 ]
[e :U 1957 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1958  ]
[e :U 1959 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1954 ]
[e $ != -> *U __s `i -> 0 `i 1955  ]
[e :U 1956 ]
{
[e $U 1960  ]
[e :U 1961 ]
[e :U 1960 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1961  ]
[e :U 1962 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1963  ]
[e :U 1964 ]
[e :U 1963 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1964  ]
[e :U 1965 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1966  ]
[e :U 1967 ]
[e :U 1966 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1967  ]
[e :U 1968 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1969  ]
[e :U 1970 ]
[e :U 1969 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1970  ]
[e :U 1971 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1972  ]
[e :U 1973 ]
[e :U 1972 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1973  ]
[e :U 1974 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1975  ]
[e :U 1976 ]
[e :U 1975 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1976  ]
[e :U 1977 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1978  ]
[e :U 1979 ]
[e :U 1978 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1979  ]
[e :U 1980 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1981  ]
[e :U 1982 ]
[e :U 1981 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1982  ]
[e :U 1983 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1984  ]
[e :U 1985 ]
[e :U 1984 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1985  ]
[e :U 1986 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1987  ]
[e :U 1988 ]
[e :U 1987 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1988  ]
[e :U 1989 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1953 ]
}
[e :U 1951 ]
[; <" MOVFF   STATUS, PREINC1 ;# ">
[e :U 1992 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1993  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 47C ]
[e $U 1994  ]
[e :U 1995 ]
{
{
[e $U 1997  ]
[e :U 1998 ]
[e :U 1997 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1998  ]
[e :U 1999 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1994 ]
[e $ != -> *U __s `i -> 0 `i 1995  ]
[e :U 1996 ]
{
[e $U 2000  ]
[e :U 2001 ]
[e :U 2000 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2001  ]
[e :U 2002 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2003  ]
[e :U 2004 ]
[e :U 2003 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2004  ]
[e :U 2005 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _STATUS `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2006  ]
[e :U 2007 ]
[e :U 2006 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2007  ]
[e :U 2008 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _STATUS `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2009  ]
[e :U 2010 ]
[e :U 2009 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2010  ]
[e :U 2011 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2012  ]
[e :U 2013 ]
[e :U 2012 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2013  ]
[e :U 2014 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1993 ]
}
[e :U 1991 ]
[; <" MOVFF	INTCON, WREG ;# ">
[e :U 2017 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2018  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 48C ]
[e $U 2019  ]
[e :U 2020 ]
{
{
[e $U 2022  ]
[e :U 2023 ]
[e :U 2022 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2023  ]
[e :U 2024 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2019 ]
[e $ != -> *U __s `i -> 0 `i 2020  ]
[e :U 2021 ]
{
[e $U 2025  ]
[e :U 2026 ]
[e :U 2025 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2026  ]
[e :U 2027 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2028  ]
[e :U 2029 ]
[e :U 2028 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2029  ]
[e :U 2030 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _INTCON `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2031  ]
[e :U 2032 ]
[e :U 2031 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2032  ]
[e :U 2033 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _INTCON `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2034  ]
[e :U 2035 ]
[e :U 2034 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2035  ]
[e :U 2036 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2037  ]
[e :U 2038 ]
[e :U 2037 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2038  ]
[e :U 2039 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2018 ]
}
[e :U 2016 ]
[; <" MOVFF	WREG, PREINC1 ;# ">
[e :U 2042 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2043  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 49C ]
[e $U 2044  ]
[e :U 2045 ]
{
{
[e $U 2047  ]
[e :U 2048 ]
[e :U 2047 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2048  ]
[e :U 2049 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2044 ]
[e $ != -> *U __s `i -> 0 `i 2045  ]
[e :U 2046 ]
{
[e $U 2050  ]
[e :U 2051 ]
[e :U 2050 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2051  ]
[e :U 2052 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2053  ]
[e :U 2054 ]
[e :U 2053 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2054  ]
[e :U 2055 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _WREG `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2056  ]
[e :U 2057 ]
[e :U 2056 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2057  ]
[e :U 2058 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _WREG `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2059  ]
[e :U 2060 ]
[e :U 2059 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2060  ]
[e :U 2061 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2062  ]
[e :U 2063 ]
[e :U 2062 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2063  ]
[e :U 2064 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2043 ]
}
[e :U 2041 ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; <" MOVFF	BSR, PREINC1 ;# ">
[e :U 2067 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2068  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 50C ]
[e $U 2069  ]
[e :U 2070 ]
{
{
[e $U 2072  ]
[e :U 2073 ]
[e :U 2072 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2073  ]
[e :U 2074 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2069 ]
[e $ != -> *U __s `i -> 0 `i 2070  ]
[e :U 2071 ]
{
[e $U 2075  ]
[e :U 2076 ]
[e :U 2075 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2076  ]
[e :U 2077 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2078  ]
[e :U 2079 ]
[e :U 2078 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2079  ]
[e :U 2080 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _BSR `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2081  ]
[e :U 2082 ]
[e :U 2081 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2082  ]
[e :U 2083 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _BSR `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2084  ]
[e :U 2085 ]
[e :U 2084 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2085  ]
[e :U 2086 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2087  ]
[e :U 2088 ]
[e :U 2087 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2088  ]
[e :U 2089 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2068 ]
}
[e :U 2066 ]
[; <" MOVFF	FSR2L, PREINC1 ;# ">
[e :U 2092 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2093  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 51C ]
[e $U 2094  ]
[e :U 2095 ]
{
{
[e $U 2097  ]
[e :U 2098 ]
[e :U 2097 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2098  ]
[e :U 2099 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2094 ]
[e $ != -> *U __s `i -> 0 `i 2095  ]
[e :U 2096 ]
{
[e $U 2100  ]
[e :U 2101 ]
[e :U 2100 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2101  ]
[e :U 2102 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2103  ]
[e :U 2104 ]
[e :U 2103 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2104  ]
[e :U 2105 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR2L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2106  ]
[e :U 2107 ]
[e :U 2106 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2107  ]
[e :U 2108 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR2L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2109  ]
[e :U 2110 ]
[e :U 2109 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2110  ]
[e :U 2111 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2112  ]
[e :U 2113 ]
[e :U 2112 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2113  ]
[e :U 2114 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2093 ]
}
[e :U 2091 ]
[; <" MOVFF	FSR2H, PREINC1 ;# ">
[e :U 2117 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2118  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 52C ]
[e $U 2119  ]
[e :U 2120 ]
{
{
[e $U 2122  ]
[e :U 2123 ]
[e :U 2122 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2123  ]
[e :U 2124 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2119 ]
[e $ != -> *U __s `i -> 0 `i 2120  ]
[e :U 2121 ]
{
[e $U 2125  ]
[e :U 2126 ]
[e :U 2125 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2126  ]
[e :U 2127 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2128  ]
[e :U 2129 ]
[e :U 2128 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2129  ]
[e :U 2130 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR2H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2131  ]
[e :U 2132 ]
[e :U 2131 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2132  ]
[e :U 2133 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR2H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2134  ]
[e :U 2135 ]
[e :U 2134 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2135  ]
[e :U 2136 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2137  ]
[e :U 2138 ]
[e :U 2137 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2138  ]
[e :U 2139 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2118 ]
}
[e :U 2116 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 2142 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2143  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 53C ]
[e $U 2144  ]
[e :U 2145 ]
{
{
[e $U 2147  ]
[e :U 2148 ]
[e :U 2147 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2148  ]
[e :U 2149 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2144 ]
[e $ != -> *U __s `i -> 0 `i 2145  ]
[e :U 2146 ]
{
[e $U 2150  ]
[e :U 2151 ]
[e :U 2150 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2151  ]
[e :U 2152 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2153  ]
[e :U 2154 ]
[e :U 2153 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2154  ]
[e :U 2155 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2156  ]
[e :U 2157 ]
[e :U 2156 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2157  ]
[e :U 2158 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2159  ]
[e :U 2160 ]
[e :U 2159 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2160  ]
[e :U 2161 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2162  ]
[e :U 2163 ]
[e :U 2162 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2163  ]
[e :U 2164 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2143 ]
}
[e :U 2141 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 2167 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2168  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 54C ]
[e $U 2169  ]
[e :U 2170 ]
{
{
[e $U 2172  ]
[e :U 2173 ]
[e :U 2172 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2173  ]
[e :U 2174 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2169 ]
[e $ != -> *U __s `i -> 0 `i 2170  ]
[e :U 2171 ]
{
[e $U 2175  ]
[e :U 2176 ]
[e :U 2175 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2176  ]
[e :U 2177 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2178  ]
[e :U 2179 ]
[e :U 2178 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2179  ]
[e :U 2180 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2181  ]
[e :U 2182 ]
[e :U 2181 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2182  ]
[e :U 2183 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2184  ]
[e :U 2185 ]
[e :U 2184 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2185  ]
[e :U 2186 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2187  ]
[e :U 2188 ]
[e :U 2187 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2188  ]
[e :U 2189 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2168 ]
}
[e :U 2166 ]
[; <" MOVFF	TABLAT, PREINC1 ;# ">
[e :U 2192 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2193  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 55C ]
[e $U 2194  ]
[e :U 2195 ]
{
{
[e $U 2197  ]
[e :U 2198 ]
[e :U 2197 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2198  ]
[e :U 2199 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2194 ]
[e $ != -> *U __s `i -> 0 `i 2195  ]
[e :U 2196 ]
{
[e $U 2200  ]
[e :U 2201 ]
[e :U 2200 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2201  ]
[e :U 2202 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2203  ]
[e :U 2204 ]
[e :U 2203 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2204  ]
[e :U 2205 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TABLAT `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2206  ]
[e :U 2207 ]
[e :U 2206 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2207  ]
[e :U 2208 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TABLAT `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2209  ]
[e :U 2210 ]
[e :U 2209 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2210  ]
[e :U 2211 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2212  ]
[e :U 2213 ]
[e :U 2212 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2213  ]
[e :U 2214 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2193 ]
}
[e :U 2191 ]
[; <" MOVFF	TBLPTRU, PREINC1 ;# ">
[e :U 2217 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2218  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 56C ]
[e $U 2219  ]
[e :U 2220 ]
{
{
[e $U 2222  ]
[e :U 2223 ]
[e :U 2222 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2223  ]
[e :U 2224 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2219 ]
[e $ != -> *U __s `i -> 0 `i 2220  ]
[e :U 2221 ]
{
[e $U 2225  ]
[e :U 2226 ]
[e :U 2225 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2226  ]
[e :U 2227 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2228  ]
[e :U 2229 ]
[e :U 2228 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2229  ]
[e :U 2230 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2231  ]
[e :U 2232 ]
[e :U 2231 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2232  ]
[e :U 2233 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2234  ]
[e :U 2235 ]
[e :U 2234 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2235  ]
[e :U 2236 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2237  ]
[e :U 2238 ]
[e :U 2237 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2238  ]
[e :U 2239 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2218 ]
}
[e :U 2216 ]
[; <" MOVFF	TBLPTRH, PREINC1 ;# ">
[e :U 2242 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2243  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 57C ]
[e $U 2244  ]
[e :U 2245 ]
{
{
[e $U 2247  ]
[e :U 2248 ]
[e :U 2247 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2248  ]
[e :U 2249 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2244 ]
[e $ != -> *U __s `i -> 0 `i 2245  ]
[e :U 2246 ]
{
[e $U 2250  ]
[e :U 2251 ]
[e :U 2250 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2251  ]
[e :U 2252 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2253  ]
[e :U 2254 ]
[e :U 2253 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2254  ]
[e :U 2255 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2256  ]
[e :U 2257 ]
[e :U 2256 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2257  ]
[e :U 2258 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2259  ]
[e :U 2260 ]
[e :U 2259 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2260  ]
[e :U 2261 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2262  ]
[e :U 2263 ]
[e :U 2262 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2263  ]
[e :U 2264 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2243 ]
}
[e :U 2241 ]
[; <" MOVFF	TBLPTRL, PREINC1 ;# ">
[e :U 2267 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2268  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 58C ]
[e $U 2269  ]
[e :U 2270 ]
{
{
[e $U 2272  ]
[e :U 2273 ]
[e :U 2272 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2273  ]
[e :U 2274 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2269 ]
[e $ != -> *U __s `i -> 0 `i 2270  ]
[e :U 2271 ]
{
[e $U 2275  ]
[e :U 2276 ]
[e :U 2275 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2276  ]
[e :U 2277 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2278  ]
[e :U 2279 ]
[e :U 2278 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2279  ]
[e :U 2280 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2281  ]
[e :U 2282 ]
[e :U 2281 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2282  ]
[e :U 2283 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2284  ]
[e :U 2285 ]
[e :U 2284 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2285  ]
[e :U 2286 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2287  ]
[e :U 2288 ]
[e :U 2287 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2288  ]
[e :U 2289 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2268 ]
}
[e :U 2266 ]
[; <" MOVFF	PRODH, PREINC1 ;# ">
[e :U 2292 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2293  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 59C ]
[e $U 2294  ]
[e :U 2295 ]
{
{
[e $U 2297  ]
[e :U 2298 ]
[e :U 2297 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2298  ]
[e :U 2299 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2294 ]
[e $ != -> *U __s `i -> 0 `i 2295  ]
[e :U 2296 ]
{
[e $U 2300  ]
[e :U 2301 ]
[e :U 2300 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2301  ]
[e :U 2302 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2303  ]
[e :U 2304 ]
[e :U 2303 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2304  ]
[e :U 2305 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PRODH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2306  ]
[e :U 2307 ]
[e :U 2306 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2307  ]
[e :U 2308 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PRODH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2309  ]
[e :U 2310 ]
[e :U 2309 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2310  ]
[e :U 2311 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2312  ]
[e :U 2313 ]
[e :U 2312 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2313  ]
[e :U 2314 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2293 ]
}
[e :U 2291 ]
[; <" MOVFF	PRODL, PREINC1 ;# ">
[e :U 2317 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2318  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 60C ]
[e $U 2319  ]
[e :U 2320 ]
{
{
[e $U 2322  ]
[e :U 2323 ]
[e :U 2322 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2323  ]
[e :U 2324 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2319 ]
[e $ != -> *U __s `i -> 0 `i 2320  ]
[e :U 2321 ]
{
[e $U 2325  ]
[e :U 2326 ]
[e :U 2325 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2326  ]
[e :U 2327 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2328  ]
[e :U 2329 ]
[e :U 2328 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2329  ]
[e :U 2330 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PRODL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2331  ]
[e :U 2332 ]
[e :U 2331 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2332  ]
[e :U 2333 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PRODL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2334  ]
[e :U 2335 ]
[e :U 2334 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2335  ]
[e :U 2336 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2337  ]
[e :U 2338 ]
[e :U 2337 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2338  ]
[e :U 2339 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2318 ]
}
[e :U 2316 ]
[; <" MOVFF	PCLATU, PREINC1 ;# ">
[e :U 2342 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2343  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 61C ]
[e $U 2344  ]
[e :U 2345 ]
{
{
[e $U 2347  ]
[e :U 2348 ]
[e :U 2347 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2348  ]
[e :U 2349 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2344 ]
[e $ != -> *U __s `i -> 0 `i 2345  ]
[e :U 2346 ]
{
[e $U 2350  ]
[e :U 2351 ]
[e :U 2350 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2351  ]
[e :U 2352 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2353  ]
[e :U 2354 ]
[e :U 2353 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2354  ]
[e :U 2355 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PCLATU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2356  ]
[e :U 2357 ]
[e :U 2356 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2357  ]
[e :U 2358 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PCLATU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2359  ]
[e :U 2360 ]
[e :U 2359 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2360  ]
[e :U 2361 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2362  ]
[e :U 2363 ]
[e :U 2362 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2363  ]
[e :U 2364 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2343 ]
}
[e :U 2341 ]
[; <" MOVFF	PCLATH, PREINC1 ;# ">
[e :U 2367 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2368  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 62C ]
[e $U 2369  ]
[e :U 2370 ]
{
{
[e $U 2372  ]
[e :U 2373 ]
[e :U 2372 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2373  ]
[e :U 2374 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2369 ]
[e $ != -> *U __s `i -> 0 `i 2370  ]
[e :U 2371 ]
{
[e $U 2375  ]
[e :U 2376 ]
[e :U 2375 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2376  ]
[e :U 2377 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2378  ]
[e :U 2379 ]
[e :U 2378 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2379  ]
[e :U 2380 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PCLATH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2381  ]
[e :U 2382 ]
[e :U 2381 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2382  ]
[e :U 2383 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PCLATH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2384  ]
[e :U 2385 ]
[e :U 2384 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2385  ]
[e :U 2386 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2387  ]
[e :U 2388 ]
[e :U 2387 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2388  ]
[e :U 2389 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2368 ]
}
[e :U 2366 ]
[; <" CLRF	FSR0L, 0 ;# ">
[; <" CLRF	FSR0H, 0 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	POSTINC0, PREINC1 ;# ">
[; <" MOVFF	INDF0, PREINC1 ;# ">
[e :U 2392 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2393  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 63C ]
[e $U 2394  ]
[e :U 2395 ]
{
{
[e $U 2397  ]
[e :U 2398 ]
[e :U 2397 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2398  ]
[e :U 2399 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2394 ]
[e $ != -> *U __s `i -> 0 `i 2395  ]
[e :U 2396 ]
{
[e $U 2400  ]
[e :U 2401 ]
[e :U 2400 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2401  ]
[e :U 2402 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2403  ]
[e :U 2404 ]
[e :U 2403 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2404  ]
[e :U 2405 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _INDF0 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2406  ]
[e :U 2407 ]
[e :U 2406 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2407  ]
[e :U 2408 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _INDF0 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2409  ]
[e :U 2410 ]
[e :U 2409 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2410  ]
[e :U 2411 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2412  ]
[e :U 2413 ]
[e :U 2412 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2413  ]
[e :U 2414 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2393 ]
}
[e :U 2391 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 2417 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2418  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 64C ]
[e $U 2419  ]
[e :U 2420 ]
{
{
[e $U 2422  ]
[e :U 2423 ]
[e :U 2422 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2423  ]
[e :U 2424 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2419 ]
[e $ != -> *U __s `i -> 0 `i 2420  ]
[e :U 2421 ]
{
[e $U 2425  ]
[e :U 2426 ]
[e :U 2425 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2426  ]
[e :U 2427 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2428  ]
[e :U 2429 ]
[e :U 2428 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2429  ]
[e :U 2430 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2431  ]
[e :U 2432 ]
[e :U 2431 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2432  ]
[e :U 2433 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2434  ]
[e :U 2435 ]
[e :U 2434 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2435  ]
[e :U 2436 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2437  ]
[e :U 2438 ]
[e :U 2437 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2438  ]
[e :U 2439 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2418 ]
}
[e :U 2416 ]
[; <" MOVFF	FSR0H, PREINC1 ;# ">
[e :U 2442 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2443  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 65C ]
[e $U 2444  ]
[e :U 2445 ]
{
{
[e $U 2447  ]
[e :U 2448 ]
[e :U 2447 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2448  ]
[e :U 2449 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2444 ]
[e $ != -> *U __s `i -> 0 `i 2445  ]
[e :U 2446 ]
{
[e $U 2450  ]
[e :U 2451 ]
[e :U 2450 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2451  ]
[e :U 2452 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2453  ]
[e :U 2454 ]
[e :U 2453 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2454  ]
[e :U 2455 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2456  ]
[e :U 2457 ]
[e :U 2456 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2457  ]
[e :U 2458 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2459  ]
[e :U 2460 ]
[e :U 2459 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2460  ]
[e :U 2461 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2462  ]
[e :U 2463 ]
[e :U 2462 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2463  ]
[e :U 2464 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2443 ]
}
[e :U 2441 ]
[; <" MOVFF	STKPTR, FSR0L ;# ">
[e :U 2467 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2468  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 66C ]
[e $U 2469  ]
[e :U 2470 ]
{
{
[e $U 2472  ]
[e :U 2473 ]
[e :U 2472 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2473  ]
[e :U 2474 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2469 ]
[e $ != -> *U __s `i -> 0 `i 2470  ]
[e :U 2471 ]
{
[e $U 2475  ]
[e :U 2476 ]
[e :U 2475 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2476  ]
[e :U 2477 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2478  ]
[e :U 2479 ]
[e :U 2478 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2479  ]
[e :U 2480 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _STKPTR `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2481  ]
[e :U 2482 ]
[e :U 2481 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2482  ]
[e :U 2483 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _STKPTR `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2484  ]
[e :U 2485 ]
[e :U 2484 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2485  ]
[e :U 2486 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2487  ]
[e :U 2488 ]
[e :U 2487 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2488  ]
[e :U 2489 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2468 ]
}
[e :U 2466 ]
[e $U 2490  ]
[e :U 2491 ]
{
[; <" MOVFF	TOSL, PREINC1 ;# ">
[e :U 2495 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2496  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 67C ]
[e $U 2497  ]
[e :U 2498 ]
{
{
[e $U 2500  ]
[e :U 2501 ]
[e :U 2500 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2501  ]
[e :U 2502 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2497 ]
[e $ != -> *U __s `i -> 0 `i 2498  ]
[e :U 2499 ]
{
[e $U 2503  ]
[e :U 2504 ]
[e :U 2503 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2504  ]
[e :U 2505 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2506  ]
[e :U 2507 ]
[e :U 2506 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2507  ]
[e :U 2508 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2509  ]
[e :U 2510 ]
[e :U 2509 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2510  ]
[e :U 2511 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2512  ]
[e :U 2513 ]
[e :U 2512 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2513  ]
[e :U 2514 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2515  ]
[e :U 2516 ]
[e :U 2515 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2516  ]
[e :U 2517 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2496 ]
}
[e :U 2494 ]
[; <" MOVFF	TOSH, PREINC1 ;# ">
[e :U 2520 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2521  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 68C ]
[e $U 2522  ]
[e :U 2523 ]
{
{
[e $U 2525  ]
[e :U 2526 ]
[e :U 2525 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2526  ]
[e :U 2527 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2522 ]
[e $ != -> *U __s `i -> 0 `i 2523  ]
[e :U 2524 ]
{
[e $U 2528  ]
[e :U 2529 ]
[e :U 2528 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2529  ]
[e :U 2530 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2531  ]
[e :U 2532 ]
[e :U 2531 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2532  ]
[e :U 2533 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2534  ]
[e :U 2535 ]
[e :U 2534 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2535  ]
[e :U 2536 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2537  ]
[e :U 2538 ]
[e :U 2537 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2538  ]
[e :U 2539 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2540  ]
[e :U 2541 ]
[e :U 2540 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2541  ]
[e :U 2542 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2521 ]
}
[e :U 2519 ]
[; <" MOVFF	TOSU, PREINC1 ;# ">
[e :U 2545 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2546  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 69C ]
[e $U 2547  ]
[e :U 2548 ]
{
{
[e $U 2550  ]
[e :U 2551 ]
[e :U 2550 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2551  ]
[e :U 2552 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2547 ]
[e $ != -> *U __s `i -> 0 `i 2548  ]
[e :U 2549 ]
{
[e $U 2553  ]
[e :U 2554 ]
[e :U 2553 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2554  ]
[e :U 2555 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2556  ]
[e :U 2557 ]
[e :U 2556 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2557  ]
[e :U 2558 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2559  ]
[e :U 2560 ]
[e :U 2559 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2560  ]
[e :U 2561 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2562  ]
[e :U 2563 ]
[e :U 2562 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2563  ]
[e :U 2564 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2565  ]
[e :U 2566 ]
[e :U 2565 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2566  ]
[e :U 2567 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2546 ]
}
[e :U 2544 ]
[; <" POP ;# ">
}
[e :U 2490 ]
[e $ > -> _STKPTR `i -> -> -> 0 `i `uc `i 2491  ]
[e :U 2492 ]
[; <" MOVFF	FSR0L, PREINC1 ;# ">
[e :U 2570 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2571  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 70C ]
[e $U 2572  ]
[e :U 2573 ]
{
{
[e $U 2575  ]
[e :U 2576 ]
[e :U 2575 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2576  ]
[e :U 2577 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2572 ]
[e $ != -> *U __s `i -> 0 `i 2573  ]
[e :U 2574 ]
{
[e $U 2578  ]
[e :U 2579 ]
[e :U 2578 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2579  ]
[e :U 2580 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2581  ]
[e :U 2582 ]
[e :U 2581 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2582  ]
[e :U 2583 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2584  ]
[e :U 2585 ]
[e :U 2584 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2585  ]
[e :U 2586 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2587  ]
[e :U 2588 ]
[e :U 2587 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2588  ]
[e :U 2589 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2590  ]
[e :U 2591 ]
[e :U 2590 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2591  ]
[e :U 2592 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2571 ]
}
[e :U 2569 ]
[; <" MOVF	PREINC1, 1, 0 ;# ">
[; <" MOVFF	(_pxCurrentTCB), FSR0L ;# ">
[e :U 2595 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2596  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 71C ]
[e $U 2597  ]
[e :U 2598 ]
{
{
[e $U 2600  ]
[e :U 2601 ]
[e :U 2600 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2601  ]
[e :U 2602 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2597 ]
[e $ != -> *U __s `i -> 0 `i 2598  ]
[e :U 2599 ]
{
[e $U 2603  ]
[e :U 2604 ]
[e :U 2603 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2604  ]
[e :U 2605 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2606  ]
[e :U 2607 ]
[e :U 2606 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2607  ]
[e :U 2608 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2609  ]
[e :U 2610 ]
[e :U 2609 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2610  ]
[e :U 2611 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2612  ]
[e :U 2613 ]
[e :U 2612 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2613  ]
[e :U 2614 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2615  ]
[e :U 2616 ]
[e :U 2615 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2616  ]
[e :U 2617 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2596 ]
}
[e :U 2594 ]
[; <" MOVFF	(_pxCurrentTCB + 1), FSR0H ;# ">
[e :U 2620 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2621  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 72C ]
[e $U 2622  ]
[e :U 2623 ]
{
{
[e $U 2625  ]
[e :U 2626 ]
[e :U 2625 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2626  ]
[e :U 2627 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2622 ]
[e $ != -> *U __s `i -> 0 `i 2623  ]
[e :U 2624 ]
{
[e $U 2628  ]
[e :U 2629 ]
[e :U 2628 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2629  ]
[e :U 2630 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2631  ]
[e :U 2632 ]
[e :U 2631 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2632  ]
[e :U 2633 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2634  ]
[e :U 2635 ]
[e :U 2634 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2635  ]
[e :U 2636 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2637  ]
[e :U 2638 ]
[e :U 2637 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2638  ]
[e :U 2639 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2640  ]
[e :U 2641 ]
[e :U 2640 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2641  ]
[e :U 2642 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2621 ]
}
[e :U 2619 ]
[; <" MOVFF	FSR1L, POSTINC0 ;# ">
[e :U 2645 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2646  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 73C ]
[e $U 2647  ]
[e :U 2648 ]
{
{
[e $U 2650  ]
[e :U 2651 ]
[e :U 2650 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2651  ]
[e :U 2652 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2647 ]
[e $ != -> *U __s `i -> 0 `i 2648  ]
[e :U 2649 ]
{
[e $U 2653  ]
[e :U 2654 ]
[e :U 2653 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2654  ]
[e :U 2655 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2656  ]
[e :U 2657 ]
[e :U 2656 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2657  ]
[e :U 2658 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR1L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2659  ]
[e :U 2660 ]
[e :U 2659 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2660  ]
[e :U 2661 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR1L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2662  ]
[e :U 2663 ]
[e :U 2662 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2663  ]
[e :U 2664 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2665  ]
[e :U 2666 ]
[e :U 2665 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2666  ]
[e :U 2667 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2646 ]
}
[e :U 2644 ]
[; <" MOVFF	FSR1H, POSTINC0 ;# ">
[e :U 2670 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2671  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 74C ]
[e $U 2672  ]
[e :U 2673 ]
{
{
[e $U 2675  ]
[e :U 2676 ]
[e :U 2675 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2676  ]
[e :U 2677 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2672 ]
[e $ != -> *U __s `i -> 0 `i 2673  ]
[e :U 2674 ]
{
[e $U 2678  ]
[e :U 2679 ]
[e :U 2678 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2679  ]
[e :U 2680 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2681  ]
[e :U 2682 ]
[e :U 2681 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2682  ]
[e :U 2683 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR1H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2684  ]
[e :U 2685 ]
[e :U 2684 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2685  ]
[e :U 2686 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR1H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2687  ]
[e :U 2688 ]
[e :U 2687 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2688  ]
[e :U 2689 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2690  ]
[e :U 2691 ]
[e :U 2690 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2691  ]
[e :U 2692 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2671 ]
}
[e :U 2669 ]
}
"832
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 832:         do { if( isr_cnt < 10 ){ const char* _s = ("ISR="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 2 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 2 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 2695 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2696  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 75C ]
[e $U 2697  ]
[e :U 2698 ]
{
{
[e $U 2700  ]
[e :U 2701 ]
[e :U 2700 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2701  ]
[e :U 2702 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2697 ]
[e $ != -> *U __s `i -> 0 `i 2698  ]
[e :U 2699 ]
{
[e $U 2703  ]
[e :U 2704 ]
[e :U 2703 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2704  ]
[e :U 2705 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 2 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2706  ]
[e :U 2707 ]
[e :U 2706 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2707  ]
[e :U 2708 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 2 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2709  ]
[e :U 2710 ]
[e :U 2709 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2710  ]
[e :U 2711 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2712  ]
[e :U 2713 ]
[e :U 2712 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2713  ]
[e :U 2714 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2696 ]
}
[e :U 2694 ]
"833
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 833:         stack_ptr_disp();
[e ( _stack_ptr_disp ..  ]
"836
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 836:         PIR1bits.CCP1IF = 0;
[e = . . _PIR1bits 0 2 -> -> 0 `i `uc ]
"842
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 842:             pxCurrentTCB_point(&dt);
[e ( _pxCurrentTCB_point (1 &U _dt ]
"843
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 843:         do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 2717 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2718  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 76C ]
[e $U 2719  ]
[e :U 2720 ]
{
{
[e $U 2722  ]
[e :U 2723 ]
[e :U 2722 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2723  ]
[e :U 2724 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2719 ]
[e $ != -> *U __s `i -> 0 `i 2720  ]
[e :U 2721 ]
{
[e $U 2725  ]
[e :U 2726 ]
[e :U 2725 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2726  ]
[e :U 2727 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2728  ]
[e :U 2729 ]
[e :U 2728 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2729  ]
[e :U 2730 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2731  ]
[e :U 2732 ]
[e :U 2731 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2732  ]
[e :U 2733 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2734  ]
[e :U 2735 ]
[e :U 2734 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2735  ]
[e :U 2736 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2737  ]
[e :U 2738 ]
[e :U 2737 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2738  ]
[e :U 2739 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2740  ]
[e :U 2741 ]
[e :U 2740 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2741  ]
[e :U 2742 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2743  ]
[e :U 2744 ]
[e :U 2743 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2744  ]
[e :U 2745 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2746  ]
[e :U 2747 ]
[e :U 2746 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2747  ]
[e :U 2748 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2749  ]
[e :U 2750 ]
[e :U 2749 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2750  ]
[e :U 2751 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2752  ]
[e :U 2753 ]
[e :U 2752 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2753  ]
[e :U 2754 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2718 ]
}
[e :U 2716 ]
"844
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 844:         if( xTaskIncrementTick() != ( ( BaseType_t ) 0 ) ){
[e $ ! != -> ( _xTaskIncrementTick ..  `i -> -> -> 0 `i `c `i 2755  ]
{
"845
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 845:             do { if( isr_cnt < 10 ){ const char* _s = ("ISR="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 3 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 3 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 2758 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2759  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 77C ]
[e $U 2760  ]
[e :U 2761 ]
{
{
[e $U 2763  ]
[e :U 2764 ]
[e :U 2763 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2764  ]
[e :U 2765 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2760 ]
[e $ != -> *U __s `i -> 0 `i 2761  ]
[e :U 2762 ]
{
[e $U 2766  ]
[e :U 2767 ]
[e :U 2766 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2767  ]
[e :U 2768 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 3 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2769  ]
[e :U 2770 ]
[e :U 2769 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2770  ]
[e :U 2771 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 3 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2772  ]
[e :U 2773 ]
[e :U 2772 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2773  ]
[e :U 2774 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2775  ]
[e :U 2776 ]
[e :U 2775 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2776  ]
[e :U 2777 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2759 ]
}
[e :U 2757 ]
"848
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 848:             vTaskSwitchContext();
[e ( _vTaskSwitchContext ..  ]
"849
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 849:         }
}
[e $U 2778  ]
"850
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 850:         else if(isr_cnt == 0){
[e :U 2755 ]
[e $ ! == -> _isr_cnt `i -> 0 `i 2779  ]
{
"851
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 851:             isr_cnt = 1;
[e = _isr_cnt -> -> 1 `i `uc ]
"852
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 852:             vTaskSwitchContext();
[e ( _vTaskSwitchContext ..  ]
"853
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 853:         }
}
[e :U 2779 ]
[e :U 2778 ]
"854
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 854:         do { if( isr_cnt < 10 ){ const char* _s = ("ISR="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 4 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 4 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 2782 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2783  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 78C ]
[e $U 2784  ]
[e :U 2785 ]
{
{
[e $U 2787  ]
[e :U 2788 ]
[e :U 2787 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2788  ]
[e :U 2789 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2784 ]
[e $ != -> *U __s `i -> 0 `i 2785  ]
[e :U 2786 ]
{
[e $U 2790  ]
[e :U 2791 ]
[e :U 2790 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2791  ]
[e :U 2792 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 4 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2793  ]
[e :U 2794 ]
[e :U 2793 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2794  ]
[e :U 2795 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2796  ]
[e :U 2797 ]
[e :U 2796 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2797  ]
[e :U 2798 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2799  ]
[e :U 2800 ]
[e :U 2799 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2800  ]
[e :U 2801 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2783 ]
}
[e :U 2781 ]
"855
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 855:         pxCurrentTCB_point(&dt);
[e ( _pxCurrentTCB_point (1 &U _dt ]
"856
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 856:         do { if( isr_cnt < 10 ){ const char* _s = ("pxCurrentTCB="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 28 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 24 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 20 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 16 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 12 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 8 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( dt & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 2804 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2805  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 79C ]
[e $U 2806  ]
[e :U 2807 ]
{
{
[e $U 2809  ]
[e :U 2810 ]
[e :U 2809 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2810  ]
[e :U 2811 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2806 ]
[e $ != -> *U __s `i -> 0 `i 2807  ]
[e :U 2808 ]
{
[e $U 2812  ]
[e :U 2813 ]
[e :U 2812 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2813  ]
[e :U 2814 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 28 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2815  ]
[e :U 2816 ]
[e :U 2815 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2816  ]
[e :U 2817 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 24 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2818  ]
[e :U 2819 ]
[e :U 2818 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2819  ]
[e :U 2820 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 20 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2821  ]
[e :U 2822 ]
[e :U 2821 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2822  ]
[e :U 2823 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 16 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2824  ]
[e :U 2825 ]
[e :U 2824 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2825  ]
[e :U 2826 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 12 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2827  ]
[e :U 2828 ]
[e :U 2827 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2828  ]
[e :U 2829 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 8 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2830  ]
[e :U 2831 ]
[e :U 2830 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2831  ]
[e :U 2832 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> _dt -> 4 `i -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2833  ]
[e :U 2834 ]
[e :U 2833 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2834  ]
[e :U 2835 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & _dt -> -> -> 15 `i `l `ul `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2836  ]
[e :U 2837 ]
[e :U 2836 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2837  ]
[e :U 2838 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2839  ]
[e :U 2840 ]
[e :U 2839 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2840  ]
[e :U 2841 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2805 ]
}
[e :U 2803 ]
"858
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 858:         { __asm("MOVFF	(_pxCurrentTCB), FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	(_pxCurrentTCB + 1), FSR0H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTINC0, FSR1L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR1L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTINC0, FSR1H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR1H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR1H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); STKPTR = 0; while( STKPTR < FSR0L ) { __asm("PUSH"); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSU, 0"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSH, 0"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVF	POSTDEC1, 0, 0"); __asm("MOVWF	TOSL, 0"); do { if( isr_cnt < 10 ){ const char* _s = ("TOSL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TOSL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); } __asm("MOVFF	POSTDEC1, FSR0H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, POSTDEC0"); __asm("MOVFF	POSTDEC1, INDF0"); do { if( isr_cnt < 10 ){ const char* _s = ("INDF0"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INDF0 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( INDF0 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, PCLATH"); do { if( isr_cnt < 10 ){ const char* _s = ("PCLATH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, PCLATU"); do { if( isr_cnt < 10 ){ const char* _s = ("PCLATU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PCLATU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, PRODL"); do { if( isr_cnt < 10 ){ const char* _s = ("PRODL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, PRODH"); do { if( isr_cnt < 10 ){ const char* _s = ("PRODH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( PRODH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, TBLPTRL"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRL"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRL >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRL & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, TBLPTRH"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRH"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRH >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRH & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, TBLPTRU"); do { if( isr_cnt < 10 ){ const char* _s = ("TBLPTRU"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRU >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TBLPTRU & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, TABLAT"); do { if( isr_cnt < 10 ){ const char* _s = ("TABLAT"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TABLAT >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( TABLAT & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR0H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR0L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR0L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR0L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR2H"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR2H"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2H >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2H & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, FSR2L"); do { if( isr_cnt < 10 ){ const char* _s = ("FSR2L"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2L >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( FSR2L & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, BSR"); do { if( isr_cnt < 10 ){ const char* _s = ("BSR"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( BSR >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( BSR & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, WREG"); do { if( isr_cnt < 10 ){ const char* _s = ("WREG"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, STATUS"); do { if( isr_cnt < 10 ){ const char* _s = ("STATUS"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STATUS >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( STATUS & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); __asm("MOVFF	POSTDEC1, WREG"); do { if( isr_cnt < 10 ){ const char* _s = ("WREG"); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = ('='); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( WREG & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0); };
{
[; <" MOVFF	(_pxCurrentTCB), FSR0L ;# ">
[e :U 2844 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2845  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 80C ]
[e $U 2846  ]
[e :U 2847 ]
{
{
[e $U 2849  ]
[e :U 2850 ]
[e :U 2849 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2850  ]
[e :U 2851 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2846 ]
[e $ != -> *U __s `i -> 0 `i 2847  ]
[e :U 2848 ]
{
[e $U 2852  ]
[e :U 2853 ]
[e :U 2852 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2853  ]
[e :U 2854 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2855  ]
[e :U 2856 ]
[e :U 2855 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2856  ]
[e :U 2857 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2858  ]
[e :U 2859 ]
[e :U 2858 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2859  ]
[e :U 2860 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2861  ]
[e :U 2862 ]
[e :U 2861 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2862  ]
[e :U 2863 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2864  ]
[e :U 2865 ]
[e :U 2864 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2865  ]
[e :U 2866 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2845 ]
}
[e :U 2843 ]
[; <" MOVFF	(_pxCurrentTCB + 1), FSR0H ;# ">
[e :U 2869 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2870  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 81C ]
[e $U 2871  ]
[e :U 2872 ]
{
{
[e $U 2874  ]
[e :U 2875 ]
[e :U 2874 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2875  ]
[e :U 2876 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2871 ]
[e $ != -> *U __s `i -> 0 `i 2872  ]
[e :U 2873 ]
{
[e $U 2877  ]
[e :U 2878 ]
[e :U 2877 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2878  ]
[e :U 2879 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2880  ]
[e :U 2881 ]
[e :U 2880 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2881  ]
[e :U 2882 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2883  ]
[e :U 2884 ]
[e :U 2883 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2884  ]
[e :U 2885 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2886  ]
[e :U 2887 ]
[e :U 2886 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2887  ]
[e :U 2888 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2889  ]
[e :U 2890 ]
[e :U 2889 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2890  ]
[e :U 2891 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2870 ]
}
[e :U 2868 ]
[; <" MOVFF	POSTINC0, FSR1L ;# ">
[e :U 2894 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2895  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 82C ]
[e $U 2896  ]
[e :U 2897 ]
{
{
[e $U 2899  ]
[e :U 2900 ]
[e :U 2899 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2900  ]
[e :U 2901 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2896 ]
[e $ != -> *U __s `i -> 0 `i 2897  ]
[e :U 2898 ]
{
[e $U 2902  ]
[e :U 2903 ]
[e :U 2902 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2903  ]
[e :U 2904 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2905  ]
[e :U 2906 ]
[e :U 2905 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2906  ]
[e :U 2907 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR1L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2908  ]
[e :U 2909 ]
[e :U 2908 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2909  ]
[e :U 2910 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR1L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2911  ]
[e :U 2912 ]
[e :U 2911 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2912  ]
[e :U 2913 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2914  ]
[e :U 2915 ]
[e :U 2914 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2915  ]
[e :U 2916 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2895 ]
}
[e :U 2893 ]
[; <" MOVFF	POSTINC0, FSR1H ;# ">
[e :U 2919 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2920  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 83C ]
[e $U 2921  ]
[e :U 2922 ]
{
{
[e $U 2924  ]
[e :U 2925 ]
[e :U 2924 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2925  ]
[e :U 2926 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2921 ]
[e $ != -> *U __s `i -> 0 `i 2922  ]
[e :U 2923 ]
{
[e $U 2927  ]
[e :U 2928 ]
[e :U 2927 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2928  ]
[e :U 2929 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2930  ]
[e :U 2931 ]
[e :U 2930 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2931  ]
[e :U 2932 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR1H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2933  ]
[e :U 2934 ]
[e :U 2933 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2934  ]
[e :U 2935 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR1H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2936  ]
[e :U 2937 ]
[e :U 2936 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2937  ]
[e :U 2938 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2939  ]
[e :U 2940 ]
[e :U 2939 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2940  ]
[e :U 2941 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2920 ]
}
[e :U 2918 ]
[; <" MOVFF	POSTDEC1, FSR0L ;# ">
[e :U 2944 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2945  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 84C ]
[e $U 2946  ]
[e :U 2947 ]
{
{
[e $U 2949  ]
[e :U 2950 ]
[e :U 2949 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2950  ]
[e :U 2951 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2946 ]
[e $ != -> *U __s `i -> 0 `i 2947  ]
[e :U 2948 ]
{
[e $U 2952  ]
[e :U 2953 ]
[e :U 2952 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2953  ]
[e :U 2954 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2955  ]
[e :U 2956 ]
[e :U 2955 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2956  ]
[e :U 2957 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2958  ]
[e :U 2959 ]
[e :U 2958 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2959  ]
[e :U 2960 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2961  ]
[e :U 2962 ]
[e :U 2961 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2962  ]
[e :U 2963 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2964  ]
[e :U 2965 ]
[e :U 2964 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2965  ]
[e :U 2966 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2945 ]
}
[e :U 2943 ]
[; <" MOVFF	POSTDEC1, FSR0L ;# ">
[e :U 2969 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2970  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 85C ]
[e $U 2971  ]
[e :U 2972 ]
{
{
[e $U 2974  ]
[e :U 2975 ]
[e :U 2974 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2975  ]
[e :U 2976 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2971 ]
[e $ != -> *U __s `i -> 0 `i 2972  ]
[e :U 2973 ]
{
[e $U 2977  ]
[e :U 2978 ]
[e :U 2977 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2978  ]
[e :U 2979 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 2980  ]
[e :U 2981 ]
[e :U 2980 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2981  ]
[e :U 2982 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2983  ]
[e :U 2984 ]
[e :U 2983 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2984  ]
[e :U 2985 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 2986  ]
[e :U 2987 ]
[e :U 2986 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2987  ]
[e :U 2988 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 2989  ]
[e :U 2990 ]
[e :U 2989 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 2990  ]
[e :U 2991 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2970 ]
}
[e :U 2968 ]
[e = _STKPTR -> -> 0 `i `uc ]
[e $U 2992  ]
[e :U 2993 ]
{
[; <" PUSH ;# ">
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSU, 0 ;# ">
[e :U 2997 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 2998  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 86C ]
[e $U 2999  ]
[e :U 3000 ]
{
{
[e $U 3002  ]
[e :U 3003 ]
[e :U 3002 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3003  ]
[e :U 3004 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 2999 ]
[e $ != -> *U __s `i -> 0 `i 3000  ]
[e :U 3001 ]
{
[e $U 3005  ]
[e :U 3006 ]
[e :U 3005 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3006  ]
[e :U 3007 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3008  ]
[e :U 3009 ]
[e :U 3008 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3009  ]
[e :U 3010 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3011  ]
[e :U 3012 ]
[e :U 3011 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3012  ]
[e :U 3013 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3014  ]
[e :U 3015 ]
[e :U 3014 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3015  ]
[e :U 3016 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3017  ]
[e :U 3018 ]
[e :U 3017 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3018  ]
[e :U 3019 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 2998 ]
}
[e :U 2996 ]
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSH, 0 ;# ">
[e :U 3022 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3023  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 87C ]
[e $U 3024  ]
[e :U 3025 ]
{
{
[e $U 3027  ]
[e :U 3028 ]
[e :U 3027 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3028  ]
[e :U 3029 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3024 ]
[e $ != -> *U __s `i -> 0 `i 3025  ]
[e :U 3026 ]
{
[e $U 3030  ]
[e :U 3031 ]
[e :U 3030 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3031  ]
[e :U 3032 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3033  ]
[e :U 3034 ]
[e :U 3033 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3034  ]
[e :U 3035 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3036  ]
[e :U 3037 ]
[e :U 3036 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3037  ]
[e :U 3038 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3039  ]
[e :U 3040 ]
[e :U 3039 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3040  ]
[e :U 3041 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3042  ]
[e :U 3043 ]
[e :U 3042 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3043  ]
[e :U 3044 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3023 ]
}
[e :U 3021 ]
[; <" MOVF	POSTDEC1, 0, 0 ;# ">
[; <" MOVWF	TOSL, 0 ;# ">
[e :U 3047 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3048  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 88C ]
[e $U 3049  ]
[e :U 3050 ]
{
{
[e $U 3052  ]
[e :U 3053 ]
[e :U 3052 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3053  ]
[e :U 3054 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3049 ]
[e $ != -> *U __s `i -> 0 `i 3050  ]
[e :U 3051 ]
{
[e $U 3055  ]
[e :U 3056 ]
[e :U 3055 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3056  ]
[e :U 3057 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3058  ]
[e :U 3059 ]
[e :U 3058 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3059  ]
[e :U 3060 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TOSL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3061  ]
[e :U 3062 ]
[e :U 3061 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3062  ]
[e :U 3063 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TOSL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3064  ]
[e :U 3065 ]
[e :U 3064 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3065  ]
[e :U 3066 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3067  ]
[e :U 3068 ]
[e :U 3067 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3068  ]
[e :U 3069 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3048 ]
}
[e :U 3046 ]
}
[e :U 2992 ]
[e $ < -> _STKPTR `i -> _FSR0L `i 2993  ]
[e :U 2994 ]
[; <" MOVFF	POSTDEC1, FSR0H ;# ">
[e :U 3072 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3073  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 89C ]
[e $U 3074  ]
[e :U 3075 ]
{
{
[e $U 3077  ]
[e :U 3078 ]
[e :U 3077 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3078  ]
[e :U 3079 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3074 ]
[e $ != -> *U __s `i -> 0 `i 3075  ]
[e :U 3076 ]
{
[e $U 3080  ]
[e :U 3081 ]
[e :U 3080 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3081  ]
[e :U 3082 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3083  ]
[e :U 3084 ]
[e :U 3083 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3084  ]
[e :U 3085 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3086  ]
[e :U 3087 ]
[e :U 3086 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3087  ]
[e :U 3088 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3089  ]
[e :U 3090 ]
[e :U 3089 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3090  ]
[e :U 3091 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3092  ]
[e :U 3093 ]
[e :U 3092 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3093  ]
[e :U 3094 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3073 ]
}
[e :U 3071 ]
[; <" MOVFF	POSTDEC1, FSR0L ;# ">
[e :U 3097 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3098  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 90C ]
[e $U 3099  ]
[e :U 3100 ]
{
{
[e $U 3102  ]
[e :U 3103 ]
[e :U 3102 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3103  ]
[e :U 3104 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3099 ]
[e $ != -> *U __s `i -> 0 `i 3100  ]
[e :U 3101 ]
{
[e $U 3105  ]
[e :U 3106 ]
[e :U 3105 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3106  ]
[e :U 3107 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3108  ]
[e :U 3109 ]
[e :U 3108 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3109  ]
[e :U 3110 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3111  ]
[e :U 3112 ]
[e :U 3111 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3112  ]
[e :U 3113 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3114  ]
[e :U 3115 ]
[e :U 3114 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3115  ]
[e :U 3116 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3117  ]
[e :U 3118 ]
[e :U 3117 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3118  ]
[e :U 3119 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3098 ]
}
[e :U 3096 ]
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, POSTDEC0 ;# ">
[; <" MOVFF	POSTDEC1, INDF0 ;# ">
[e :U 3122 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3123  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 91C ]
[e $U 3124  ]
[e :U 3125 ]
{
{
[e $U 3127  ]
[e :U 3128 ]
[e :U 3127 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3128  ]
[e :U 3129 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3124 ]
[e $ != -> *U __s `i -> 0 `i 3125  ]
[e :U 3126 ]
{
[e $U 3130  ]
[e :U 3131 ]
[e :U 3130 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3131  ]
[e :U 3132 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3133  ]
[e :U 3134 ]
[e :U 3133 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3134  ]
[e :U 3135 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _INDF0 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3136  ]
[e :U 3137 ]
[e :U 3136 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3137  ]
[e :U 3138 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _INDF0 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3139  ]
[e :U 3140 ]
[e :U 3139 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3140  ]
[e :U 3141 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3142  ]
[e :U 3143 ]
[e :U 3142 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3143  ]
[e :U 3144 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3123 ]
}
[e :U 3121 ]
[; <" MOVFF	POSTDEC1, PCLATH ;# ">
[e :U 3147 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3148  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 92C ]
[e $U 3149  ]
[e :U 3150 ]
{
{
[e $U 3152  ]
[e :U 3153 ]
[e :U 3152 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3153  ]
[e :U 3154 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3149 ]
[e $ != -> *U __s `i -> 0 `i 3150  ]
[e :U 3151 ]
{
[e $U 3155  ]
[e :U 3156 ]
[e :U 3155 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3156  ]
[e :U 3157 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3158  ]
[e :U 3159 ]
[e :U 3158 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3159  ]
[e :U 3160 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PCLATH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3161  ]
[e :U 3162 ]
[e :U 3161 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3162  ]
[e :U 3163 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PCLATH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3164  ]
[e :U 3165 ]
[e :U 3164 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3165  ]
[e :U 3166 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3167  ]
[e :U 3168 ]
[e :U 3167 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3168  ]
[e :U 3169 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3148 ]
}
[e :U 3146 ]
[; <" MOVFF	POSTDEC1, PCLATU ;# ">
[e :U 3172 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3173  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 93C ]
[e $U 3174  ]
[e :U 3175 ]
{
{
[e $U 3177  ]
[e :U 3178 ]
[e :U 3177 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3178  ]
[e :U 3179 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3174 ]
[e $ != -> *U __s `i -> 0 `i 3175  ]
[e :U 3176 ]
{
[e $U 3180  ]
[e :U 3181 ]
[e :U 3180 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3181  ]
[e :U 3182 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3183  ]
[e :U 3184 ]
[e :U 3183 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3184  ]
[e :U 3185 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PCLATU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3186  ]
[e :U 3187 ]
[e :U 3186 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3187  ]
[e :U 3188 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PCLATU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3189  ]
[e :U 3190 ]
[e :U 3189 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3190  ]
[e :U 3191 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3192  ]
[e :U 3193 ]
[e :U 3192 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3193  ]
[e :U 3194 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3173 ]
}
[e :U 3171 ]
[; <" MOVFF	POSTDEC1, PRODL ;# ">
[e :U 3197 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3198  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 94C ]
[e $U 3199  ]
[e :U 3200 ]
{
{
[e $U 3202  ]
[e :U 3203 ]
[e :U 3202 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3203  ]
[e :U 3204 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3199 ]
[e $ != -> *U __s `i -> 0 `i 3200  ]
[e :U 3201 ]
{
[e $U 3205  ]
[e :U 3206 ]
[e :U 3205 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3206  ]
[e :U 3207 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3208  ]
[e :U 3209 ]
[e :U 3208 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3209  ]
[e :U 3210 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PRODL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3211  ]
[e :U 3212 ]
[e :U 3211 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3212  ]
[e :U 3213 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PRODL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3214  ]
[e :U 3215 ]
[e :U 3214 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3215  ]
[e :U 3216 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3217  ]
[e :U 3218 ]
[e :U 3217 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3218  ]
[e :U 3219 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3198 ]
}
[e :U 3196 ]
[; <" MOVFF	POSTDEC1, PRODH ;# ">
[e :U 3222 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3223  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 95C ]
[e $U 3224  ]
[e :U 3225 ]
{
{
[e $U 3227  ]
[e :U 3228 ]
[e :U 3227 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3228  ]
[e :U 3229 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3224 ]
[e $ != -> *U __s `i -> 0 `i 3225  ]
[e :U 3226 ]
{
[e $U 3230  ]
[e :U 3231 ]
[e :U 3230 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3231  ]
[e :U 3232 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3233  ]
[e :U 3234 ]
[e :U 3233 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3234  ]
[e :U 3235 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _PRODH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3236  ]
[e :U 3237 ]
[e :U 3236 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3237  ]
[e :U 3238 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _PRODH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3239  ]
[e :U 3240 ]
[e :U 3239 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3240  ]
[e :U 3241 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3242  ]
[e :U 3243 ]
[e :U 3242 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3243  ]
[e :U 3244 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3223 ]
}
[e :U 3221 ]
[; <" MOVFF	POSTDEC1, TBLPTRL ;# ">
[e :U 3247 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3248  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 96C ]
[e $U 3249  ]
[e :U 3250 ]
{
{
[e $U 3252  ]
[e :U 3253 ]
[e :U 3252 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3253  ]
[e :U 3254 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3249 ]
[e $ != -> *U __s `i -> 0 `i 3250  ]
[e :U 3251 ]
{
[e $U 3255  ]
[e :U 3256 ]
[e :U 3255 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3256  ]
[e :U 3257 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3258  ]
[e :U 3259 ]
[e :U 3258 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3259  ]
[e :U 3260 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRL `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3261  ]
[e :U 3262 ]
[e :U 3261 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3262  ]
[e :U 3263 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRL `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3264  ]
[e :U 3265 ]
[e :U 3264 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3265  ]
[e :U 3266 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3267  ]
[e :U 3268 ]
[e :U 3267 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3268  ]
[e :U 3269 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3248 ]
}
[e :U 3246 ]
[; <" MOVFF	POSTDEC1, TBLPTRH ;# ">
[e :U 3272 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3273  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 97C ]
[e $U 3274  ]
[e :U 3275 ]
{
{
[e $U 3277  ]
[e :U 3278 ]
[e :U 3277 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3278  ]
[e :U 3279 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3274 ]
[e $ != -> *U __s `i -> 0 `i 3275  ]
[e :U 3276 ]
{
[e $U 3280  ]
[e :U 3281 ]
[e :U 3280 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3281  ]
[e :U 3282 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3283  ]
[e :U 3284 ]
[e :U 3283 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3284  ]
[e :U 3285 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRH `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3286  ]
[e :U 3287 ]
[e :U 3286 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3287  ]
[e :U 3288 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRH `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3289  ]
[e :U 3290 ]
[e :U 3289 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3290  ]
[e :U 3291 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3292  ]
[e :U 3293 ]
[e :U 3292 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3293  ]
[e :U 3294 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3273 ]
}
[e :U 3271 ]
[; <" MOVFF	POSTDEC1, TBLPTRU ;# ">
[e :U 3297 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3298  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 98C ]
[e $U 3299  ]
[e :U 3300 ]
{
{
[e $U 3302  ]
[e :U 3303 ]
[e :U 3302 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3303  ]
[e :U 3304 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3299 ]
[e $ != -> *U __s `i -> 0 `i 3300  ]
[e :U 3301 ]
{
[e $U 3305  ]
[e :U 3306 ]
[e :U 3305 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3306  ]
[e :U 3307 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3308  ]
[e :U 3309 ]
[e :U 3308 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3309  ]
[e :U 3310 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TBLPTRU `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3311  ]
[e :U 3312 ]
[e :U 3311 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3312  ]
[e :U 3313 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TBLPTRU `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3314  ]
[e :U 3315 ]
[e :U 3314 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3315  ]
[e :U 3316 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3317  ]
[e :U 3318 ]
[e :U 3317 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3318  ]
[e :U 3319 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3298 ]
}
[e :U 3296 ]
[; <" MOVFF	POSTDEC1, TABLAT ;# ">
[e :U 3322 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3323  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 99C ]
[e $U 3324  ]
[e :U 3325 ]
{
{
[e $U 3327  ]
[e :U 3328 ]
[e :U 3327 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3328  ]
[e :U 3329 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3324 ]
[e $ != -> *U __s `i -> 0 `i 3325  ]
[e :U 3326 ]
{
[e $U 3330  ]
[e :U 3331 ]
[e :U 3330 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3331  ]
[e :U 3332 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3333  ]
[e :U 3334 ]
[e :U 3333 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3334  ]
[e :U 3335 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _TABLAT `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3336  ]
[e :U 3337 ]
[e :U 3336 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3337  ]
[e :U 3338 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _TABLAT `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3339  ]
[e :U 3340 ]
[e :U 3339 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3340  ]
[e :U 3341 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3342  ]
[e :U 3343 ]
[e :U 3342 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3343  ]
[e :U 3344 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3323 ]
}
[e :U 3321 ]
[; <" MOVFF	POSTDEC1, FSR0H ;# ">
[e :U 3347 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3348  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 100C ]
[e $U 3349  ]
[e :U 3350 ]
{
{
[e $U 3352  ]
[e :U 3353 ]
[e :U 3352 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3353  ]
[e :U 3354 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3349 ]
[e $ != -> *U __s `i -> 0 `i 3350  ]
[e :U 3351 ]
{
[e $U 3355  ]
[e :U 3356 ]
[e :U 3355 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3356  ]
[e :U 3357 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3358  ]
[e :U 3359 ]
[e :U 3358 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3359  ]
[e :U 3360 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3361  ]
[e :U 3362 ]
[e :U 3361 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3362  ]
[e :U 3363 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3364  ]
[e :U 3365 ]
[e :U 3364 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3365  ]
[e :U 3366 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3367  ]
[e :U 3368 ]
[e :U 3367 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3368  ]
[e :U 3369 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3348 ]
}
[e :U 3346 ]
[; <" MOVFF	POSTDEC1, FSR0L ;# ">
[e :U 3372 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3373  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 101C ]
[e $U 3374  ]
[e :U 3375 ]
{
{
[e $U 3377  ]
[e :U 3378 ]
[e :U 3377 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3378  ]
[e :U 3379 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3374 ]
[e $ != -> *U __s `i -> 0 `i 3375  ]
[e :U 3376 ]
{
[e $U 3380  ]
[e :U 3381 ]
[e :U 3380 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3381  ]
[e :U 3382 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3383  ]
[e :U 3384 ]
[e :U 3383 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3384  ]
[e :U 3385 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR0L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3386  ]
[e :U 3387 ]
[e :U 3386 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3387  ]
[e :U 3388 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR0L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3389  ]
[e :U 3390 ]
[e :U 3389 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3390  ]
[e :U 3391 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3392  ]
[e :U 3393 ]
[e :U 3392 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3393  ]
[e :U 3394 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3373 ]
}
[e :U 3371 ]
[; <" MOVFF	POSTDEC1, FSR2H ;# ">
[e :U 3397 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3398  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 102C ]
[e $U 3399  ]
[e :U 3400 ]
{
{
[e $U 3402  ]
[e :U 3403 ]
[e :U 3402 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3403  ]
[e :U 3404 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3399 ]
[e $ != -> *U __s `i -> 0 `i 3400  ]
[e :U 3401 ]
{
[e $U 3405  ]
[e :U 3406 ]
[e :U 3405 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3406  ]
[e :U 3407 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3408  ]
[e :U 3409 ]
[e :U 3408 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3409  ]
[e :U 3410 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR2H `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3411  ]
[e :U 3412 ]
[e :U 3411 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3412  ]
[e :U 3413 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR2H `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3414  ]
[e :U 3415 ]
[e :U 3414 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3415  ]
[e :U 3416 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3417  ]
[e :U 3418 ]
[e :U 3417 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3418  ]
[e :U 3419 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3398 ]
}
[e :U 3396 ]
[; <" MOVFF	POSTDEC1, FSR2L ;# ">
[e :U 3422 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3423  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 103C ]
[e $U 3424  ]
[e :U 3425 ]
{
{
[e $U 3427  ]
[e :U 3428 ]
[e :U 3427 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3428  ]
[e :U 3429 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3424 ]
[e $ != -> *U __s `i -> 0 `i 3425  ]
[e :U 3426 ]
{
[e $U 3430  ]
[e :U 3431 ]
[e :U 3430 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3431  ]
[e :U 3432 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3433  ]
[e :U 3434 ]
[e :U 3433 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3434  ]
[e :U 3435 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _FSR2L `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3436  ]
[e :U 3437 ]
[e :U 3436 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3437  ]
[e :U 3438 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _FSR2L `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3439  ]
[e :U 3440 ]
[e :U 3439 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3440  ]
[e :U 3441 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3442  ]
[e :U 3443 ]
[e :U 3442 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3443  ]
[e :U 3444 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3423 ]
}
[e :U 3421 ]
[; <" MOVFF	POSTDEC1, BSR ;# ">
[e :U 3447 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3448  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 104C ]
[e $U 3449  ]
[e :U 3450 ]
{
{
[e $U 3452  ]
[e :U 3453 ]
[e :U 3452 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3453  ]
[e :U 3454 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3449 ]
[e $ != -> *U __s `i -> 0 `i 3450  ]
[e :U 3451 ]
{
[e $U 3455  ]
[e :U 3456 ]
[e :U 3455 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3456  ]
[e :U 3457 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3458  ]
[e :U 3459 ]
[e :U 3458 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3459  ]
[e :U 3460 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _BSR `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3461  ]
[e :U 3462 ]
[e :U 3461 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3462  ]
[e :U 3463 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _BSR `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3464  ]
[e :U 3465 ]
[e :U 3464 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3465  ]
[e :U 3466 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3467  ]
[e :U 3468 ]
[e :U 3467 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3468  ]
[e :U 3469 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3448 ]
}
[e :U 3446 ]
[; <" MOVFF	POSTDEC1, WREG ;# ">
[e :U 3472 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3473  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 105C ]
[e $U 3474  ]
[e :U 3475 ]
{
{
[e $U 3477  ]
[e :U 3478 ]
[e :U 3477 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3478  ]
[e :U 3479 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3474 ]
[e $ != -> *U __s `i -> 0 `i 3475  ]
[e :U 3476 ]
{
[e $U 3480  ]
[e :U 3481 ]
[e :U 3480 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3481  ]
[e :U 3482 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3483  ]
[e :U 3484 ]
[e :U 3483 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3484  ]
[e :U 3485 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _WREG `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3486  ]
[e :U 3487 ]
[e :U 3486 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3487  ]
[e :U 3488 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _WREG `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3489  ]
[e :U 3490 ]
[e :U 3489 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3490  ]
[e :U 3491 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3492  ]
[e :U 3493 ]
[e :U 3492 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3493  ]
[e :U 3494 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3473 ]
}
[e :U 3471 ]
[; <" MOVFF	POSTDEC1, STATUS ;# ">
[e :U 3497 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3498  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 106C ]
[e $U 3499  ]
[e :U 3500 ]
{
{
[e $U 3502  ]
[e :U 3503 ]
[e :U 3502 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3503  ]
[e :U 3504 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3499 ]
[e $ != -> *U __s `i -> 0 `i 3500  ]
[e :U 3501 ]
{
[e $U 3505  ]
[e :U 3506 ]
[e :U 3505 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3506  ]
[e :U 3507 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3508  ]
[e :U 3509 ]
[e :U 3508 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3509  ]
[e :U 3510 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _STATUS `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3511  ]
[e :U 3512 ]
[e :U 3511 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3512  ]
[e :U 3513 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _STATUS `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3514  ]
[e :U 3515 ]
[e :U 3514 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3515  ]
[e :U 3516 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3517  ]
[e :U 3518 ]
[e :U 3517 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3518  ]
[e :U 3519 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3498 ]
}
[e :U 3496 ]
[; <" MOVFF	POSTDEC1, WREG ;# ">
[e :U 3522 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3523  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 107C ]
[e $U 3524  ]
[e :U 3525 ]
{
{
[e $U 3527  ]
[e :U 3528 ]
[e :U 3527 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3528  ]
[e :U 3529 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3524 ]
[e $ != -> *U __s `i -> 0 `i 3525  ]
[e :U 3526 ]
{
[e $U 3530  ]
[e :U 3531 ]
[e :U 3530 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3531  ]
[e :U 3532 ]
[e = _TXREG2 -> -> 61 `ui `uc ]
}
{
[e $U 3533  ]
[e :U 3534 ]
[e :U 3533 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3534  ]
[e :U 3535 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> _WREG `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3536  ]
[e :U 3537 ]
[e :U 3536 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3537  ]
[e :U 3538 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> _WREG `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3539  ]
[e :U 3540 ]
[e :U 3539 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3540  ]
[e :U 3541 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3542  ]
[e :U 3543 ]
[e :U 3542 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3543  ]
[e :U 3544 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3523 ]
}
[e :U 3521 ]
}
"859
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 859:         do { if( isr_cnt < 10 ){ const char* _s = ("ISR="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 5 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 5 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 3547 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 3548  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 108C ]
[e $U 3549  ]
[e :U 3550 ]
{
{
[e $U 3552  ]
[e :U 3553 ]
[e :U 3552 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3553  ]
[e :U 3554 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 3549 ]
[e $ != -> *U __s `i -> 0 `i 3550  ]
[e :U 3551 ]
{
[e $U 3555  ]
[e :U 3556 ]
[e :U 3555 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3556  ]
[e :U 3557 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 5 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3558  ]
[e :U 3559 ]
[e :U 3558 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3559  ]
[e :U 3560 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 5 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 3561  ]
[e :U 3562 ]
[e :U 3561 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3562  ]
[e :U 3563 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 3564  ]
[e :U 3565 ]
[e :U 3564 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 3565  ]
[e :U 3566 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 3548 ]
}
[e :U 3546 ]
"860
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 860:         __asm("RETFIE	0");
[; <" RETFIE	0 ;# ">
"861
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 861: }
[e :UE 1822 ]
}
"864
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 864: static void timer0_ISR(void)
[v _timer0_ISR `(v ~T0 @X0 1 sf ]
"865
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 865: {
{
[e :U _timer0_ISR ]
[f ]
"867
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 867:     INTCONbits.TMR0IF = 0;
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"869
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 869:     TMR0H = 0xFB60 >> 8;
[e = _TMR0H -> >> -> 64352 `ui -> 8 `i `uc ]
"870
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 870:     TMR0L = 0xFB60 & 0x00ff;
[e = _TMR0L -> & -> 64352 `ui -> -> 255 `i `ui `uc ]
"873
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 873:     RTCdt.usec ++;
[e ++ . _RTCdt 8 -> -> 1 `i `uc ]
"874
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 874:     if( RTCdt.usec > 10 ){
[e $ ! > -> . _RTCdt 8 `i -> 10 `i 3568  ]
{
"875
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 875:         RTCdt.usec = 0;
[e = . _RTCdt 8 -> -> 0 `i `uc ]
"876
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 876:         RTCdt.msec ++;
[e ++ . _RTCdt 7 -> -> 1 `i `us ]
"877
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 877:         if( RTCdt.msec > 1000 ){
[e $ ! > -> . _RTCdt 7 `ui -> -> 1000 `i `ui 3569  ]
{
"878
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 878:             RTCdt.msec = 0;
[e = . _RTCdt 7 -> -> 0 `i `us ]
"879
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 879:             RTCdt.sec ++;
[e ++ . _RTCdt 6 -> -> 1 `i `uc ]
"880
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 880:             if( RTCdt.sec > 60 ){
[e $ ! > -> . _RTCdt 6 `i -> 60 `i 3570  ]
{
"881
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 881:                 RTCdt.sec = 0;
[e = . _RTCdt 6 -> -> 0 `i `uc ]
"882
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 882:                 RTCdt.min ++;
[e ++ . _RTCdt 5 -> -> 1 `i `uc ]
"883
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 883:                 if( RTCdt.min > 60 ){
[e $ ! > -> . _RTCdt 5 `i -> 60 `i 3571  ]
{
"884
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 884:                     RTCdt.min = 0;
[e = . _RTCdt 5 -> -> 0 `i `uc ]
"885
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 885:                     RTCdt.hour ++;
[e ++ . _RTCdt 4 -> -> 1 `i `uc ]
"886
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 886:                 }
}
[e :U 3571 ]
"887
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 887:             }
}
[e :U 3570 ]
"888
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 888:         }
}
[e :U 3569 ]
"889
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 889:     }
}
[e :U 3568 ]
"891
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 891:     __asm("RETFIE	0");
[; <" RETFIE	0 ;# ">
"892
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 892: }
[e :UE 3567 ]
}
"893
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 893: void high_isr_main(void)
[v _high_isr_main `(v ~T0 @X0 1 ef ]
"894
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 894: {
{
[e :U _high_isr_main ]
[f ]
"896
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 896:     if( PIR1bits.CCP1IF ){
[e $ ! != -> . . _PIR1bits 0 2 `i -> 0 `i 3573  ]
{
"898
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 898:   __asm("goto _prvTickISR");
[; <" goto _prvTickISR ;# ">
"899
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 899:  }
}
[e :U 3573 ]
"901
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 901:     if( INTCONbits.TMR0IF ){
[e $ ! != -> . . _INTCONbits 0 2 `i -> 0 `i 3574  ]
{
"902
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 902:         __asm("goto _timer0_ISR");
[; <" goto _timer0_ISR ;# ">
"903
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 903:  }
}
[e :U 3574 ]
"905
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 905:     __asm("RETFIE	0");
[; <" RETFIE	0 ;# ">
"906
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 906: }
[e :UE 3572 ]
}
[v $root$_high_isr `(v ~T0 @X0 0 e ]
"909
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 909: void __attribute__((picinterrupt(("high_priority")))) high_isr(void)
[v _high_isr `(v ~T11 @X0 1 ef ]
"910
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 910: {
{
[e :U _high_isr ]
[f ]
"911
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 911:     __asm("goto _high_isr_main");
[; <" goto _high_isr_main ;# ">
"912
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 912: }
[e :UE 3575 ]
}
"981
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 981: static void prvSetupTimerInterrupt( void )
[v _prvSetupTimerInterrupt `(v ~T0 @X0 1 sf ]
"982
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 982: {
{
[e :U _prvSetupTimerInterrupt ]
[f ]
"983
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 983:     const uint32_t ulConstCompareValue = ( ( (( unsigned long ) 48000000) / ( ( uint32_t ) 4 ) ) / ( ( TickType_t ) 1000 ) );
[v _ulConstCompareValue `Cul ~T0 @X0 1 a ]
[e = _ulConstCompareValue / / -> -> 48000000 `l `ul -> -> 4 `i `ul -> -> -> 1000 `i `us `ul ]
"984
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 984:     uint32_t ulCompareValue;
[v _ulCompareValue `ul ~T0 @X0 1 a ]
"994
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 994:  TMR3H = ( uint8_t ) 0x00;
[e = _TMR3H -> -> 0 `i `uc ]
"995
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 995:  TMR3L = ( uint8_t ) 0x00;
[e = _TMR3L -> -> 0 `i `uc ]
"998
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 998:  ulCompareValue = ulConstCompareValue*5;
[e = _ulCompareValue * _ulConstCompareValue -> -> -> 5 `i `l `ul ]
"999
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 999:  CCPR1L = ( uint8_t ) ( ulCompareValue & ( uint32_t ) 0xff );
[e = _CCPR1L -> & _ulCompareValue -> -> 255 `i `ul `uc ]
"1000
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1000:  ulCompareValue >>= ( uint32_t ) 8;
[e =>> _ulCompareValue -> -> 8 `i `ul ]
"1001
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1001:  CCPR1H = ( uint8_t ) ( ulCompareValue & ( uint32_t ) 0xff );
[e = _CCPR1H -> & _ulCompareValue -> -> 255 `i `ul `uc ]
"1004
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1004:     Xprintf("CCPR4=%x,%x\r\n",CCPR1H,CCPR1L);
[e ( _Xprintf , , (. :s 109C -> _CCPR1H `i -> _CCPR1L `i ]
"1006
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1006:     CCP1CON = 0b00001011;
[e = _CCP1CON -> -> 11 `i `uc ]
"1007
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1007:     CCPTMRS0 = 0b00000001;
[e = _CCPTMRS0 -> -> 1 `i `uc ]
"1009
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1009:     T3CON = 0b00001011;
[e = _T3CON -> -> 11 `i `uc ]
"1012
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1012:     INTCONbits.GIE_GIEH = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"1013
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1013:     INTCONbits.PEIE_GIEL = 1;
[e = . . _INTCONbits 0 6 -> -> 1 `i `uc ]
"1014
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1014:     RCONbits.IPEN = 1;
[e = . . _RCONbits 6 7 -> -> 1 `i `uc ]
"1016
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1016:     IPR1bits.CCP1IP = 1;
[e = . . _IPR1bits 0 2 -> -> 1 `i `uc ]
"1017
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1017:  PIR1bits.CCP1IF = 0;
[e = . . _PIR1bits 0 2 -> -> 0 `i `uc ]
"1018
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1018:  PIE1bits.CCP1IE = 1;
[e = . . _PIE1bits 0 2 -> -> 1 `i `uc ]
"1020
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1020:     Xprintf("prvSetupTimerInterrupt(3)\r\n");
[e ( _Xprintf :s 110C ]
"1051
[; ;Source/FreeRTOS/portable/PIC18F/port.c: 1051: }
[e :UE 3576 ]
}
[a 28C 80 67 76 65 84 85 0 ]
[a 61C 80 67 76 65 84 85 0 ]
[a 93C 80 67 76 65 84 85 0 ]
[a 36C 84 79 83 85 0 ]
[a 69C 84 79 83 85 0 ]
[a 86C 84 79 83 85 0 ]
[a 23C 84 66 76 80 84 82 85 0 ]
[a 56C 84 66 76 80 84 82 85 0 ]
[a 98C 84 66 76 80 84 82 85 0 ]
[a 22C 84 65 66 76 65 84 0 ]
[a 55C 84 65 66 76 65 84 0 ]
[a 99C 84 65 66 76 65 84 0 ]
[a 14C 83 84 65 84 85 83 0 ]
[a 47C 83 84 65 84 85 83 0 ]
[a 106C 83 84 65 84 85 83 0 ]
[a 33C 83 84 75 80 84 82 0 ]
[a 66C 83 84 75 80 84 82 0 ]
[a 17C 66 83 82 0 ]
[a 50C 66 83 82 0 ]
[a 104C 66 83 82 0 ]
[a 15C 73 78 84 67 79 78 0 ]
[a 48C 73 78 84 67 79 78 0 ]
[a 34C 84 79 83 76 0 ]
[a 67C 84 79 83 76 0 ]
[a 88C 84 79 83 76 0 ]
[a 25C 84 66 76 80 84 82 76 0 ]
[a 58C 84 66 76 80 84 82 76 0 ]
[a 96C 84 66 76 80 84 82 76 0 ]
[a 27C 80 82 79 68 76 0 ]
[a 60C 80 82 79 68 76 0 ]
[a 94C 80 82 79 68 76 0 ]
[a 18C 70 83 82 50 76 0 ]
[a 51C 70 83 82 50 76 0 ]
[a 103C 70 83 82 50 76 0 ]
[a 40C 70 83 82 49 76 0 ]
[a 73C 70 83 82 49 76 0 ]
[a 82C 70 83 82 49 76 0 ]
[a 20C 70 83 82 48 76 0 ]
[a 21C 70 83 82 48 76 0 ]
[a 31C 70 83 82 48 76 0 ]
[a 37C 70 83 82 48 76 0 ]
[a 38C 70 83 82 48 76 0 ]
[a 53C 70 83 82 48 76 0 ]
[a 54C 70 83 82 48 76 0 ]
[a 64C 70 83 82 48 76 0 ]
[a 70C 70 83 82 48 76 0 ]
[a 71C 70 83 82 48 76 0 ]
[a 80C 70 83 82 48 76 0 ]
[a 84C 70 83 82 48 76 0 ]
[a 85C 70 83 82 48 76 0 ]
[a 90C 70 83 82 48 76 0 ]
[a 101C 70 83 82 48 76 0 ]
[a 29C 80 67 76 65 84 72 0 ]
[a 62C 80 67 76 65 84 72 0 ]
[a 92C 80 67 76 65 84 72 0 ]
[a 35C 84 79 83 72 0 ]
[a 68C 84 79 83 72 0 ]
[a 87C 84 79 83 72 0 ]
[a 24C 84 66 76 80 84 82 72 0 ]
[a 57C 84 66 76 80 84 82 72 0 ]
[a 97C 84 66 76 80 84 82 72 0 ]
[a 26C 80 82 79 68 72 0 ]
[a 59C 80 82 79 68 72 0 ]
[a 95C 80 82 79 68 72 0 ]
[a 19C 70 83 82 50 72 0 ]
[a 52C 70 83 82 50 72 0 ]
[a 102C 70 83 82 50 72 0 ]
[a 41C 70 83 82 49 72 0 ]
[a 74C 70 83 82 49 72 0 ]
[a 83C 70 83 82 49 72 0 ]
[a 32C 70 83 82 48 72 0 ]
[a 39C 70 83 82 48 72 0 ]
[a 65C 70 83 82 48 72 0 ]
[a 72C 70 83 82 48 72 0 ]
[a 81C 70 83 82 48 72 0 ]
[a 89C 70 83 82 48 72 0 ]
[a 100C 70 83 82 48 72 0 ]
[a 12C 87 82 69 71 0 ]
[a 16C 87 82 69 71 0 ]
[a 45C 87 82 69 71 0 ]
[a 49C 87 82 69 71 0 ]
[a 105C 87 82 69 71 0 ]
[a 107C 87 82 69 71 0 ]
[a 1C 112 73 83 61 0 ]
[a 42C 73 83 82 61 0 ]
[a 75C 73 83 82 61 0 ]
[a 77C 73 83 82 61 0 ]
[a 78C 73 83 82 61 0 ]
[a 108C 73 83 82 61 0 ]
[a 11C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 13C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 43C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 44C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 46C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 76C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 79C 112 120 67 117 114 114 101 110 116 84 67 66 61 0 ]
[a 30C 73 78 68 70 48 0 ]
[a 63C 73 78 68 70 48 0 ]
[a 91C 73 78 68 70 48 0 ]
[a 7C 37 100 58 32 48 120 37 120 13 10 0 ]
[a 109C 67 67 80 82 52 61 37 120 44 37 120 13 10 0 ]
[a 3C 117 108 65 100 100 114 101 115 115 61 37 112 13 10 0 ]
[a 2C 112 120 67 111 100 101 61 37 112 13 10 0 ]
[a 5C 32 32 83 116 97 99 107 32 76 105 115 116 32 37 112 32 45 32 37 112 13 10 0 ]
[a 4C 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 6C 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 8C 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 110C 112 114 118 83 101 116 117 112 84 105 109 101 114 73 110 116 101 114 114 117 112 116 40 51 41 13 10 0 ]
[a 10C 120 80 111 114 116 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 50 41 32 13 10 0 ]
[a 9C 120 80 111 114 116 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 49 41 32 13 10 0 ]
