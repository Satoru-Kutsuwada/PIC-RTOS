Version 4.0 HI-TECH Software Intermediate Code
"158 Source/FreeRTOS/include/list.h
[; ;Source/FreeRTOS/include/list.h: 158:     {
[s S932 `us 1 `*S930 1 `*S930 1 ]
[n S932 xMINI_LIST_ITEM xItemValue pxNext pxPrevious ]
"173
[; ;Source/FreeRTOS/include/list.h: 173: {
[s S931 `Vuc 1 `*S930 1 `S932 1 ]
[n S931 xLIST uxNumberOfItems pxIndex xListEnd ]
"145
[; ;Source/FreeRTOS/include/list.h: 145: {
[s S930 `us 1 `*S930 1 `*S930 1 `*v 1 `*S931 1 ]
[n S930 xLIST_ITEM xItemValue pxNext pxPrevious pvOwner pvContainer ]
"262 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 262: {
[s S936 `*Vuc 1 `S930 1 `S930 1 `uc 1 `*uc 1 `uc -> 4 `i `*uc 1 `uc 1 `uc 1 `Vul -> -> 1 `i `ux `Vuc -> -> 1 `i `ux ]
[n S936 tskTaskControlBlock pxTopOfStack xStateListItem xEventListItem uxPriority pxStack pcTaskName pxEndOfStack uxTCBNumber uxTaskNumber ulNotifiedValue ucNotifyState ]
[v F7548 `(v ~T0 @X0 0 tf1`*v ]
[v F7550 `*Cuc ~T0 @X0 1 t ]
[v F7551 `*v ~T0 @X0 1 t ]
[v F7552 `**S936 ~T0 @X0 1 t ]
[v F7554 `(v ~T0 @X0 0 tf1`*v ]
"175 Source/FreeRTOS/include/portable.h
[; ;Source/FreeRTOS/include/portable.h: 175: void * pvPortMalloc( size_t xSize ) ;
[v _pvPortMalloc `(*v ~T0 @X0 0 ef1`ui ]
"380 Source/FreeRTOS/include\FreeRTOS.h
[; ;Source/FreeRTOS/include\FreeRTOS.h: 380: void Xprintf(const char *string, ...);
[v _Xprintf `(v ~T0 @X0 0 ev`*Cuc ]
"29 C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h
[; ;C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h: 29: void *memset (void *, int, size_t);
[v _memset `(*v ~T0 @X0 0 ef3`*v`i`ui ]
"178 Source/FreeRTOS/include/portable.h
[; ;Source/FreeRTOS/include/portable.h: 178: void vPortFree( void * pv ) ;
[v _vPortFree `(v ~T0 @X0 0 ef1`*v ]
[v F7525 `(v ~T0 @X0 0 tf1`*v ]
[v F7527 `*Cuc ~T0 @X0 1 t ]
[v F7528 `*v ~T0 @X0 1 t ]
[v F7529 `**S936 ~T0 @X0 1 t ]
"129 Source/FreeRTOS/include/task.h
[s S938 `*v 1 `ul 1 `ul 1 ]
[n S938 xMEMORY_REGION pvBaseAddress ulLengthInBytes ulParameters ]
[v F7530 `*CS938 ~T0 @X0 1 t ]
"586 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 586: static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
[v _prvInitialiseNewTask `(v ~T0 @X0 0 sf8`*F7525`C*Cuc`Cul`C*v`uc`C**S936`*S936`C*CS938 ]
"599
[; ;Source/FreeRTOS/tasks.c: 599: static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) ;
[v _prvAddNewTaskToReadyList `(v ~T0 @X0 0 sf1`*S936 ]
[v F7567 `(v ~T0 @X0 0 tf1`*v ]
[v F7569 `*Cuc ~T0 @X0 1 t ]
[v F7570 `*v ~T0 @X0 1 t ]
[v F7571 `**S936 ~T0 @X0 1 t ]
[v F7572 `*CS938 ~T0 @X0 1 t ]
[v F7574 `(v ~T0 @X0 0 tf1`*v ]
[v F7091 `*S930 ~T0 @X0 1 t ]
"440 Source/FreeRTOS/include/list.h
[; ;Source/FreeRTOS/include/list.h: 440: void vListInitialiseItem( ListItem_t * const pxItem ) ;
[v _vListInitialiseItem `(v ~T0 @X0 0 ef1`C*S930 ]
"322 Source/FreeRTOS/include\FreeRTOS.h
[; ;Source/FreeRTOS/include\FreeRTOS.h: 322: extern uint8_t isr_cnt;
[v _isr_cnt `uc ~T0 @X0 0 e ]
"12796 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12796:     struct {
[s S588 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S588 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"12806
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12806:     struct {
[s S589 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S589 . TX9D2 TRMT2 BRGH2 SENDB2 SYNC2 TXEN2 TX92 CSRC2 ]
"12816
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12816:     struct {
[s S590 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S590 . TXD82 . TX8_92 ]
"12795
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12795: typedef union {
[u S587 `S588 1 `S589 1 `S590 1 ]
[n S587 . . . . ]
"12822
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12822: extern volatile TXSTA2bits_t TXSTA2bits __attribute__((address(0xFA8)));
[v _TXSTA2bits `VS587 ~T0 @X0 0 e@4008 ]
"12917
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12917: extern volatile unsigned char TXREG2 __attribute__((address(0xFA9)));
[v _TXREG2 `Vuc ~T0 @X0 0 e@4009 ]
"320 Source/FreeRTOS/include\FreeRTOS.h
[; ;Source/FreeRTOS/include\FreeRTOS.h: 320: extern const char ConvC[];
[v _ConvC `Cuc ~T0 @X0 -> 0 `x e ]
[v F6955 `(v ~T0 @X0 0 tf1`*v ]
"127 Source/FreeRTOS/include/portable.h
[; ;Source/FreeRTOS/include/portable.h: 127:         StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
[v _pxPortInitialiseStack `(*uc ~T0 @X0 0 ef3`*uc`*F6955`*v ]
"18561 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18561: extern volatile unsigned char POSTINC1 __attribute__((address(0xFE6)));
[v _POSTINC1 `Vuc ~T0 @X0 0 e@4070 ]
"18960
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18960: extern volatile unsigned char INTCON __attribute__((address(0xFF2)));
[v _INTCON `Vuc ~T0 @X0 0 e@4082 ]
"18966
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18966:     struct {
[s S894 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S894 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"18976
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18976:     struct {
[s S895 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S895 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"18986
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18986:     struct {
[s S896 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S896 . . GIEL GIEH ]
"18965
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18965: typedef union {
[u S893 `S894 1 `S895 1 `S896 1 ]
[n S893 . . . . ]
"18992
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18992: extern volatile INTCONbits_t INTCONbits __attribute__((address(0xFF2)));
[v _INTCONbits `VS893 ~T0 @X0 0 e@4082 ]
"470 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 470: static void prvInitialiseTaskLists( void ) ;
[v _prvInitialiseTaskLists `(v ~T0 @X0 0 sf ]
"18581 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18581: extern volatile unsigned char INDF1 __attribute__((address(0xFE7)));
[v _INDF1 `Vuc ~T0 @X0 0 e@4071 ]
"92 Source/FreeRTOS/portable/PIC18F\portmacro.h
[; ;Source/FreeRTOS/portable/PIC18F\portmacro.h: 92: extern void vPortYield( void );
[v _vPortYield `(v ~T0 @X0 0 ef ]
"1861 Source/FreeRTOS/include/task.h
[v _vTaskList `(v ~T0 @X0 0 ef1`*uc ]
[v F7109 `*S930 ~T0 @X0 1 t ]
"491 Source/FreeRTOS/include/list.h
[; ;Source/FreeRTOS/include/list.h: 491: UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) ;
[v _uxListRemove `(uc ~T0 @X0 0 ef1`C*S930 ]
[v F7102 `*S931 ~T0 @X0 1 t ]
[v F7103 `*S930 ~T0 @X0 1 t ]
"475
[; ;Source/FreeRTOS/include/list.h: 475: void vListInsertEnd( List_t * const pxList,
[v _vListInsertEnd `(v ~T0 @X0 0 ef2`C*S931`C*S930 ]
"569 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 569: static void prvResetNextTaskUnblockTime( void ) ;
[v _prvResetNextTaskUnblockTime `(v ~T0 @X0 0 sf ]
"494
[; ;Source/FreeRTOS/tasks.c: 494:     static void prvDeleteTCB( TCB_t * pxTCB ) ;
[v _prvDeleteTCB `(v ~T0 @X0 0 sf1`*S936 ]
[v F7604 `*us ~T0 @X0 1 t ]
"1370 Source/FreeRTOS/include/task.h
[v _vTaskSuspendAll `(v ~T0 @X0 0 ef ]
"509 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 509: static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
[v _prvAddCurrentTaskToDelayedList `(v ~T0 @X0 0 sf2`us`Cc ]
"1426 Source/FreeRTOS/include/task.h
[v _xTaskResumeAll `(c ~T0 @X0 0 ef ]
"1511 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 1511:     eTaskState eTaskGetState( TaskHandle_t xTask )
[c E7129 0 1 2 3 4 5 .. ]
[n E7129 . eRunning eReady eBlocked eSuspended eDeleted eInvalid  ]
[v F7627 `*S936 ~T0 @X0 1 t ]
[v F7633 `*S936 ~T0 @X0 1 t ]
"3014 Source/FreeRTOS/include/task.h
[v _vTaskSwitchContext `(v ~T0 @X0 0 ef ]
[v F7654 `*S936 ~T0 @X0 1 t ]
"483 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 483: static void prvIdleTask( void *pvParameters ) ;
[v _prvIdleTask `(v ~T0 @X0 0 sf1`*v ]
"208 Source/FreeRTOS/include/portable.h
[; ;Source/FreeRTOS/include/portable.h: 208: BaseType_t xPortStartScheduler( void ) ;
[v _xPortStartScheduler `(c ~T0 @X0 0 ef ]
"215
[; ;Source/FreeRTOS/include/portable.h: 215: void vPortEndScheduler( void ) ;
[v _vPortEndScheduler `(v ~T0 @X0 0 ef ]
"2924 Source/FreeRTOS/include/task.h
[v _xTaskIncrementTick `(c ~T0 @X0 0 ef ]
"155
[s S940 `*S936 1 `*Cuc 1 `uc 1 `E7129 1 `uc 1 `uc 1 `ul 1 `*uc 1 `us 1 ]
[n S940 xTASK_STATUS xHandle pcTaskName xTaskNumber eCurrentState uxCurrentPriority uxBasePriority ulRunTimeCounter pxStackBase usStackHighWaterMark ]
[v F7703 `*S940 ~T0 @X0 1 t ]
[v F7704 `*ul ~T0 @X0 1 t ]
"522 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 522:     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
[v _prvListTasksWithinSingleList `(uc ~T0 @X0 0 sf3`*S940`*S931`E7129 ]
[v F7750 `*S931 ~T0 @X0 1 t ]
[v F7095 `*S931 ~T0 @X0 1 t ]
[v F7096 `*S930 ~T0 @X0 1 t ]
"453 Source/FreeRTOS/include/list.h
[; ;Source/FreeRTOS/include/list.h: 453: void vListInsert( List_t * const pxList,
[v _vListInsert `(v ~T0 @X0 0 ef2`C*S931`C*S930 ]
[v F7761 `*CS931 ~T0 @X0 1 t ]
"120 Source/FreeRTOS/include/task.h
[s S937 `c 1 `us 1 ]
[n S937 xTIME_OUT xOverflowCount xTimeOnEntering ]
[v F7786 `*S937 ~T0 @X0 1 t ]
[v F7790 `*S937 ~T0 @X0 1 t ]
[v F7794 `*S937 ~T0 @X0 1 t ]
[v F7795 `*us ~T0 @X0 1 t ]
"503 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 503: static void prvCheckTasksWaitingTermination( void ) ;
[v _prvCheckTasksWaitingTermination `(v ~T0 @X0 0 sf ]
[v F7087 `*S931 ~T0 @X0 1 t ]
"429 Source/FreeRTOS/include/list.h
[; ;Source/FreeRTOS/include/list.h: 429: void vListInitialise( List_t * const pxList ) ;
[v _vListInitialise `(v ~T0 @X0 0 ef1`C*S931 ]
"546 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 546:     static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) ;
[v _prvTaskCheckFreeStackSpace `(us ~T0 @X0 0 sf1`*Cuc ]
"33 C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h
[; ;C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h: 33: char *strcpy (char *restrict, const char *restrict);
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"54
[; ;C:\Program Files\Microchip\xc8\v2.41\pic\include\c99\string.h: 54: size_t strlen (const char *);
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"5041 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 5041:     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
[c E7137 0 1 2 3 4 .. ]
[n E7137 . eNoAction eSetBits eIncrement eSetValueWithOverwrite eSetValueWithoutOverwrite  ]
"55 C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 55: __asm("ADCTRIG equ 0EB8h");
[; <" ADCTRIG equ 0EB8h ;# ">
"111
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 111: __asm("PMDIS0 equ 0EB9h");
[; <" PMDIS0 equ 0EB9h ;# ">
"116
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 116: __asm("PD0 equ 0EB9h");
[; <" PD0 equ 0EB9h ;# ">
"417
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 417: __asm("PMDIS1 equ 0EBAh");
[; <" PMDIS1 equ 0EBAh ;# ">
"422
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 422: __asm("PD1 equ 0EBAh");
[; <" PD1 equ 0EBAh ;# ">
"655
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 655: __asm("PMDIS2 equ 0EBBh");
[; <" PMDIS2 equ 0EBBh ;# ">
"660
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 660: __asm("PD2 equ 0EBBh");
[; <" PD2 equ 0EBBh ;# ">
"865
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 865: __asm("PMDIS3 equ 0EBCh");
[; <" PMDIS3 equ 0EBCh ;# ">
"870
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 870: __asm("PD3 equ 0EBCh");
[; <" PD3 equ 0EBCh ;# ">
"1103
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1103: __asm("PPSCON equ 0EBFh");
[; <" PPSCON equ 0EBFh ;# ">
"1123
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1123: __asm("RPOR0 equ 0EC0h");
[; <" RPOR0 equ 0EC0h ;# ">
"1130
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1130: __asm("RPOR1 equ 0EC1h");
[; <" RPOR1 equ 0EC1h ;# ">
"1137
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1137: __asm("RPOR2 equ 0EC2h");
[; <" RPOR2 equ 0EC2h ;# ">
"1144
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1144: __asm("RPOR3 equ 0EC3h");
[; <" RPOR3 equ 0EC3h ;# ">
"1151
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1151: __asm("RPOR4 equ 0EC4h");
[; <" RPOR4 equ 0EC4h ;# ">
"1158
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1158: __asm("RPOR5 equ 0EC5h");
[; <" RPOR5 equ 0EC5h ;# ">
"1165
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1165: __asm("RPOR6 equ 0EC6h");
[; <" RPOR6 equ 0EC6h ;# ">
"1172
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1172: __asm("RPOR7 equ 0EC7h");
[; <" RPOR7 equ 0EC7h ;# ">
"1179
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1179: __asm("RPOR8 equ 0EC8h");
[; <" RPOR8 equ 0EC8h ;# ">
"1186
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1186: __asm("RPOR9 equ 0EC9h");
[; <" RPOR9 equ 0EC9h ;# ">
"1193
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1193: __asm("RPOR10 equ 0ECAh");
[; <" RPOR10 equ 0ECAh ;# ">
"1200
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1200: __asm("RPOR11 equ 0ECBh");
[; <" RPOR11 equ 0ECBh ;# ">
"1207
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1207: __asm("RPOR12 equ 0ECCh");
[; <" RPOR12 equ 0ECCh ;# ">
"1214
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1214: __asm("RPOR13 equ 0ECDh");
[; <" RPOR13 equ 0ECDh ;# ">
"1221
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1221: __asm("RPOR17 equ 0ED1h");
[; <" RPOR17 equ 0ED1h ;# ">
"1228
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1228: __asm("RPOR18 equ 0ED2h");
[; <" RPOR18 equ 0ED2h ;# ">
"1235
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1235: __asm("RPOR19 equ 0ED3h");
[; <" RPOR19 equ 0ED3h ;# ">
"1242
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1242: __asm("RPOR20 equ 0ED4h");
[; <" RPOR20 equ 0ED4h ;# ">
"1249
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1249: __asm("RPOR21 equ 0ED5h");
[; <" RPOR21 equ 0ED5h ;# ">
"1256
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1256: __asm("RPOR22 equ 0ED6h");
[; <" RPOR22 equ 0ED6h ;# ">
"1263
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1263: __asm("RPOR23 equ 0ED7h");
[; <" RPOR23 equ 0ED7h ;# ">
"1270
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1270: __asm("RPOR24 equ 0ED8h");
[; <" RPOR24 equ 0ED8h ;# ">
"1277
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1277: __asm("RPINR1 equ 0EE1h");
[; <" RPINR1 equ 0EE1h ;# ">
"1284
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1284: __asm("RPINR2 equ 0EE2h");
[; <" RPINR2 equ 0EE2h ;# ">
"1291
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1291: __asm("RPINR3 equ 0EE3h");
[; <" RPINR3 equ 0EE3h ;# ">
"1298
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1298: __asm("RPINR4 equ 0EE4h");
[; <" RPINR4 equ 0EE4h ;# ">
"1305
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1305: __asm("RPINR6 equ 0EE6h");
[; <" RPINR6 equ 0EE6h ;# ">
"1312
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1312: __asm("RPINR15 equ 0EE7h");
[; <" RPINR15 equ 0EE7h ;# ">
"1319
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1319: __asm("RPINR7 equ 0EE8h");
[; <" RPINR7 equ 0EE8h ;# ">
"1326
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1326: __asm("RPINR8 equ 0EE9h");
[; <" RPINR8 equ 0EE9h ;# ">
"1333
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1333: __asm("RPINR9 equ 0EEAh");
[; <" RPINR9 equ 0EEAh ;# ">
"1340
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1340: __asm("RPINR12 equ 0EF2h");
[; <" RPINR12 equ 0EF2h ;# ">
"1347
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1347: __asm("RPINR13 equ 0EF3h");
[; <" RPINR13 equ 0EF3h ;# ">
"1354
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1354: __asm("RPINR14 equ 0EF4h");
[; <" RPINR14 equ 0EF4h ;# ">
"1361
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1361: __asm("RPINR16 equ 0EF7h");
[; <" RPINR16 equ 0EF7h ;# ">
"1368
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1368: __asm("RPINR17 equ 0EF8h");
[; <" RPINR17 equ 0EF8h ;# ">
"1375
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1375: __asm("RPINR21 equ 0EFCh");
[; <" RPINR21 equ 0EFCh ;# ">
"1382
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1382: __asm("RPINR22 equ 0EFDh");
[; <" RPINR22 equ 0EFDh ;# ">
"1389
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1389: __asm("RPINR23 equ 0EFEh");
[; <" RPINR23 equ 0EFEh ;# ">
"1396
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1396: __asm("RPINR24 equ 0EFFh");
[; <" RPINR24 equ 0EFFh ;# ">
"1403
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1403: __asm("CCP10CON equ 0F00h");
[; <" CCP10CON equ 0F00h ;# ">
"1467
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1467: __asm("CCPR10L equ 0F01h");
[; <" CCPR10L equ 0F01h ;# ">
"1487
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1487: __asm("CCPR10H equ 0F02h");
[; <" CCPR10H equ 0F02h ;# ">
"1507
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1507: __asm("CCP9CON equ 0F03h");
[; <" CCP9CON equ 0F03h ;# ">
"1571
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1571: __asm("CCPR9L equ 0F04h");
[; <" CCPR9L equ 0F04h ;# ">
"1591
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1591: __asm("CCPR9H equ 0F05h");
[; <" CCPR9H equ 0F05h ;# ">
"1611
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1611: __asm("CCP8CON equ 0F06h");
[; <" CCP8CON equ 0F06h ;# ">
"1675
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1675: __asm("CCPR8L equ 0F07h");
[; <" CCPR8L equ 0F07h ;# ">
"1695
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1695: __asm("CCPR8H equ 0F08h");
[; <" CCPR8H equ 0F08h ;# ">
"1715
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1715: __asm("CCP7CON equ 0F09h");
[; <" CCP7CON equ 0F09h ;# ">
"1779
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1779: __asm("CCPR7L equ 0F0Ah");
[; <" CCPR7L equ 0F0Ah ;# ">
"1799
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1799: __asm("CCPR7H equ 0F0Bh");
[; <" CCPR7H equ 0F0Bh ;# ">
"1819
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1819: __asm("CCP6CON equ 0F0Ch");
[; <" CCP6CON equ 0F0Ch ;# ">
"1883
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1883: __asm("CCPR6L equ 0F0Dh");
[; <" CCPR6L equ 0F0Dh ;# ">
"1903
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1903: __asm("CCPR6H equ 0F0Eh");
[; <" CCPR6H equ 0F0Eh ;# ">
"1923
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1923: __asm("CCP5CON equ 0F0Fh");
[; <" CCP5CON equ 0F0Fh ;# ">
"1987
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 1987: __asm("CCPR5L equ 0F10h");
[; <" CCPR5L equ 0F10h ;# ">
"2007
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2007: __asm("CCPR5H equ 0F11h");
[; <" CCPR5H equ 0F11h ;# ">
"2027
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2027: __asm("CCP4CON equ 0F12h");
[; <" CCP4CON equ 0F12h ;# ">
"2091
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2091: __asm("CCPR4L equ 0F13h");
[; <" CCPR4L equ 0F13h ;# ">
"2111
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2111: __asm("CCPR4H equ 0F14h");
[; <" CCPR4H equ 0F14h ;# ">
"2131
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2131: __asm("CCP3CON equ 0F15h");
[; <" CCP3CON equ 0F15h ;# ">
"2213
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2213: __asm("CCPR3L equ 0F16h");
[; <" CCPR3L equ 0F16h ;# ">
"2233
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2233: __asm("CCPR3H equ 0F17h");
[; <" CCPR3H equ 0F17h ;# ">
"2253
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2253: __asm("ECCP3DEL equ 0F18h");
[; <" ECCP3DEL equ 0F18h ;# ">
"2323
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2323: __asm("ECCP3AS equ 0F19h");
[; <" ECCP3AS equ 0F19h ;# ">
"2405
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2405: __asm("PSTR3CON equ 0F1Ah");
[; <" PSTR3CON equ 0F1Ah ;# ">
"2516
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2516: __asm("T8CON equ 0F1Bh");
[; <" T8CON equ 0F1Bh ;# ">
"2587
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2587: __asm("PR8 equ 0F1Ch");
[; <" PR8 equ 0F1Ch ;# ">
"2607
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2607: __asm("TMR8 equ 0F1Dh");
[; <" TMR8 equ 0F1Dh ;# ">
"2627
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2627: __asm("T6CON equ 0F1Eh");
[; <" T6CON equ 0F1Eh ;# ">
"2698
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2698: __asm("PR6 equ 0F1Fh");
[; <" PR6 equ 0F1Fh ;# ">
"2718
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2718: __asm("TMR6 equ 0F20h");
[; <" TMR6 equ 0F20h ;# ">
"2738
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2738: __asm("T5GCON equ 0F21h");
[; <" T5GCON equ 0F21h ;# ">
"2851
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2851: __asm("T5CON equ 0F22h");
[; <" T5CON equ 0F22h ;# ">
"2953
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2953: __asm("TMR5L equ 0F23h");
[; <" TMR5L equ 0F23h ;# ">
"2973
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2973: __asm("TMR5H equ 0F24h");
[; <" TMR5H equ 0F24h ;# ">
"2993
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 2993: __asm("CM3CON equ 0F25h");
[; <" CM3CON equ 0F25h ;# ">
"3120
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3120: __asm("UEP0 equ 0F26h");
[; <" UEP0 equ 0F26h ;# ">
"3228
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3228: __asm("UEP1 equ 0F27h");
[; <" UEP1 equ 0F27h ;# ">
"3336
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3336: __asm("UEP2 equ 0F28h");
[; <" UEP2 equ 0F28h ;# ">
"3444
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3444: __asm("UEP3 equ 0F29h");
[; <" UEP3 equ 0F29h ;# ">
"3552
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3552: __asm("UEP4 equ 0F2Ah");
[; <" UEP4 equ 0F2Ah ;# ">
"3660
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3660: __asm("UEP5 equ 0F2Bh");
[; <" UEP5 equ 0F2Bh ;# ">
"3768
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3768: __asm("UEP6 equ 0F2Ch");
[; <" UEP6 equ 0F2Ch ;# ">
"3876
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3876: __asm("UEP7 equ 0F2Dh");
[; <" UEP7 equ 0F2Dh ;# ">
"3984
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 3984: __asm("UEP8 equ 0F2Eh");
[; <" UEP8 equ 0F2Eh ;# ">
"4060
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4060: __asm("UEP9 equ 0F2Fh");
[; <" UEP9 equ 0F2Fh ;# ">
"4136
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4136: __asm("UEP10 equ 0F30h");
[; <" UEP10 equ 0F30h ;# ">
"4212
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4212: __asm("UEP11 equ 0F31h");
[; <" UEP11 equ 0F31h ;# ">
"4288
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4288: __asm("UEP12 equ 0F32h");
[; <" UEP12 equ 0F32h ;# ">
"4364
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4364: __asm("UEP13 equ 0F33h");
[; <" UEP13 equ 0F33h ;# ">
"4440
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4440: __asm("UEP14 equ 0F34h");
[; <" UEP14 equ 0F34h ;# ">
"4516
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4516: __asm("UEP15 equ 0F35h");
[; <" UEP15 equ 0F35h ;# ">
"4592
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4592: __asm("UIE equ 0F36h");
[; <" UIE equ 0F36h ;# ">
"4648
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4648: __asm("UEIE equ 0F37h");
[; <" UEIE equ 0F37h ;# ">
"4699
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4699: __asm("UADDR equ 0F38h");
[; <" UADDR equ 0F38h ;# ">
"4763
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4763: __asm("UCFG equ 0F39h");
[; <" UCFG equ 0F39h ;# ">
"4834
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4834: __asm("RTCVALL equ 0F3Ah");
[; <" RTCVALL equ 0F3Ah ;# ">
"4854
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4854: __asm("RTCVALH equ 0F3Bh");
[; <" RTCVALH equ 0F3Bh ;# ">
"4924
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4924: __asm("PADCFG1 equ 0F3Ch");
[; <" PADCFG1 equ 0F3Ch ;# ">
"4956
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 4956: __asm("REFOCON equ 0F3Dh");
[; <" REFOCON equ 0F3Dh ;# ">
"5021
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5021: __asm("RTCCAL equ 0F3Eh");
[; <" RTCCAL equ 0F3Eh ;# ">
"5091
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5091: __asm("RTCCFG equ 0F3Fh");
[; <" RTCCFG equ 0F3Fh ;# ">
"5148
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5148: __asm("ODCON3 equ 0F40h");
[; <" ODCON3 equ 0F40h ;# ">
"5174
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5174: __asm("ODCON2 equ 0F41h");
[; <" ODCON2 equ 0F41h ;# ">
"5212
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5212: __asm("ODCON1 equ 0F42h");
[; <" ODCON1 equ 0F42h ;# ">
"5274
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5274: __asm("ALRMVALL equ 0F44h");
[; <" ALRMVALL equ 0F44h ;# ">
"5294
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5294: __asm("ALRMVALH equ 0F45h");
[; <" ALRMVALH equ 0F45h ;# ">
"5314
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5314: __asm("ALRMRPT equ 0F46h");
[; <" ALRMRPT equ 0F46h ;# ">
"5384
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5384: __asm("ALRMCFG equ 0F47h");
[; <" ALRMCFG equ 0F47h ;# ">
"5460
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5460: __asm("ANCON0 equ 0F48h");
[; <" ANCON0 equ 0F48h ;# ">
"5522
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5522: __asm("ANCON1 equ 0F49h");
[; <" ANCON1 equ 0F49h ;# ">
"5582
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5582: __asm("DSWAKEL equ 0F4Ah");
[; <" DSWAKEL equ 0F4Ah ;# ">
"5634
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5634: __asm("DSWAKEH equ 0F4Bh");
[; <" DSWAKEH equ 0F4Bh ;# ">
"5654
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5654: __asm("DSCONL equ 0F4Ch");
[; <" DSCONL equ 0F4Ch ;# ">
"5686
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5686: __asm("DSCONH equ 0F4Dh");
[; <" DSCONH equ 0F4Dh ;# ">
"5719
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5719: __asm("DSGPR0 equ 0F4Eh");
[; <" DSGPR0 equ 0F4Eh ;# ">
"5739
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5739: __asm("DSGPR1 equ 0F4Fh");
[; <" DSGPR1 equ 0F4Fh ;# ">
"5759
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5759: __asm("CCPTMRS2 equ 0F50h");
[; <" CCPTMRS2 equ 0F50h ;# ">
"5806
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5806: __asm("CCPTMRS1 equ 0F51h");
[; <" CCPTMRS1 equ 0F51h ;# ">
"5873
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5873: __asm("CCPTMRS0 equ 0F52h");
[; <" CCPTMRS0 equ 0F52h ;# ">
"5955
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 5955: __asm("CVRCON equ 0F53h");
[; <" CVRCON equ 0F53h ;# ">
"6034
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6034: __asm("PMSTATL equ 0F54h");
[; <" PMSTATL equ 0F54h ;# ">
"6085
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6085: __asm("PMSTATH equ 0F55h");
[; <" PMSTATH equ 0F55h ;# ">
"6136
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6136: __asm("PMEL equ 0F56h");
[; <" PMEL equ 0F56h ;# ">
"6206
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6206: __asm("PMEH equ 0F57h");
[; <" PMEH equ 0F57h ;# ">
"6276
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6276: __asm("PMDIN2L equ 0F58h");
[; <" PMDIN2L equ 0F58h ;# ">
"6296
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6296: __asm("PMDIN2H equ 0F59h");
[; <" PMDIN2H equ 0F59h ;# ">
"6316
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6316: __asm("PMDOUT2L equ 0F5Ah");
[; <" PMDOUT2L equ 0F5Ah ;# ">
"6336
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6336: __asm("PMDOUT2H equ 0F5Bh");
[; <" PMDOUT2H equ 0F5Bh ;# ">
"6356
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6356: __asm("PMMODEL equ 0F5Ch");
[; <" PMMODEL equ 0F5Ch ;# ">
"6438
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6438: __asm("PMMODEH equ 0F5Dh");
[; <" PMMODEH equ 0F5Dh ;# ">
"6500
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6500: __asm("PMCONL equ 0F5Eh");
[; <" PMCONL equ 0F5Eh ;# ">
"6557
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6557: __asm("PMCONH equ 0F5Fh");
[; <" PMCONH equ 0F5Fh ;# ">
"6614
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6614: __asm("UFRM equ 0F60h");
[; <" UFRM equ 0F60h ;# ">
"6621
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6621: __asm("UFRML equ 0F60h");
[; <" UFRML equ 0F60h ;# ">
"6699
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6699: __asm("UFRMH equ 0F61h");
[; <" UFRMH equ 0F61h ;# ">
"6739
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6739: __asm("UIR equ 0F62h");
[; <" UIR equ 0F62h ;# ">
"6795
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6795: __asm("UEIR equ 0F63h");
[; <" UEIR equ 0F63h ;# ">
"6846
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6846: __asm("USTAT equ 0F64h");
[; <" USTAT equ 0F64h ;# ">
"6906
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6906: __asm("UCON equ 0F65h");
[; <" UCON equ 0F65h ;# ">
"6957
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6957: __asm("DMABCH equ 0F66h");
[; <" DMABCH equ 0F66h ;# ">
"6977
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6977: __asm("DMABCL equ 0F67h");
[; <" DMABCL equ 0F67h ;# ">
"6997
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 6997: __asm("RXADDRH equ 0F68h");
[; <" RXADDRH equ 0F68h ;# ">
"7017
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7017: __asm("RXADDRL equ 0F69h");
[; <" RXADDRL equ 0F69h ;# ">
"7037
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7037: __asm("TXADDRH equ 0F6Ah");
[; <" TXADDRH equ 0F6Ah ;# ">
"7057
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7057: __asm("TXADDRL equ 0F6Bh");
[; <" TXADDRL equ 0F6Bh ;# ">
"7077
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7077: __asm("PMDIN1L equ 0F6Ch");
[; <" PMDIN1L equ 0F6Ch ;# ">
"7097
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7097: __asm("PMDIN1H equ 0F6Dh");
[; <" PMDIN1H equ 0F6Dh ;# ">
"7117
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7117: __asm("PMADDRL equ 0F6Eh");
[; <" PMADDRL equ 0F6Eh ;# ">
"7137
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7137: __asm("PMDOUT1L equ 0F6Eh");
[; <" PMDOUT1L equ 0F6Eh ;# ">
"7157
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7157: __asm("PMADDRH equ 0F6Fh");
[; <" PMADDRH equ 0F6Fh ;# ">
"7183
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7183: __asm("PMDOUT1H equ 0F6Fh");
[; <" PMDOUT1H equ 0F6Fh ;# ">
"7203
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7203: __asm("CMSTAT equ 0F70h");
[; <" CMSTAT equ 0F70h ;# ">
"7208
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7208: __asm("CMSTATUS equ 0F70h");
[; <" CMSTATUS equ 0F70h ;# ">
"7265
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7265: __asm("SSP2CON2 equ 0F71h");
[; <" SSP2CON2 equ 0F71h ;# ">
"7443
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7443: __asm("SSP2CON1 equ 0F72h");
[; <" SSP2CON1 equ 0F72h ;# ">
"7563
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7563: __asm("SSP2STAT equ 0F73h");
[; <" SSP2STAT equ 0F73h ;# ">
"7865
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7865: __asm("SSP2ADD equ 0F74h");
[; <" SSP2ADD equ 0F74h ;# ">
"7935
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7935: __asm("SSP2MSK equ 0F74h");
[; <" SSP2MSK equ 0F74h ;# ">
"7997
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 7997: __asm("SSP2BUF equ 0F75h");
[; <" SSP2BUF equ 0F75h ;# ">
"8017
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8017: __asm("T4CON equ 0F76h");
[; <" T4CON equ 0F76h ;# ">
"8088
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8088: __asm("PR4 equ 0F77h");
[; <" PR4 equ 0F77h ;# ">
"8108
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8108: __asm("TMR4 equ 0F78h");
[; <" TMR4 equ 0F78h ;# ">
"8128
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8128: __asm("T3CON equ 0F79h");
[; <" T3CON equ 0F79h ;# ">
"8239
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8239: __asm("TMR3 equ 0F7Ah");
[; <" TMR3 equ 0F7Ah ;# ">
"8246
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8246: __asm("TMR3L equ 0F7Ah");
[; <" TMR3L equ 0F7Ah ;# ">
"8266
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8266: __asm("TMR3H equ 0F7Bh");
[; <" TMR3H equ 0F7Bh ;# ">
"8286
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8286: __asm("BAUDCON2 equ 0F7Ch");
[; <" BAUDCON2 equ 0F7Ch ;# ">
"8409
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8409: __asm("SPBRGH2 equ 0F7Dh");
[; <" SPBRGH2 equ 0F7Dh ;# ">
"8429
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8429: __asm("BAUDCON1 equ 0F7Eh");
[; <" BAUDCON1 equ 0F7Eh ;# ">
"8434
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8434: __asm("BAUDCON equ 0F7Eh");
[; <" BAUDCON equ 0F7Eh ;# ">
"8438
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8438: __asm("BAUDCTL equ 0F7Eh");
[; <" BAUDCTL equ 0F7Eh ;# ">
"8936
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8936: __asm("SPBRGH1 equ 0F7Fh");
[; <" SPBRGH1 equ 0F7Fh ;# ">
"8941
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8941: __asm("SPBRGH equ 0F7Fh");
[; <" SPBRGH equ 0F7Fh ;# ">
"8974
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 8974: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"9255
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 9255: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"9601
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 9601: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"9867
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 9867: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"10038
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10038: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"10179
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10179: __asm("HLVDCON equ 0F85h");
[; <" HLVDCON equ 0F85h ;# ">
"10249
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10249: __asm("DMACON2 equ 0F86h");
[; <" DMACON2 equ 0F86h ;# ">
"10325
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10325: __asm("OSCCON2 equ 0F87h");
[; <" OSCCON2 equ 0F87h ;# ">
"10365
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10365: __asm("DMACON1 equ 0F88h");
[; <" DMACON1 equ 0F88h ;# ">
"10427
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10427: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"10529
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10529: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"10641
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10641: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"10719
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10719: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"10831
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10831: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"10883
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10883: __asm("PIE4 equ 0F8Eh");
[; <" PIE4 equ 0F8Eh ;# ">
"10945
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 10945: __asm("PIR4 equ 0F8Fh");
[; <" PIR4 equ 0F8Fh ;# ">
"11007
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11007: __asm("IPR4 equ 0F90h");
[; <" IPR4 equ 0F90h ;# ">
"11077
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11077: __asm("PIE5 equ 0F91h");
[; <" PIE5 equ 0F91h ;# ">
"11127
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11127: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"11184
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11184: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"11246
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11246: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"11291
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11291: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"11353
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11353: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"11398
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11398: __asm("T3GCON equ 0F97h");
[; <" T3GCON equ 0F97h ;# ">
"11487
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11487: __asm("PIR5 equ 0F98h");
[; <" PIR5 equ 0F98h ;# ">
"11537
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11537: __asm("IPR5 equ 0F99h");
[; <" IPR5 equ 0F99h ;# ">
"11614
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11614: __asm("T1GCON equ 0F9Ah");
[; <" T1GCON equ 0F9Ah ;# ">
"11721
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11721: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"11791
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11791: __asm("RCSTA2 equ 0F9Ch");
[; <" RCSTA2 equ 0F9Ch ;# ">
"11927
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 11927: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"12019
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12019: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"12111
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12111: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"12203
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12203: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"12289
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12289: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"12375
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12375: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"12461
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12461: __asm("PIE3 equ 0FA3h");
[; <" PIE3 equ 0FA3h ;# ">
"12571
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12571: __asm("PIR3 equ 0FA4h");
[; <" PIR3 equ 0FA4h ;# ">
"12649
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12649: __asm("IPR3 equ 0FA5h");
[; <" IPR3 equ 0FA5h ;# ">
"12727
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12727: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"12772
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12772: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"12792
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12792: __asm("TXSTA2 equ 0FA8h");
[; <" TXSTA2 equ 0FA8h ;# ">
"12919
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12919: __asm("TXREG2 equ 0FA9h");
[; <" TXREG2 equ 0FA9h ;# ">
"12939
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12939: __asm("RCREG2 equ 0FAAh");
[; <" RCREG2 equ 0FAAh ;# ">
"12959
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12959: __asm("SPBRG2 equ 0FABh");
[; <" SPBRG2 equ 0FABh ;# ">
"12979
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12979: __asm("RCSTA1 equ 0FACh");
[; <" RCSTA1 equ 0FACh ;# ">
"12984
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 12984: __asm("RCSTA equ 0FACh");
[; <" RCSTA equ 0FACh ;# ">
"13317
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13317: __asm("TXSTA1 equ 0FADh");
[; <" TXSTA1 equ 0FADh ;# ">
"13322
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13322: __asm("TXSTA equ 0FADh");
[; <" TXSTA equ 0FADh ;# ">
"13605
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13605: __asm("TXREG1 equ 0FAEh");
[; <" TXREG1 equ 0FAEh ;# ">
"13610
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13610: __asm("TXREG equ 0FAEh");
[; <" TXREG equ 0FAEh ;# ">
"13643
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13643: __asm("RCREG1 equ 0FAFh");
[; <" RCREG1 equ 0FAFh ;# ">
"13648
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13648: __asm("RCREG equ 0FAFh");
[; <" RCREG equ 0FAFh ;# ">
"13681
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13681: __asm("SPBRG1 equ 0FB0h");
[; <" SPBRG1 equ 0FB0h ;# ">
"13686
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13686: __asm("SPBRG equ 0FB0h");
[; <" SPBRG equ 0FB0h ;# ">
"13719
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13719: __asm("CTMUICON equ 0FB1h");
[; <" CTMUICON equ 0FB1h ;# ">
"13795
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13795: __asm("CTMUCONL equ 0FB2h");
[; <" CTMUCONL equ 0FB2h ;# ">
"13857
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13857: __asm("CTMUCONH equ 0FB3h");
[; <" CTMUCONH equ 0FB3h ;# ">
"13914
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13914: __asm("CCP2CON equ 0FB4h");
[; <" CCP2CON equ 0FB4h ;# ">
"13919
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 13919: __asm("ECCP2CON equ 0FB4h");
[; <" ECCP2CON equ 0FB4h ;# ">
"14106
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14106: __asm("CCPR2 equ 0FB5h");
[; <" CCPR2 equ 0FB5h ;# ">
"14113
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14113: __asm("CCPR2L equ 0FB5h");
[; <" CCPR2L equ 0FB5h ;# ">
"14133
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14133: __asm("CCPR2H equ 0FB6h");
[; <" CCPR2H equ 0FB6h ;# ">
"14153
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14153: __asm("ECCP2DEL equ 0FB7h");
[; <" ECCP2DEL equ 0FB7h ;# ">
"14158
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14158: __asm("PWM2CON equ 0FB7h");
[; <" PWM2CON equ 0FB7h ;# ">
"14291
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14291: __asm("ECCP2AS equ 0FB8h");
[; <" ECCP2AS equ 0FB8h ;# ">
"14373
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14373: __asm("PSTR2CON equ 0FB9h");
[; <" PSTR2CON equ 0FB9h ;# ">
"14615
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14615: __asm("CCP1CON equ 0FBAh");
[; <" CCP1CON equ 0FBAh ;# ">
"14620
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14620: __asm("ECCP1CON equ 0FBAh");
[; <" ECCP1CON equ 0FBAh ;# ">
"14807
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14807: __asm("CCPR1 equ 0FBBh");
[; <" CCPR1 equ 0FBBh ;# ">
"14814
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14814: __asm("CCPR1L equ 0FBBh");
[; <" CCPR1L equ 0FBBh ;# ">
"14834
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14834: __asm("CCPR1H equ 0FBCh");
[; <" CCPR1H equ 0FBCh ;# ">
"14854
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14854: __asm("ECCP1DEL equ 0FBDh");
[; <" ECCP1DEL equ 0FBDh ;# ">
"14859
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14859: __asm("PWM1CON equ 0FBDh");
[; <" PWM1CON equ 0FBDh ;# ">
"14992
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 14992: __asm("ECCP1AS equ 0FBEh");
[; <" ECCP1AS equ 0FBEh ;# ">
"15074
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15074: __asm("PSTR1CON equ 0FBFh");
[; <" PSTR1CON equ 0FBFh ;# ">
"15131
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15131: __asm("WDTCON equ 0FC0h");
[; <" WDTCON equ 0FC0h ;# ">
"15201
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15201: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"15298
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15298: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"15442
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15442: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"15449
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15449: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"15469
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15469: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"15489
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15489: __asm("SSP1CON2 equ 0FC5h");
[; <" SSP1CON2 equ 0FC5h ;# ">
"15494
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15494: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"15843
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15843: __asm("SSP1CON1 equ 0FC6h");
[; <" SSP1CON1 equ 0FC6h ;# ">
"15848
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 15848: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"16081
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16081: __asm("SSP1STAT equ 0FC7h");
[; <" SSP1STAT equ 0FC7h ;# ">
"16086
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16086: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"16679
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16679: __asm("SSP1ADD equ 0FC8h");
[; <" SSP1ADD equ 0FC8h ;# ">
"16684
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16684: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"16917
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16917: __asm("SSP1MSK equ 0FC8h");
[; <" SSP1MSK equ 0FC8h ;# ">
"16979
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16979: __asm("SSP1BUF equ 0FC9h");
[; <" SSP1BUF equ 0FC9h ;# ">
"16984
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 16984: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"17017
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17017: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"17088
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17088: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"17093
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17093: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"17214
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17214: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"17234
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17234: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"17336
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17336: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"17343
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17343: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"17363
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17363: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"17383
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17383: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"17531
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17531: __asm("CM2CON equ 0FD1h");
[; <" CM2CON equ 0FD1h ;# ">
"17536
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17536: __asm("CM2CON1 equ 0FD1h");
[; <" CM2CON1 equ 0FD1h ;# ">
"17783
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17783: __asm("CM1CON equ 0FD2h");
[; <" CM1CON equ 0FD2h ;# ">
"17788
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 17788: __asm("CM1CON1 equ 0FD2h");
[; <" CM1CON1 equ 0FD2h ;# ">
"18063
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18063: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"18140
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18140: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"18210
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18210: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"18217
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18217: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"18237
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18237: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"18257
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18257: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"18328
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18328: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"18335
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18335: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"18355
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18355: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"18362
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18362: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"18382
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18382: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"18402
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18402: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"18422
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18422: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"18442
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18442: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"18462
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18462: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"18469
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18469: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"18476
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18476: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"18496
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18496: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"18503
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18503: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"18523
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18523: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"18543
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18543: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"18563
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18563: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"18583
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18583: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"18603
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18603: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"18623
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18623: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"18630
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18630: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"18650
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18650: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"18657
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18657: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"18677
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18677: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"18697
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18697: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"18717
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18717: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"18737
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18737: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"18757
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18757: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"18869
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18869: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"18962
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 18962: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"19079
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19079: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"19086
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19086: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"19106
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19106: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"19126
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19126: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"19148
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19148: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"19155
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19155: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"19175
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19175: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"19195
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19195: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"19204
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19204: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"19211
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19211: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"19218
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19218: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"19238
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19238: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"19258
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19258: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"19265
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19265: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"19339
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19339: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"19346
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19346: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"19366
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19366: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"19386
[; ;C:/Program Files/Microchip/MPLABX/v6.05/packs/Microchip/PIC18F-J_DFP/1.5.44/xc8\pic\include\proc\pic18f47j53.h: 19386: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
[v F7471 `*S936 ~T0 @X0 1 t ]
"335 Source/FreeRTOS/tasks.c
[; ;Source/FreeRTOS/tasks.c: 335:                                  TCB_t * volatile pxCurrentTCB = ((void*)0);
[v _pxCurrentTCB `V*S936 ~T0 @X0 1 e ]
[i _pxCurrentTCB
[v F7472 `*S936 ~T0 @X0 1 t ]
-> -> -> 0 `i `*v `V*S936
]
"341
[; ;Source/FreeRTOS/tasks.c: 341:                 static List_t pxReadyTasksLists[ ( 3 ) ];
[v _pxReadyTasksLists `S931 ~T0 @X0 -> 3 `i s ]
"342
[; ;Source/FreeRTOS/tasks.c: 342:                 static List_t xDelayedTaskList1;
[v _xDelayedTaskList1 `S931 ~T0 @X0 1 s ]
"343
[; ;Source/FreeRTOS/tasks.c: 343:                 static List_t xDelayedTaskList2;
[v _xDelayedTaskList2 `S931 ~T0 @X0 1 s ]
[v F7477 `*S931 ~T0 @X0 1 t ]
"344
[; ;Source/FreeRTOS/tasks.c: 344:                 static List_t * volatile pxDelayedTaskList;
[v _pxDelayedTaskList `V*S931 ~T0 @X0 1 s ]
[v F7479 `*S931 ~T0 @X0 1 t ]
"345
[; ;Source/FreeRTOS/tasks.c: 345:                 static List_t * volatile pxOverflowDelayedTaskList;
[v _pxOverflowDelayedTaskList `V*S931 ~T0 @X0 1 s ]
"346
[; ;Source/FreeRTOS/tasks.c: 346:                 static List_t xPendingReadyList;
[v _xPendingReadyList `S931 ~T0 @X0 1 s ]
"350
[; ;Source/FreeRTOS/tasks.c: 350:                     static List_t xTasksWaitingTermination;
[v _xTasksWaitingTermination `S931 ~T0 @X0 1 s ]
"351
[; ;Source/FreeRTOS/tasks.c: 351:                     static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
[v _uxDeletedTasksWaitingCleanUp `Vuc ~T0 @X0 1 s ]
[i _uxDeletedTasksWaitingCleanUp
-> -> 0 `ui `uc
]
"357
[; ;Source/FreeRTOS/tasks.c: 357:                     static List_t xSuspendedTaskList;
[v _xSuspendedTaskList `S931 ~T0 @X0 1 s ]
"368
[; ;Source/FreeRTOS/tasks.c: 368:                 static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
[v _uxCurrentNumberOfTasks `Vuc ~T0 @X0 1 s ]
[i _uxCurrentNumberOfTasks
-> -> 0 `ui `uc
]
"369
[; ;Source/FreeRTOS/tasks.c: 369:                 static volatile TickType_t xTickCount = ( TickType_t ) 0;
[v _xTickCount `Vus ~T0 @X0 1 s ]
[i _xTickCount
-> -> 0 `i `us
]
"370
[; ;Source/FreeRTOS/tasks.c: 370:                 static volatile UBaseType_t uxTopReadyPriority = ( ( UBaseType_t ) 0U );
[v _uxTopReadyPriority `Vuc ~T0 @X0 1 s ]
[i _uxTopReadyPriority
-> -> 0 `ui `uc
]
"371
[; ;Source/FreeRTOS/tasks.c: 371:                 static volatile BaseType_t xSchedulerRunning = ( ( BaseType_t ) 0 );
[v _xSchedulerRunning `Vc ~T0 @X0 1 s ]
[i _xSchedulerRunning
-> -> 0 `i `c
]
"372
[; ;Source/FreeRTOS/tasks.c: 372:                 static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
[v _xPendedTicks `Vus ~T0 @X0 1 s ]
[i _xPendedTicks
-> -> 0 `ui `us
]
"373
[; ;Source/FreeRTOS/tasks.c: 373:                 static volatile BaseType_t xYieldPending = ( ( BaseType_t ) 0 );
[v _xYieldPending `Vc ~T0 @X0 1 s ]
[i _xYieldPending
-> -> 0 `i `c
]
"374
[; ;Source/FreeRTOS/tasks.c: 374:                 static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
[v _xNumOfOverflows `Vc ~T0 @X0 1 s ]
[i _xNumOfOverflows
-> -> 0 `i `c
]
"375
[; ;Source/FreeRTOS/tasks.c: 375:                 static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
[v _uxTaskNumber `uc ~T0 @X0 1 s ]
[i _uxTaskNumber
-> -> 0 `ui `uc
]
"376
[; ;Source/FreeRTOS/tasks.c: 376:                 static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U;
[v _xNextTaskUnblockTime `Vus ~T0 @X0 1 s ]
[i _xNextTaskUnblockTime
-> -> 0 `ui `us
]
"377
[; ;Source/FreeRTOS/tasks.c: 377:                 static TaskHandle_t xIdleTaskHandle = ((void*)0);
[v _xIdleTaskHandle `*S936 ~T0 @X0 1 s ]
[i _xIdleTaskHandle
-> -> -> 0 `i `*v `*S936
]
"382
[; ;Source/FreeRTOS/tasks.c: 382: const volatile UBaseType_t uxTopUsedPriority = ( 3 ) - 1U;
[v _uxTopUsedPriority `CVuc ~T0 @X0 1 e ]
[i _uxTopUsedPriority
-> - -> -> 3 `i `ui -> 1 `ui `uc
]
"392
[; ;Source/FreeRTOS/tasks.c: 392:                 static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) ( ( BaseType_t ) 0 );
[v _uxSchedulerSuspended `Vuc ~T0 @X0 1 s ]
[i _uxSchedulerSuspended
-> -> -> 0 `i `c `uc
]
"408
[; ;Source/FreeRTOS/tasks.c: 408: void __prvAddTaskToReadyList( TCB_t *pxTCB)
[v ___prvAddTaskToReadyList `(v ~T0 @X0 1 ef1`*S936 ]
"409
[; ;Source/FreeRTOS/tasks.c: 409: {
{
[e :U ___prvAddTaskToReadyList ]
"408
[; ;Source/FreeRTOS/tasks.c: 408: void __prvAddTaskToReadyList( TCB_t *pxTCB)
[v _pxTCB `*S936 ~T0 @X0 1 r1 ]
"409
[; ;Source/FreeRTOS/tasks.c: 409: {
[f ]
"410
[; ;Source/FreeRTOS/tasks.c: 410:     ListItem_t *pxIndex;
[v _pxIndex `*S930 ~T0 @X0 1 a ]
"411
[; ;Source/FreeRTOS/tasks.c: 411:     ListItem_t *pxNewListItem;
[v _pxNewListItem `*S930 ~T0 @X0 1 a ]
"412
[; ;Source/FreeRTOS/tasks.c: 412:     List_t *pxList;
[v _pxList `*S931 ~T0 @X0 1 a ]
"420
[; ;Source/FreeRTOS/tasks.c: 420:     if( pxTCB->uxPriority > uxTopReadyPriority ){
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 944  ]
{
"421
[; ;Source/FreeRTOS/tasks.c: 421:         uxTopReadyPriority = pxTCB->uxPriority;
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
"422
[; ;Source/FreeRTOS/tasks.c: 422:     }
}
[e :U 944 ]
"425
[; ;Source/FreeRTOS/tasks.c: 425:     pxList = &pxReadyTasksLists[ pxTCB->uxPriority ];
[e = _pxList &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
"426
[; ;Source/FreeRTOS/tasks.c: 426:     pxNewListItem = &pxTCB->xStateListItem;
[e = _pxNewListItem &U . *U _pxTCB 1 ]
"428
[; ;Source/FreeRTOS/tasks.c: 428:     pxIndex = pxList->pxIndex;
[e = _pxIndex . *U _pxList 1 ]
"433
[; ;Source/FreeRTOS/tasks.c: 433:     pxNewListItem->pxNext = pxIndex;
[e = . *U _pxNewListItem 1 _pxIndex ]
"434
[; ;Source/FreeRTOS/tasks.c: 434:     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
[e = . *U _pxNewListItem 2 . *U _pxIndex 2 ]
"436
[; ;Source/FreeRTOS/tasks.c: 436:     pxIndex->pxPrevious->pxNext = pxNewListItem;
[e = . *U . *U _pxIndex 2 1 _pxNewListItem ]
"437
[; ;Source/FreeRTOS/tasks.c: 437:     pxIndex->pxPrevious = pxNewListItem;
[e = . *U _pxIndex 2 _pxNewListItem ]
"440
[; ;Source/FreeRTOS/tasks.c: 440:     pxNewListItem->pvContainer = pxList;
[e = . *U _pxNewListItem 4 _pxList ]
"441
[; ;Source/FreeRTOS/tasks.c: 441:     pxList->uxNumberOfItems ++;
[e ++ . *U _pxList 0 -> -> 1 `i `Vuc ]
"445
[; ;Source/FreeRTOS/tasks.c: 445: }
[e :UE 943 ]
}
"773
[; ;Source/FreeRTOS/tasks.c: 773:     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
[v _xTaskCreate `(c ~T0 @X0 1 ef6`*F7548`C*Cuc`Cus`C*v`uc`C**S936 ]
"779
[; ;Source/FreeRTOS/tasks.c: 779:     {
{
[e :U _xTaskCreate ]
"773
[; ;Source/FreeRTOS/tasks.c: 773:     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
[v _pxTaskCode `*F7554 ~T0 @X0 1 r1 ]
[v F7557 `*Cuc ~T0 @X0 1 t ]
"774
[; ;Source/FreeRTOS/tasks.c: 774:                             const char * const pcName,
[v _pcName `C*Cuc ~T0 @X0 1 r2 ]
"775
[; ;Source/FreeRTOS/tasks.c: 775:                             const uint16_t usStackDepth,
[v _usStackDepth `Cus ~T0 @X0 1 r3 ]
[v F7560 `*v ~T0 @X0 1 t ]
"776
[; ;Source/FreeRTOS/tasks.c: 776:                             void * const pvParameters,
[v _pvParameters `C*v ~T0 @X0 1 r4 ]
"777
[; ;Source/FreeRTOS/tasks.c: 777:                             UBaseType_t uxPriority,
[v _uxPriority `uc ~T0 @X0 1 r5 ]
[v F7563 `**S936 ~T0 @X0 1 t ]
"778
[; ;Source/FreeRTOS/tasks.c: 778:                             TaskHandle_t * const pxCreatedTask )
[v _pxCreatedTask `C**S936 ~T0 @X0 1 r6 ]
"779
[; ;Source/FreeRTOS/tasks.c: 779:     {
[f ]
"780
[; ;Source/FreeRTOS/tasks.c: 780:         TCB_t * pxNewTCB;
[v _pxNewTCB `*S936 ~T0 @X0 1 a ]
"781
[; ;Source/FreeRTOS/tasks.c: 781:         BaseType_t xReturn;
[v _xReturn `c ~T0 @X0 1 a ]
"787
[; ;Source/FreeRTOS/tasks.c: 787:         {
{
"790
[; ;Source/FreeRTOS/tasks.c: 790:             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
[e = _pxNewTCB -> ( _pvPortMalloc (1 -> # `S936 `ui `*S936 ]
"792
[; ;Source/FreeRTOS/tasks.c: 792:             if( pxNewTCB != ((void*)0) )
[e $ ! != _pxNewTCB -> -> -> 0 `i `*v `*S936 946  ]
"793
[; ;Source/FreeRTOS/tasks.c: 793:             {
{
"794
[; ;Source/FreeRTOS/tasks.c: 794:                 Xprintf("xTaskCreate 001 pxNewTCB=%p\r\n",(void *)pxNewTCB);
[e ( _Xprintf , (. :s 1C -> _pxNewTCB `*v ]
"795
[; ;Source/FreeRTOS/tasks.c: 795:                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
[e ( _memset (3 , , -> _pxNewTCB `*v -> 0 `i -> # `S936 `ui ]
"800
[; ;Source/FreeRTOS/tasks.c: 800:                 pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) );
[e = . *U _pxNewTCB 4 -> ( _pvPortMalloc (1 * -> _usStackDepth `ui -> # `uc `ui `*uc ]
"802
[; ;Source/FreeRTOS/tasks.c: 802:                 Xprintf("xTaskCreate 002 pxStack=%p\r\n",(void *)pxNewTCB->pxStack);
[e ( _Xprintf , (. :s 2C -> . *U _pxNewTCB 4 `*v ]
"803
[; ;Source/FreeRTOS/tasks.c: 803:                 if( pxNewTCB->pxStack == ((void*)0) )
[e $ ! == . *U _pxNewTCB 4 -> -> -> 0 `i `*v `*uc 947  ]
"804
[; ;Source/FreeRTOS/tasks.c: 804:                 {
{
"806
[; ;Source/FreeRTOS/tasks.c: 806:                     vPortFree( pxNewTCB );
[e ( _vPortFree (1 -> _pxNewTCB `*v ]
"807
[; ;Source/FreeRTOS/tasks.c: 807:                     pxNewTCB = ((void*)0);
[e = _pxNewTCB -> -> -> 0 `i `*v `*S936 ]
"808
[; ;Source/FreeRTOS/tasks.c: 808:                 }
}
[e :U 947 ]
"809
[; ;Source/FreeRTOS/tasks.c: 809:             }
}
[e :U 946 ]
"810
[; ;Source/FreeRTOS/tasks.c: 810:         }
}
"844
[; ;Source/FreeRTOS/tasks.c: 844:         if( pxNewTCB != ((void*)0) )
[e $ ! != _pxNewTCB -> -> -> 0 `i `*v `*S936 948  ]
"845
[; ;Source/FreeRTOS/tasks.c: 845:         {
{
"854
[; ;Source/FreeRTOS/tasks.c: 854:             Xprintf("xTaskCreate 003\r\n");
[e ( _Xprintf :s 3C ]
"856
[; ;Source/FreeRTOS/tasks.c: 856:             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, ((void*)0) );
[e ( _prvInitialiseNewTask (4 , , , , , , , _pxTaskCode _pcName -> _usStackDepth `ul _pvParameters _uxPriority _pxCreatedTask _pxNewTCB -> -> -> 0 `i `*v `*CS938 ]
"857
[; ;Source/FreeRTOS/tasks.c: 857:             prvAddNewTaskToReadyList( pxNewTCB );
[e ( _prvAddNewTaskToReadyList (1 _pxNewTCB ]
"858
[; ;Source/FreeRTOS/tasks.c: 858:             xReturn = ( ( ( BaseType_t ) 1 ) );
[e = _xReturn -> -> 1 `i `c ]
"860
[; ;Source/FreeRTOS/tasks.c: 860:         }
}
[e $U 949  ]
"861
[; ;Source/FreeRTOS/tasks.c: 861:         else
[e :U 948 ]
"862
[; ;Source/FreeRTOS/tasks.c: 862:         {
{
"863
[; ;Source/FreeRTOS/tasks.c: 863:             xReturn = ( -1 );
[e = _xReturn -> -U -> 1 `i `c ]
"864
[; ;Source/FreeRTOS/tasks.c: 864:         }
}
[e :U 949 ]
"866
[; ;Source/FreeRTOS/tasks.c: 866:         return xReturn;
[e ) _xReturn ]
[e $UE 945  ]
"867
[; ;Source/FreeRTOS/tasks.c: 867:     }
[e :UE 945 ]
}
"872
[; ;Source/FreeRTOS/tasks.c: 872: static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
[v _prvInitialiseNewTask `(v ~T0 @X0 1 sf8`*F7567`C*Cuc`Cul`C*v`uc`C**S936`*S936`C*CS938 ]
"880
[; ;Source/FreeRTOS/tasks.c: 880: {
{
[e :U _prvInitialiseNewTask ]
"872
[; ;Source/FreeRTOS/tasks.c: 872: static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
[v _pxTaskCode `*F7574 ~T0 @X0 1 r1 ]
[v F7577 `*Cuc ~T0 @X0 1 t ]
"873
[; ;Source/FreeRTOS/tasks.c: 873:                                   const char * const pcName,
[v _pcName `C*Cuc ~T0 @X0 1 r2 ]
"874
[; ;Source/FreeRTOS/tasks.c: 874:                                   const uint32_t ulStackDepth,
[v _ulStackDepth `Cul ~T0 @X0 1 r3 ]
[v F7580 `*v ~T0 @X0 1 t ]
"875
[; ;Source/FreeRTOS/tasks.c: 875:                                   void * const pvParameters,
[v _pvParameters `C*v ~T0 @X0 1 r4 ]
"876
[; ;Source/FreeRTOS/tasks.c: 876:                                   UBaseType_t uxPriority,
[v _uxPriority `uc ~T0 @X0 1 r5 ]
[v F7583 `**S936 ~T0 @X0 1 t ]
"877
[; ;Source/FreeRTOS/tasks.c: 877:                                   TaskHandle_t * const pxCreatedTask,
[v _pxCreatedTask `C**S936 ~T0 @X0 1 r6 ]
"878
[; ;Source/FreeRTOS/tasks.c: 878:                                   TCB_t * pxNewTCB,
[v _pxNewTCB `*S936 ~T0 @X0 1 r7 ]
[v F7586 `*CS938 ~T0 @X0 1 t ]
"879
[; ;Source/FreeRTOS/tasks.c: 879:                                   const MemoryRegion_t * const xRegions )
[v _xRegions `C*CS938 ~T0 @X0 1 r8 ]
"880
[; ;Source/FreeRTOS/tasks.c: 880: {
[f ]
"881
[; ;Source/FreeRTOS/tasks.c: 881:     StackType_t * pxTopOfStack;
[v _pxTopOfStack `*uc ~T0 @X0 1 a ]
"882
[; ;Source/FreeRTOS/tasks.c: 882:     UBaseType_t x;
[v _x `uc ~T0 @X0 1 a ]
"884
[; ;Source/FreeRTOS/tasks.c: 884:     Xprintf("prvInitialiseNewTask 001 pxNewTCB=%p\r\n",(void *)pxNewTCB);
[e ( _Xprintf , (. :s 4C -> _pxNewTCB `*v ]
"885
[; ;Source/FreeRTOS/tasks.c: 885:     Xprintf("prvInitialiseNewTask 002 pxStack=%p\r\n",(void *)pxNewTCB->pxStack);
[e ( _Xprintf , (. :s 5C -> . *U _pxNewTCB 4 `*v ]
"904
[; ;Source/FreeRTOS/tasks.c: 904:     {
{
"906
[; ;Source/FreeRTOS/tasks.c: 906:         ( void ) memset( pxNewTCB->pxStack, ( int ) ( 0xa5U ), ( size_t ) ulStackDepth * sizeof( StackType_t ) );
[e ( _memset (3 , , -> . *U _pxNewTCB 4 `*v -> -> 165 `ui `i * -> _ulStackDepth `ui -> # `uc `ui ]
"907
[; ;Source/FreeRTOS/tasks.c: 907:     }
}
"931
[; ;Source/FreeRTOS/tasks.c: 931:     {
{
"932
[; ;Source/FreeRTOS/tasks.c: 932:         Xprintf("prvInitialiseNewTask 002\r\n");
[e ( _Xprintf :s 6C ]
"933
[; ;Source/FreeRTOS/tasks.c: 933:         pxTopOfStack = pxNewTCB->pxStack;
[e = _pxTopOfStack . *U _pxNewTCB 4 ]
"936
[; ;Source/FreeRTOS/tasks.c: 936:         if( ( ( ( ( uint32_t ) pxNewTCB->pxStack & ( uint32_t ) ( 0x0000 ) ) == 0UL ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 936 );
[e $ ! == -> == & -> . *U _pxNewTCB 4 `ul -> -> 0 `i `ul -> 0 `ul `i -> 0 `i 951  ]
[e ( _Xprintf , (. :s 7C -> 936 `i ]
[e :U 951 ]
"939
[; ;Source/FreeRTOS/tasks.c: 939:         pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
[e = . *U _pxNewTCB 6 + . *U _pxNewTCB 4 * -> - _ulStackDepth -> -> 1 `i `ul `ux -> -> # *U . *U _pxNewTCB 4 `ui `ux ]
"940
[; ;Source/FreeRTOS/tasks.c: 940:     }
}
"944
[; ;Source/FreeRTOS/tasks.c: 944:     if( pcName != ((void*)0) )
[e $ ! != _pcName -> -> -> 0 `i `*v `*Cuc 952  ]
"945
[; ;Source/FreeRTOS/tasks.c: 945:     {
{
"946
[; ;Source/FreeRTOS/tasks.c: 946:         Xprintf("prvInitialiseNewTask 003\r\n");
[e ( _Xprintf :s 8C ]
"947
[; ;Source/FreeRTOS/tasks.c: 947:         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) ( 4 ); x++ )
{
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> -> -> 4 `i `uc `i 953  ]
[e $U 954  ]
[e :U 953 ]
"948
[; ;Source/FreeRTOS/tasks.c: 948:         {
{
"949
[; ;Source/FreeRTOS/tasks.c: 949:             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
[e = *U + &U . *U _pxNewTCB 5 * -> _x `ux -> -> # *U &U . *U _pxNewTCB 5 `ui `ux *U + _pcName * -> _x `ux -> -> # *U _pcName `ui `ux ]
"955
[; ;Source/FreeRTOS/tasks.c: 955:             if( pcName[ x ] == ( char ) 0x00 )
[e $ ! == -> *U + _pcName * -> _x `ux -> -> # *U _pcName `ui `ux `i -> -> -> 0 `i `uc `i 956  ]
"956
[; ;Source/FreeRTOS/tasks.c: 956:             {
{
"957
[; ;Source/FreeRTOS/tasks.c: 957:                 break;
[e $U 954  ]
"958
[; ;Source/FreeRTOS/tasks.c: 958:             }
}
[e $U 957  ]
"959
[; ;Source/FreeRTOS/tasks.c: 959:             else
[e :U 956 ]
"960
[; ;Source/FreeRTOS/tasks.c: 960:             {
{
"962
[; ;Source/FreeRTOS/tasks.c: 962:             }
}
[e :U 957 ]
"963
[; ;Source/FreeRTOS/tasks.c: 963:         }
}
[e ++ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> -> -> 4 `i `uc `i 953  ]
[e :U 954 ]
}
"967
[; ;Source/FreeRTOS/tasks.c: 967:         pxNewTCB->pcTaskName[ ( 4 ) - 1 ] = '\0';
[e = *U + &U . *U _pxNewTCB 5 * -> -> - -> 4 `i -> 1 `i `ui `ux -> -> # *U &U . *U _pxNewTCB 5 `ui `ux -> -> 0 `ui `uc ]
"968
[; ;Source/FreeRTOS/tasks.c: 968:     }
}
[e $U 958  ]
"969
[; ;Source/FreeRTOS/tasks.c: 969:     else
[e :U 952 ]
"970
[; ;Source/FreeRTOS/tasks.c: 970:     {
{
"972
[; ;Source/FreeRTOS/tasks.c: 972:     }
}
[e :U 958 ]
"975
[; ;Source/FreeRTOS/tasks.c: 975:     if( ( uxPriority < ( 3 ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 975 );
[e $ ! == -> < -> _uxPriority `i -> 3 `i `i -> 0 `i 959  ]
[e ( _Xprintf , (. :s 9C -> 975 `i ]
[e :U 959 ]
"977
[; ;Source/FreeRTOS/tasks.c: 977:     if( uxPriority >= ( UBaseType_t ) ( 3 ) )
[e $ ! >= -> _uxPriority `i -> -> -> 3 `i `uc `i 960  ]
"978
[; ;Source/FreeRTOS/tasks.c: 978:     {
{
"979
[; ;Source/FreeRTOS/tasks.c: 979:         uxPriority = ( UBaseType_t ) ( 3 ) - ( UBaseType_t ) 1U;
[e = _uxPriority -> - -> -> -> 3 `i `uc `i -> -> -> 1 `ui `uc `i `uc ]
"980
[; ;Source/FreeRTOS/tasks.c: 980:     }
}
[e $U 961  ]
"981
[; ;Source/FreeRTOS/tasks.c: 981:     else
[e :U 960 ]
"982
[; ;Source/FreeRTOS/tasks.c: 982:     {
{
"984
[; ;Source/FreeRTOS/tasks.c: 984:     }
}
[e :U 961 ]
"986
[; ;Source/FreeRTOS/tasks.c: 986:     pxNewTCB->uxPriority = uxPriority;
[e = . *U _pxNewTCB 3 _uxPriority ]
"993
[; ;Source/FreeRTOS/tasks.c: 993:     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
[e ( _vListInitialiseItem (1 &U . *U _pxNewTCB 1 ]
"994
[; ;Source/FreeRTOS/tasks.c: 994:     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
[e ( _vListInitialiseItem (1 &U . *U _pxNewTCB 2 ]
"998
[; ;Source/FreeRTOS/tasks.c: 998:     ( ( &( pxNewTCB->xStateListItem ) )->pvOwner = ( void * ) ( pxNewTCB ) );
[e = . *U &U . *U _pxNewTCB 1 3 -> _pxNewTCB `*v ]
"1001
[; ;Source/FreeRTOS/tasks.c: 1001:     ( ( &( pxNewTCB->xEventListItem ) )->xItemValue = ( ( TickType_t ) ( 3 ) - ( TickType_t ) uxPriority ) );
[e = . *U &U . *U _pxNewTCB 2 0 -> - -> -> -> 3 `i `us `ui -> -> _uxPriority `us `ui `us ]
"1002
[; ;Source/FreeRTOS/tasks.c: 1002:     ( ( &( pxNewTCB->xEventListItem ) )->pvOwner = ( void * ) ( pxNewTCB ) );
[e = . *U &U . *U _pxNewTCB 2 3 -> _pxNewTCB `*v ]
"1009
[; ;Source/FreeRTOS/tasks.c: 1009:     {
{
"1011
[; ;Source/FreeRTOS/tasks.c: 1011:         ( void ) xRegions;
[e _xRegions ]
"1012
[; ;Source/FreeRTOS/tasks.c: 1012:     }
}
"1048
[; ;Source/FreeRTOS/tasks.c: 1048:     {
{
"1064
[; ;Source/FreeRTOS/tasks.c: 1064:         {
{
"1065
[; ;Source/FreeRTOS/tasks.c: 1065:             do { if( isr_cnt < 10 ){ const char* _s = ("pIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 964 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 965  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 10C ]
[e $U 966  ]
[e :U 967 ]
{
{
[e $U 969  ]
[e :U 970 ]
[e :U 969 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 970  ]
[e :U 971 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 966 ]
[e $ != -> *U __s `i -> 0 `i 967  ]
[e :U 968 ]
{
[e $U 972  ]
[e :U 973 ]
[e :U 972 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 973  ]
[e :U 974 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 1 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 975  ]
[e :U 976 ]
[e :U 975 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 976  ]
[e :U 977 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 1 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 978  ]
[e :U 979 ]
[e :U 978 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 979  ]
[e :U 980 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 981  ]
[e :U 982 ]
[e :U 981 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 982  ]
[e :U 983 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 965 ]
}
[e :U 963 ]
"1066
[; ;Source/FreeRTOS/tasks.c: 1066:             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
[e = . *U _pxNewTCB 0 -> ( _pxPortInitialiseStack (3 , , _pxTopOfStack _pxTaskCode _pvParameters `*Vuc ]
"1067
[; ;Source/FreeRTOS/tasks.c: 1067:         }
}
"1069
[; ;Source/FreeRTOS/tasks.c: 1069:     }
}
"1072
[; ;Source/FreeRTOS/tasks.c: 1072:     if( pxCreatedTask != ((void*)0) )
[e $ ! != _pxCreatedTask -> -> -> 0 `i `*v `**S936 984  ]
"1073
[; ;Source/FreeRTOS/tasks.c: 1073:     {
{
"1076
[; ;Source/FreeRTOS/tasks.c: 1076:         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
[e = *U _pxCreatedTask _pxNewTCB ]
"1077
[; ;Source/FreeRTOS/tasks.c: 1077:     }
}
[e $U 985  ]
"1078
[; ;Source/FreeRTOS/tasks.c: 1078:     else
[e :U 984 ]
"1079
[; ;Source/FreeRTOS/tasks.c: 1079:     {
{
"1081
[; ;Source/FreeRTOS/tasks.c: 1081:     }
}
[e :U 985 ]
"1082
[; ;Source/FreeRTOS/tasks.c: 1082: }
[e :UE 950 ]
}
"1087
[; ;Source/FreeRTOS/tasks.c: 1087: void taskInfo( TCB_t *tcb )
[v _taskInfo `(v ~T0 @X0 1 ef1`*S936 ]
"1088
[; ;Source/FreeRTOS/tasks.c: 1088: {
{
[e :U _taskInfo ]
"1087
[; ;Source/FreeRTOS/tasks.c: 1087: void taskInfo( TCB_t *tcb )
[v _tcb `*S936 ~T0 @X0 1 r1 ]
"1088
[; ;Source/FreeRTOS/tasks.c: 1088: {
[f ]
"1089
[; ;Source/FreeRTOS/tasks.c: 1089:     Xprintf("\r\n");
[e ( _Xprintf :s 11C ]
"1091
[; ;Source/FreeRTOS/tasks.c: 1091:     Xprintf("******************\r\n");
[e ( _Xprintf :s 12C ]
"1092
[; ;Source/FreeRTOS/tasks.c: 1092:     Xprintf("***  taskInfo  ***\r\n",(void *)tcb);
[e ( _Xprintf , (. :s 13C -> _tcb `*v ]
"1093
[; ;Source/FreeRTOS/tasks.c: 1093:     Xprintf("******************\r\n");
[e ( _Xprintf :s 14C ]
"1094
[; ;Source/FreeRTOS/tasks.c: 1094:     Xprintf("pxNewTCB       = %p\r\n",(void *)tcb);
[e ( _Xprintf , (. :s 15C -> _tcb `*v ]
"1095
[; ;Source/FreeRTOS/tasks.c: 1095:     Xprintf("pcTaskName     = %s\r\n", &tcb->pcTaskName[0]);
[e ( _Xprintf , (. :s 16C &U *U + &U . *U _tcb 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _tcb 5 `ui `ux ]
"1096
[; ;Source/FreeRTOS/tasks.c: 1096:     Xprintf(" uxPriority    = %d\r\n", tcb->uxPriority);
[e ( _Xprintf , (. :s 17C -> . *U _tcb 3 `i ]
"1097
[; ;Source/FreeRTOS/tasks.c: 1097:     Xprintf(" pxStack       = %p\r\n", (void *)tcb->pxStack);
[e ( _Xprintf , (. :s 18C -> . *U _tcb 4 `*v ]
"1098
[; ;Source/FreeRTOS/tasks.c: 1098:     Xprintf(" pxTopOfStack  = %p\r\n", (void *)tcb->pxTopOfStack);
[e ( _Xprintf , (. :s 19C -> . *U _tcb 0 `*v ]
"1099
[; ;Source/FreeRTOS/tasks.c: 1099:     Xprintf(" pxEndOfStack  = %p\r\n", (void *)tcb->pxEndOfStack);
[e ( _Xprintf , (. :s 20C -> . *U _tcb 6 `*v ]
"1101
[; ;Source/FreeRTOS/tasks.c: 1101:     Xprintf("xStateListItem = %p\r\n", (void *)&tcb->xStateListItem);
[e ( _Xprintf , (. :s 21C -> &U . *U _tcb 1 `*v ]
"1102
[; ;Source/FreeRTOS/tasks.c: 1102:     Xprintf(" pvContainer   = %p\r\n", (void *)tcb->xStateListItem.pvContainer);
[e ( _Xprintf , (. :s 22C -> . . *U _tcb 1 4 `*v ]
"1103
[; ;Source/FreeRTOS/tasks.c: 1103:     Xprintf(" pvOwner       = %p\r\n", (void *)tcb->xStateListItem.pvOwner);
[e ( _Xprintf , (. :s 23C . . *U _tcb 1 3 ]
"1104
[; ;Source/FreeRTOS/tasks.c: 1104:     Xprintf(" pxNext        = %p\r\n", (void *)tcb->xStateListItem.pxNext);
[e ( _Xprintf , (. :s 24C -> . . *U _tcb 1 1 `*v ]
"1105
[; ;Source/FreeRTOS/tasks.c: 1105:     Xprintf(" pxPrevious    = %p\r\n", (void *)tcb->xStateListItem.pxPrevious);
[e ( _Xprintf , (. :s 25C -> . . *U _tcb 1 2 `*v ]
"1106
[; ;Source/FreeRTOS/tasks.c: 1106:     Xprintf(" xItemValue  　= %x\r\n", tcb->xStateListItem.xItemValue);
[e ( _Xprintf , (. :s 26C -> . . *U _tcb 1 0 `ui ]
"1109
[; ;Source/FreeRTOS/tasks.c: 1109:     Xprintf("xEventListItem = %p\r\n", (void *)&tcb->xEventListItem);
[e ( _Xprintf , (. :s 27C -> &U . *U _tcb 2 `*v ]
"1110
[; ;Source/FreeRTOS/tasks.c: 1110:     Xprintf(" pvContainer 　= %p\r\n", (void *)tcb->xEventListItem.pvContainer);
[e ( _Xprintf , (. :s 28C -> . . *U _tcb 2 4 `*v ]
"1111
[; ;Source/FreeRTOS/tasks.c: 1111:     Xprintf(" pvOwner     　= %p\r\n", (void *)tcb->xEventListItem.pvOwner);
[e ( _Xprintf , (. :s 29C . . *U _tcb 2 3 ]
"1112
[; ;Source/FreeRTOS/tasks.c: 1112:     Xprintf(" pxNext     　 = %p\r\n", (void *)tcb->xEventListItem.pxNext);
[e ( _Xprintf , (. :s 30C -> . . *U _tcb 2 1 `*v ]
"1113
[; ;Source/FreeRTOS/tasks.c: 1113:     Xprintf(" pxPrevious  　= %p\r\n", (void *)tcb->xEventListItem.pxPrevious);
[e ( _Xprintf , (. :s 31C -> . . *U _tcb 2 2 `*v ]
"1114
[; ;Source/FreeRTOS/tasks.c: 1114:     Xprintf(" xItemValue    = %x\r\n", tcb->xEventListItem.xItemValue);
[e ( _Xprintf , (. :s 32C -> . . *U _tcb 2 0 `ui ]
"1131
[; ;Source/FreeRTOS/tasks.c: 1131: }
[e :UE 986 ]
}
"1133
[; ;Source/FreeRTOS/tasks.c: 1133: void pxReadyTasksLists_info(void)
[v _pxReadyTasksLists_info `(v ~T0 @X0 1 ef ]
"1134
[; ;Source/FreeRTOS/tasks.c: 1134: {
{
[e :U _pxReadyTasksLists_info ]
[f ]
"1135
[; ;Source/FreeRTOS/tasks.c: 1135:     uint8_t i,j;
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
"1136
[; ;Source/FreeRTOS/tasks.c: 1136:     ListItem_t *xlist;
[v _xlist `*S930 ~T0 @X0 1 a ]
"1140
[; ;Source/FreeRTOS/tasks.c: 1140:     Xprintf("\r\n");
[e ( _Xprintf :s 33C ]
"1141
[; ;Source/FreeRTOS/tasks.c: 1141:     Xprintf("***************************\r\n");
[e ( _Xprintf :s 34C ]
"1142
[; ;Source/FreeRTOS/tasks.c: 1142:     Xprintf("*** pxReadyTasksLists[] ***\r\n");
[e ( _Xprintf :s 35C ]
"1143
[; ;Source/FreeRTOS/tasks.c: 1143:     Xprintf("***************************\r\n");
[e ( _Xprintf :s 36C ]
"1144
[; ;Source/FreeRTOS/tasks.c: 1144:     for(i = 0; i<( 3 ); i++ ){
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 3 `i 988  ]
[e $U 989  ]
[e :U 988 ]
{
"1145
[; ;Source/FreeRTOS/tasks.c: 1145:         Xprintf("PRIORITY = %d --------------------------\r\n",i);
[e ( _Xprintf , (. :s 37C -> _i `i ]
"1146
[; ;Source/FreeRTOS/tasks.c: 1146:         Xprintf("TASK NUM = %d\r\n", pxReadyTasksLists[i].uxNumberOfItems);
[e ( _Xprintf , (. :s 38C -> . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 `i ]
"1147
[; ;Source/FreeRTOS/tasks.c: 1147:         Xprintf("xListEnd          =%p\r\n", (void *)&pxReadyTasksLists[i].xListEnd　);
[e ( _Xprintf , (. :s 39C -> &U . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 2 `*v ]
"1148
[; ;Source/FreeRTOS/tasks.c: 1148:         Xprintf("  +-- xItemValue  =%d\r\n", (void *)pxReadyTasksLists[i].xListEnd.xItemValue　);
[e ( _Xprintf , (. :s 40C -> . . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 2 0 `*v ]
"1149
[; ;Source/FreeRTOS/tasks.c: 1149:         xlist = pxReadyTasksLists[i].xListEnd.pxNext;
[e = _xlist . . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 2 1 ]
"1150
[; ;Source/FreeRTOS/tasks.c: 1150:         Xprintf("  +-- pxNext      =%p\r\n", (void *)xlist　);
[e ( _Xprintf , (. :s 41C -> _xlist `*v ]
"1151
[; ;Source/FreeRTOS/tasks.c: 1151:         Xprintf("  +-- pxPrevious  =%p\r\n", (void *)pxReadyTasksLists[i].xListEnd.pxPrevious　);
[e ( _Xprintf , (. :s 42C -> . . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 2 2 `*v ]
"1152
[; ;Source/FreeRTOS/tasks.c: 1152:         Xprintf("\r\n");
[e ( _Xprintf :s 43C ]
"1153
[; ;Source/FreeRTOS/tasks.c: 1153:         Xprintf("pxIndex           =%p\r\n", (void *)pxReadyTasksLists[i].pxIndex　);
[e ( _Xprintf , (. :s 44C -> . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 `*v ]
"1154
[; ;Source/FreeRTOS/tasks.c: 1154:         Xprintf("  +-- xItemValue  =%d\r\n", (void *)pxReadyTasksLists[i].pxIndex->xItemValue　);
[e ( _Xprintf , (. :s 45C -> . *U . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 0 `*v ]
"1155
[; ;Source/FreeRTOS/tasks.c: 1155:         Xprintf("  +-- pxNext      =%p\r\n", (void *)xlist　);
[e ( _Xprintf , (. :s 46C -> _xlist `*v ]
"1156
[; ;Source/FreeRTOS/tasks.c: 1156:         Xprintf("  +-- pxPrevious  =%p\r\n", (void *)pxReadyTasksLists[i].pxIndex->pxPrevious　);
[e ( _Xprintf , (. :s 47C -> . *U . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 2 `*v ]
"1157
[; ;Source/FreeRTOS/tasks.c: 1157:         Xprintf("  +-- pvOwner     =%p\r\n", (void *)pxReadyTasksLists[i].pxIndex->pvOwner　);
[e ( _Xprintf , (. :s 48C . *U . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 3 ]
"1159
[; ;Source/FreeRTOS/tasks.c: 1159:         Xprintf("\r\n");
[e ( _Xprintf :s 49C ]
"1162
[; ;Source/FreeRTOS/tasks.c: 1162:         j = 1;
[e = _j -> -> 1 `i `uc ]
"1163
[; ;Source/FreeRTOS/tasks.c: 1163:         while( (void *)xlist != (void *)&pxReadyTasksLists[i].xListEnd ){
[e $U 991  ]
[e :U 992 ]
{
"1164
[; ;Source/FreeRTOS/tasks.c: 1164:             Xprintf("xListEnd.pxNext(%d) %p\r\n", j,(void *)xlist);
[e ( _Xprintf , , (. :s 50C -> _j `i -> _xlist `*v ]
"1165
[; ;Source/FreeRTOS/tasks.c: 1165:             Xprintf("  +-- xItemValue  =%d\r\n", (void *)xlist->xItemValue　);
[e ( _Xprintf , (. :s 51C -> . *U _xlist 0 `*v ]
"1166
[; ;Source/FreeRTOS/tasks.c: 1166:             Xprintf("  +-- pxNext      =%p\r\n", (void *)xlist->pxNext);
[e ( _Xprintf , (. :s 52C -> . *U _xlist 1 `*v ]
"1167
[; ;Source/FreeRTOS/tasks.c: 1167:             Xprintf("  +-- pxPrevious  =%p\r\n", (void *)xlist->pxPrevious);
[e ( _Xprintf , (. :s 53C -> . *U _xlist 2 `*v ]
"1168
[; ;Source/FreeRTOS/tasks.c: 1168:             Xprintf("  +-- pvOwner     =%p\r\n", (void *)xlist->pvOwner);
[e ( _Xprintf , (. :s 54C . *U _xlist 3 ]
"1169
[; ;Source/FreeRTOS/tasks.c: 1169:             Xprintf("  +-- pxContainer =%p\r\n", (void *)xlist->pvContainer　);
[e ( _Xprintf , (. :s 55C -> . *U _xlist 4 `*v ]
"1170
[; ;Source/FreeRTOS/tasks.c: 1170:             xlist = xlist->pxNext;
[e = _xlist . *U _xlist 1 ]
"1171
[; ;Source/FreeRTOS/tasks.c: 1171:             j ++;
[e ++ _j -> -> 1 `i `uc ]
"1172
[; ;Source/FreeRTOS/tasks.c: 1172:         }
}
[e :U 991 ]
"1163
[; ;Source/FreeRTOS/tasks.c: 1163:         while( (void *)xlist != (void *)&pxReadyTasksLists[i].xListEnd ){
[e $ != -> _xlist `*v -> &U . *U + &U _pxReadyTasksLists * -> _i `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 2 `*v 992  ]
[e :U 993 ]
"1173
[; ;Source/FreeRTOS/tasks.c: 1173:         Xprintf("\r\n");
[e ( _Xprintf :s 56C ]
"1175
[; ;Source/FreeRTOS/tasks.c: 1175:         Xprintf("xListEnd.pxNext(%d) %p\r\n", j,(void *)xlist);
[e ( _Xprintf , , (. :s 57C -> _j `i -> _xlist `*v ]
"1176
[; ;Source/FreeRTOS/tasks.c: 1176:         Xprintf("  +-- xItemValue  =%d\r\n", (void *)xlist->xItemValue　);
[e ( _Xprintf , (. :s 58C -> . *U _xlist 0 `*v ]
"1177
[; ;Source/FreeRTOS/tasks.c: 1177:         Xprintf("  +-- pxNext      =%p\r\n", (void *)xlist->pxNext);
[e ( _Xprintf , (. :s 59C -> . *U _xlist 1 `*v ]
"1178
[; ;Source/FreeRTOS/tasks.c: 1178:         Xprintf("  +-- pxPrevious  =%p\r\n", (void *)xlist->pxPrevious);
[e ( _Xprintf , (. :s 60C -> . *U _xlist 2 `*v ]
"1179
[; ;Source/FreeRTOS/tasks.c: 1179:         Xprintf("  +-- pvOwner     =%p\r\n", (void *)xlist->pvOwner);
[e ( _Xprintf , (. :s 61C . *U _xlist 3 ]
"1180
[; ;Source/FreeRTOS/tasks.c: 1180:         Xprintf("  +-- pxContainer =%p\r\n", (void *)xlist->pvContainer　);
[e ( _Xprintf , (. :s 62C -> . *U _xlist 4 `*v ]
"1182
[; ;Source/FreeRTOS/tasks.c: 1182:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 3 `i 988  ]
[e :U 989 ]
}
"1183
[; ;Source/FreeRTOS/tasks.c: 1183: }
[e :UE 987 ]
}
"1186
[; ;Source/FreeRTOS/tasks.c: 1186: static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
[v _prvAddNewTaskToReadyList `(v ~T0 @X0 1 sf1`*S936 ]
"1187
[; ;Source/FreeRTOS/tasks.c: 1187: {
{
[e :U _prvAddNewTaskToReadyList ]
"1186
[; ;Source/FreeRTOS/tasks.c: 1186: static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
[v _pxNewTCB `*S936 ~T0 @X0 1 r1 ]
"1187
[; ;Source/FreeRTOS/tasks.c: 1187: {
[f ]
"1188
[; ;Source/FreeRTOS/tasks.c: 1188:     taskInfo( pxNewTCB );
[e ( _taskInfo (1 _pxNewTCB ]
"1192
[; ;Source/FreeRTOS/tasks.c: 1192:     POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1193
[; ;Source/FreeRTOS/tasks.c: 1193:     {
{
"1194
[; ;Source/FreeRTOS/tasks.c: 1194:         uxCurrentNumberOfTasks++;
[e ++ _uxCurrentNumberOfTasks -> -> 1 `i `Vuc ]
"1195
[; ;Source/FreeRTOS/tasks.c: 1195:          Xprintf("uxCurrentNumberOfTasks=%d\r\n",uxCurrentNumberOfTasks);
[e ( _Xprintf , (. :s 63C -> _uxCurrentNumberOfTasks `i ]
"1197
[; ;Source/FreeRTOS/tasks.c: 1197:         if( pxCurrentTCB == ((void*)0) )
[e $ ! == _pxCurrentTCB -> -> -> 0 `i `*v `*S936 995  ]
"1198
[; ;Source/FreeRTOS/tasks.c: 1198:         {
{
"1199
[; ;Source/FreeRTOS/tasks.c: 1199:             Xprintf("prvAddNewTaskToReadyList　02\r\n");
[e ( _Xprintf :s 64C ]
"1201
[; ;Source/FreeRTOS/tasks.c: 1201:             pxCurrentTCB = pxNewTCB;
[e = _pxCurrentTCB _pxNewTCB ]
"1203
[; ;Source/FreeRTOS/tasks.c: 1203:             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
[e $ ! == -> _uxCurrentNumberOfTasks `i -> -> -> 1 `i `uc `i 996  ]
"1204
[; ;Source/FreeRTOS/tasks.c: 1204:             {
{
"1207
[; ;Source/FreeRTOS/tasks.c: 1207:                 prvInitialiseTaskLists();
[e ( _prvInitialiseTaskLists ..  ]
"1208
[; ;Source/FreeRTOS/tasks.c: 1208:             }
}
[e $U 997  ]
"1209
[; ;Source/FreeRTOS/tasks.c: 1209:             else
[e :U 996 ]
"1210
[; ;Source/FreeRTOS/tasks.c: 1210:             {
{
"1212
[; ;Source/FreeRTOS/tasks.c: 1212:             }
}
[e :U 997 ]
"1213
[; ;Source/FreeRTOS/tasks.c: 1213:         }
}
[e $U 998  ]
"1214
[; ;Source/FreeRTOS/tasks.c: 1214:         else
[e :U 995 ]
"1215
[; ;Source/FreeRTOS/tasks.c: 1215:         {
{
"1216
[; ;Source/FreeRTOS/tasks.c: 1216:             Xprintf("prvAddNewTaskToReadyList　03\r\n");
[e ( _Xprintf :s 65C ]
"1219
[; ;Source/FreeRTOS/tasks.c: 1219:             if( xSchedulerRunning == ( ( BaseType_t ) 0 ) )
[e $ ! == -> _xSchedulerRunning `i -> -> -> 0 `i `c `i 999  ]
"1220
[; ;Source/FreeRTOS/tasks.c: 1220:             {
{
"1221
[; ;Source/FreeRTOS/tasks.c: 1221:                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
[e $ ! <= -> . *U _pxCurrentTCB 3 `i -> . *U _pxNewTCB 3 `i 1000  ]
"1222
[; ;Source/FreeRTOS/tasks.c: 1222:                 {
{
"1223
[; ;Source/FreeRTOS/tasks.c: 1223:                     pxCurrentTCB = pxNewTCB;
[e = _pxCurrentTCB _pxNewTCB ]
"1224
[; ;Source/FreeRTOS/tasks.c: 1224:                 }
}
[e $U 1001  ]
"1225
[; ;Source/FreeRTOS/tasks.c: 1225:                 else
[e :U 1000 ]
"1226
[; ;Source/FreeRTOS/tasks.c: 1226:                 {
{
"1228
[; ;Source/FreeRTOS/tasks.c: 1228:                 }
}
[e :U 1001 ]
"1229
[; ;Source/FreeRTOS/tasks.c: 1229:             }
}
[e $U 1002  ]
"1230
[; ;Source/FreeRTOS/tasks.c: 1230:             else
[e :U 999 ]
"1231
[; ;Source/FreeRTOS/tasks.c: 1231:             {
{
"1233
[; ;Source/FreeRTOS/tasks.c: 1233:             }
}
[e :U 1002 ]
"1234
[; ;Source/FreeRTOS/tasks.c: 1234:         }
}
[e :U 998 ]
"1236
[; ;Source/FreeRTOS/tasks.c: 1236:         uxTaskNumber++;
[e ++ _uxTaskNumber -> -> 1 `i `uc ]
"1239
[; ;Source/FreeRTOS/tasks.c: 1239:         {
{
"1241
[; ;Source/FreeRTOS/tasks.c: 1241:             pxNewTCB->uxTCBNumber = uxTaskNumber;
[e = . *U _pxNewTCB 7 _uxTaskNumber ]
"1242
[; ;Source/FreeRTOS/tasks.c: 1242:         }
}
"1246
[; ;Source/FreeRTOS/tasks.c: 1246:         ; { if( ( ( pxNewTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxNewTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxNewTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxNewTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxNewTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxNewTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxNewTCB )->xStateListItem ) ); ( &( ( pxNewTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxNewTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxNewTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxNewTCB 3 `i -> _uxTopReadyPriority `i 1003  ]
{
[e = _uxTopReadyPriority . *U _pxNewTCB 3 ]
}
[e :U 1003 ]
}
{
[v F7599 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxNewTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxNewTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxNewTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxNewTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxNewTCB 1 ]
[e = . *U &U . *U _pxNewTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxNewTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxNewTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"1248
[; ;Source/FreeRTOS/tasks.c: 1248:         ( void ) ( pxNewTCB );
[e _pxNewTCB ]
"1249
[; ;Source/FreeRTOS/tasks.c: 1249:     }
}
"1250
[; ;Source/FreeRTOS/tasks.c: 1250:     __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1004  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1004 ]
"1252
[; ;Source/FreeRTOS/tasks.c: 1252:     if( xSchedulerRunning != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xSchedulerRunning `i -> -> -> 0 `i `c `i 1005  ]
"1253
[; ;Source/FreeRTOS/tasks.c: 1253:     {
{
"1255
[; ;Source/FreeRTOS/tasks.c: 1255:         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
[e $ ! < -> . *U _pxCurrentTCB 3 `i -> . *U _pxNewTCB 3 `i 1006  ]
"1256
[; ;Source/FreeRTOS/tasks.c: 1256:         {
{
"1257
[; ;Source/FreeRTOS/tasks.c: 1257:             vPortYield();
[e ( _vPortYield ..  ]
"1258
[; ;Source/FreeRTOS/tasks.c: 1258:         }
}
[e $U 1007  ]
"1259
[; ;Source/FreeRTOS/tasks.c: 1259:         else
[e :U 1006 ]
"1260
[; ;Source/FreeRTOS/tasks.c: 1260:         {
{
"1262
[; ;Source/FreeRTOS/tasks.c: 1262:         }
}
[e :U 1007 ]
"1263
[; ;Source/FreeRTOS/tasks.c: 1263:     }
}
[e $U 1008  ]
"1264
[; ;Source/FreeRTOS/tasks.c: 1264:     else
[e :U 1005 ]
"1265
[; ;Source/FreeRTOS/tasks.c: 1265:     {
{
"1267
[; ;Source/FreeRTOS/tasks.c: 1267:     }
}
[e :U 1008 ]
"1269
[; ;Source/FreeRTOS/tasks.c: 1269:    taskInfo( pxCurrentTCB );
[e ( _taskInfo (1 _pxCurrentTCB ]
"1271
[; ;Source/FreeRTOS/tasks.c: 1271:    vTaskList(0);
[e ( _vTaskList (1 -> -> 0 `i `*uc ]
"1272
[; ;Source/FreeRTOS/tasks.c: 1272:  }
[e :UE 994 ]
}
"1277
[; ;Source/FreeRTOS/tasks.c: 1277:     void vTaskDelete( TaskHandle_t xTaskToDelete )
[v _vTaskDelete `(v ~T0 @X0 1 ef1`*S936 ]
"1278
[; ;Source/FreeRTOS/tasks.c: 1278:     {
{
[e :U _vTaskDelete ]
"1277
[; ;Source/FreeRTOS/tasks.c: 1277:     void vTaskDelete( TaskHandle_t xTaskToDelete )
[v _xTaskToDelete `*S936 ~T0 @X0 1 r1 ]
"1278
[; ;Source/FreeRTOS/tasks.c: 1278:     {
[f ]
"1279
[; ;Source/FreeRTOS/tasks.c: 1279:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"1281
[; ;Source/FreeRTOS/tasks.c: 1281:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1282
[; ;Source/FreeRTOS/tasks.c: 1282:         {
{
"1285
[; ;Source/FreeRTOS/tasks.c: 1285:             pxTCB = ( ( ( xTaskToDelete ) == ((void*)0) ) ? pxCurrentTCB : ( xTaskToDelete ) );
[e = _pxTCB ? == _xTaskToDelete -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTaskToDelete ]
"1288
[; ;Source/FreeRTOS/tasks.c: 1288:             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
[e $ ! == -> ( _uxListRemove (1 &U . *U _pxTCB 1 `i -> -> -> 0 `i `uc `i 1010  ]
"1289
[; ;Source/FreeRTOS/tasks.c: 1289:             {
{
"1291
[; ;Source/FreeRTOS/tasks.c: 1291:             }
}
[e $U 1011  ]
"1292
[; ;Source/FreeRTOS/tasks.c: 1292:             else
[e :U 1010 ]
"1293
[; ;Source/FreeRTOS/tasks.c: 1293:             {
{
"1295
[; ;Source/FreeRTOS/tasks.c: 1295:             }
}
[e :U 1011 ]
"1298
[; ;Source/FreeRTOS/tasks.c: 1298:             if( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) != ((void*)0) )
[e $ ! != . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 1012  ]
"1299
[; ;Source/FreeRTOS/tasks.c: 1299:             {
{
"1300
[; ;Source/FreeRTOS/tasks.c: 1300:                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
[e ( _uxListRemove (1 &U . *U _pxTCB 2 ]
"1301
[; ;Source/FreeRTOS/tasks.c: 1301:             }
}
[e $U 1013  ]
"1302
[; ;Source/FreeRTOS/tasks.c: 1302:             else
[e :U 1012 ]
"1303
[; ;Source/FreeRTOS/tasks.c: 1303:             {
{
"1305
[; ;Source/FreeRTOS/tasks.c: 1305:             }
}
[e :U 1013 ]
"1311
[; ;Source/FreeRTOS/tasks.c: 1311:             uxTaskNumber++;
[e ++ _uxTaskNumber -> -> 1 `i `uc ]
"1313
[; ;Source/FreeRTOS/tasks.c: 1313:             if( pxTCB == pxCurrentTCB )
[e $ ! == _pxTCB _pxCurrentTCB 1014  ]
"1314
[; ;Source/FreeRTOS/tasks.c: 1314:             {
{
"1320
[; ;Source/FreeRTOS/tasks.c: 1320:                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
[e ( _vListInsertEnd (2 , &U _xTasksWaitingTermination &U . *U _pxTCB 1 ]
"1325
[; ;Source/FreeRTOS/tasks.c: 1325:                 ++uxDeletedTasksWaitingCleanUp;
[e =+ _uxDeletedTasksWaitingCleanUp -> -> 1 `i `Vuc ]
"1337
[; ;Source/FreeRTOS/tasks.c: 1337:             }
}
[e $U 1015  ]
"1338
[; ;Source/FreeRTOS/tasks.c: 1338:             else
[e :U 1014 ]
"1339
[; ;Source/FreeRTOS/tasks.c: 1339:             {
{
"1340
[; ;Source/FreeRTOS/tasks.c: 1340:                 --uxCurrentNumberOfTasks;
[e =- _uxCurrentNumberOfTasks -> -> 1 `i `Vuc ]
"1345
[; ;Source/FreeRTOS/tasks.c: 1345:                 prvResetNextTaskUnblockTime();
[e ( _prvResetNextTaskUnblockTime ..  ]
"1346
[; ;Source/FreeRTOS/tasks.c: 1346:             }
}
[e :U 1015 ]
"1347
[; ;Source/FreeRTOS/tasks.c: 1347:         }
}
"1348
[; ;Source/FreeRTOS/tasks.c: 1348:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1016  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1016 ]
"1353
[; ;Source/FreeRTOS/tasks.c: 1353:         if( pxTCB != pxCurrentTCB )
[e $ ! != _pxTCB _pxCurrentTCB 1017  ]
"1354
[; ;Source/FreeRTOS/tasks.c: 1354:         {
{
"1355
[; ;Source/FreeRTOS/tasks.c: 1355:             prvDeleteTCB( pxTCB );
[e ( _prvDeleteTCB (1 _pxTCB ]
"1356
[; ;Source/FreeRTOS/tasks.c: 1356:         }
}
[e :U 1017 ]
"1360
[; ;Source/FreeRTOS/tasks.c: 1360:         if( xSchedulerRunning != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xSchedulerRunning `i -> -> -> 0 `i `c `i 1018  ]
"1361
[; ;Source/FreeRTOS/tasks.c: 1361:         {
{
"1362
[; ;Source/FreeRTOS/tasks.c: 1362:             if( pxTCB == pxCurrentTCB )
[e $ ! == _pxTCB _pxCurrentTCB 1019  ]
"1363
[; ;Source/FreeRTOS/tasks.c: 1363:             {
{
"1364
[; ;Source/FreeRTOS/tasks.c: 1364:                 if( ( uxSchedulerSuspended == 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1364 );
[e $ ! == -> == -> _uxSchedulerSuspended `i -> 0 `i `i -> 0 `i 1020  ]
[e ( _Xprintf , (. :s 66C -> 1364 `i ]
[e :U 1020 ]
"1365
[; ;Source/FreeRTOS/tasks.c: 1365:                 vPortYield();
[e ( _vPortYield ..  ]
"1366
[; ;Source/FreeRTOS/tasks.c: 1366:             }
}
[e $U 1021  ]
"1367
[; ;Source/FreeRTOS/tasks.c: 1367:             else
[e :U 1019 ]
"1368
[; ;Source/FreeRTOS/tasks.c: 1368:             {
{
"1370
[; ;Source/FreeRTOS/tasks.c: 1370:             }
}
[e :U 1021 ]
"1371
[; ;Source/FreeRTOS/tasks.c: 1371:         }
}
[e :U 1018 ]
"1372
[; ;Source/FreeRTOS/tasks.c: 1372:     }
[e :UE 1009 ]
}
"1379
[; ;Source/FreeRTOS/tasks.c: 1379:     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
[v _xTaskDelayUntil `(c ~T0 @X0 1 ef2`C*us`Cus ]
"1381
[; ;Source/FreeRTOS/tasks.c: 1381:     {
{
[e :U _xTaskDelayUntil ]
[v F7606 `*us ~T0 @X0 1 t ]
"1379
[; ;Source/FreeRTOS/tasks.c: 1379:     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
[v _pxPreviousWakeTime `C*us ~T0 @X0 1 r1 ]
"1380
[; ;Source/FreeRTOS/tasks.c: 1380:                                 const TickType_t xTimeIncrement )
[v _xTimeIncrement `Cus ~T0 @X0 1 r2 ]
"1381
[; ;Source/FreeRTOS/tasks.c: 1381:     {
[f ]
"1382
[; ;Source/FreeRTOS/tasks.c: 1382:         TickType_t xTimeToWake;
[v _xTimeToWake `us ~T0 @X0 1 a ]
"1383
[; ;Source/FreeRTOS/tasks.c: 1383:         BaseType_t xAlreadyYielded, xShouldDelay = ( ( BaseType_t ) 0 );
[v _xAlreadyYielded `c ~T0 @X0 1 a ]
[v _xShouldDelay `c ~T0 @X0 1 a ]
[e = _xShouldDelay -> -> 0 `i `c ]
"1385
[; ;Source/FreeRTOS/tasks.c: 1385:         if( ( pxPreviousWakeTime ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1385 );
[e $ ! == _pxPreviousWakeTime -> -> 0 `i `*us 1023  ]
[e ( _Xprintf , (. :s 67C -> 1385 `i ]
[e :U 1023 ]
"1386
[; ;Source/FreeRTOS/tasks.c: 1386:         if( ( ( xTimeIncrement > 0U ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1386 );
[e $ ! == -> > -> _xTimeIncrement `ui -> 0 `ui `i -> 0 `i 1024  ]
[e ( _Xprintf , (. :s 68C -> 1386 `i ]
[e :U 1024 ]
"1387
[; ;Source/FreeRTOS/tasks.c: 1387:         if( ( uxSchedulerSuspended == 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1387 );
[e $ ! == -> == -> _uxSchedulerSuspended `i -> 0 `i `i -> 0 `i 1025  ]
[e ( _Xprintf , (. :s 69C -> 1387 `i ]
[e :U 1025 ]
"1389
[; ;Source/FreeRTOS/tasks.c: 1389:         vTaskSuspendAll();
[e ( _vTaskSuspendAll ..  ]
"1390
[; ;Source/FreeRTOS/tasks.c: 1390:         {
{
"1393
[; ;Source/FreeRTOS/tasks.c: 1393:             const TickType_t xConstTickCount = xTickCount;
[v _xConstTickCount `Cus ~T0 @X0 1 a ]
[e = _xConstTickCount _xTickCount ]
"1396
[; ;Source/FreeRTOS/tasks.c: 1396:             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
[e = _xTimeToWake -> + -> *U _pxPreviousWakeTime `ui -> _xTimeIncrement `ui `us ]
"1398
[; ;Source/FreeRTOS/tasks.c: 1398:             if( xConstTickCount < *pxPreviousWakeTime )
[e $ ! < -> _xConstTickCount `ui -> *U _pxPreviousWakeTime `ui 1026  ]
"1399
[; ;Source/FreeRTOS/tasks.c: 1399:             {
{
"1405
[; ;Source/FreeRTOS/tasks.c: 1405:                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
[e $ ! && < -> _xTimeToWake `ui -> *U _pxPreviousWakeTime `ui > -> _xTimeToWake `ui -> _xConstTickCount `ui 1027  ]
"1406
[; ;Source/FreeRTOS/tasks.c: 1406:                 {
{
"1407
[; ;Source/FreeRTOS/tasks.c: 1407:                     xShouldDelay = ( ( BaseType_t ) 1 );
[e = _xShouldDelay -> -> 1 `i `c ]
"1408
[; ;Source/FreeRTOS/tasks.c: 1408:                 }
}
[e $U 1028  ]
"1409
[; ;Source/FreeRTOS/tasks.c: 1409:                 else
[e :U 1027 ]
"1410
[; ;Source/FreeRTOS/tasks.c: 1410:                 {
{
"1412
[; ;Source/FreeRTOS/tasks.c: 1412:                 }
}
[e :U 1028 ]
"1413
[; ;Source/FreeRTOS/tasks.c: 1413:             }
}
[e $U 1029  ]
"1414
[; ;Source/FreeRTOS/tasks.c: 1414:             else
[e :U 1026 ]
"1415
[; ;Source/FreeRTOS/tasks.c: 1415:             {
{
"1419
[; ;Source/FreeRTOS/tasks.c: 1419:                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
[e $ ! || < -> _xTimeToWake `ui -> *U _pxPreviousWakeTime `ui > -> _xTimeToWake `ui -> _xConstTickCount `ui 1030  ]
"1420
[; ;Source/FreeRTOS/tasks.c: 1420:                 {
{
"1421
[; ;Source/FreeRTOS/tasks.c: 1421:                     xShouldDelay = ( ( BaseType_t ) 1 );
[e = _xShouldDelay -> -> 1 `i `c ]
"1422
[; ;Source/FreeRTOS/tasks.c: 1422:                 }
}
[e $U 1031  ]
"1423
[; ;Source/FreeRTOS/tasks.c: 1423:                 else
[e :U 1030 ]
"1424
[; ;Source/FreeRTOS/tasks.c: 1424:                 {
{
"1426
[; ;Source/FreeRTOS/tasks.c: 1426:                 }
}
[e :U 1031 ]
"1427
[; ;Source/FreeRTOS/tasks.c: 1427:             }
}
[e :U 1029 ]
"1430
[; ;Source/FreeRTOS/tasks.c: 1430:             *pxPreviousWakeTime = xTimeToWake;
[e = *U _pxPreviousWakeTime _xTimeToWake ]
"1432
[; ;Source/FreeRTOS/tasks.c: 1432:             if( xShouldDelay != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xShouldDelay `i -> -> -> 0 `i `c `i 1032  ]
"1433
[; ;Source/FreeRTOS/tasks.c: 1433:             {
{
"1438
[; ;Source/FreeRTOS/tasks.c: 1438:                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, ( ( BaseType_t ) 0 ) );
[e ( _prvAddCurrentTaskToDelayedList (2 , -> - -> _xTimeToWake `ui -> _xConstTickCount `ui `us -> -> 0 `i `c ]
"1439
[; ;Source/FreeRTOS/tasks.c: 1439:             }
}
[e $U 1033  ]
"1440
[; ;Source/FreeRTOS/tasks.c: 1440:             else
[e :U 1032 ]
"1441
[; ;Source/FreeRTOS/tasks.c: 1441:             {
{
"1443
[; ;Source/FreeRTOS/tasks.c: 1443:             }
}
[e :U 1033 ]
"1444
[; ;Source/FreeRTOS/tasks.c: 1444:         }
}
"1445
[; ;Source/FreeRTOS/tasks.c: 1445:         xAlreadyYielded = xTaskResumeAll();
[e = _xAlreadyYielded ( _xTaskResumeAll ..  ]
"1449
[; ;Source/FreeRTOS/tasks.c: 1449:         if( xAlreadyYielded == ( ( BaseType_t ) 0 ) )
[e $ ! == -> _xAlreadyYielded `i -> -> -> 0 `i `c `i 1034  ]
"1450
[; ;Source/FreeRTOS/tasks.c: 1450:         {
{
"1451
[; ;Source/FreeRTOS/tasks.c: 1451:             vPortYield();
[e ( _vPortYield ..  ]
"1452
[; ;Source/FreeRTOS/tasks.c: 1452:         }
}
[e $U 1035  ]
"1453
[; ;Source/FreeRTOS/tasks.c: 1453:         else
[e :U 1034 ]
"1454
[; ;Source/FreeRTOS/tasks.c: 1454:         {
{
"1456
[; ;Source/FreeRTOS/tasks.c: 1456:         }
}
[e :U 1035 ]
"1458
[; ;Source/FreeRTOS/tasks.c: 1458:         return xShouldDelay;
[e ) _xShouldDelay ]
[e $UE 1022  ]
"1459
[; ;Source/FreeRTOS/tasks.c: 1459:     }
[e :UE 1022 ]
}
"1466
[; ;Source/FreeRTOS/tasks.c: 1466:     void vTaskDelay( const TickType_t xTicksToDelay )
[v _vTaskDelay `(v ~T0 @X0 1 ef1`Cus ]
"1467
[; ;Source/FreeRTOS/tasks.c: 1467:     {
{
[e :U _vTaskDelay ]
"1466
[; ;Source/FreeRTOS/tasks.c: 1466:     void vTaskDelay( const TickType_t xTicksToDelay )
[v _xTicksToDelay `Cus ~T0 @X0 1 r1 ]
"1467
[; ;Source/FreeRTOS/tasks.c: 1467:     {
[f ]
"1468
[; ;Source/FreeRTOS/tasks.c: 1468:         BaseType_t xAlreadyYielded = ( ( BaseType_t ) 0 );
[v _xAlreadyYielded `c ~T0 @X0 1 a ]
[e = _xAlreadyYielded -> -> 0 `i `c ]
"1471
[; ;Source/FreeRTOS/tasks.c: 1471:         if( xTicksToDelay > ( TickType_t ) 0U )
[e $ ! > -> _xTicksToDelay `ui -> -> -> 0 `ui `us `ui 1037  ]
"1472
[; ;Source/FreeRTOS/tasks.c: 1472:         {
{
"1473
[; ;Source/FreeRTOS/tasks.c: 1473:             if( ( uxSchedulerSuspended == 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1473 );
[e $ ! == -> == -> _uxSchedulerSuspended `i -> 0 `i `i -> 0 `i 1038  ]
[e ( _Xprintf , (. :s 70C -> 1473 `i ]
[e :U 1038 ]
"1474
[; ;Source/FreeRTOS/tasks.c: 1474:             vTaskSuspendAll();
[e ( _vTaskSuspendAll ..  ]
"1475
[; ;Source/FreeRTOS/tasks.c: 1475:             {
{
"1485
[; ;Source/FreeRTOS/tasks.c: 1485:                 prvAddCurrentTaskToDelayedList( xTicksToDelay, ( ( BaseType_t ) 0 ) );
[e ( _prvAddCurrentTaskToDelayedList (2 , _xTicksToDelay -> -> 0 `i `c ]
"1486
[; ;Source/FreeRTOS/tasks.c: 1486:             }
}
"1487
[; ;Source/FreeRTOS/tasks.c: 1487:             xAlreadyYielded = xTaskResumeAll();
[e = _xAlreadyYielded ( _xTaskResumeAll ..  ]
"1488
[; ;Source/FreeRTOS/tasks.c: 1488:         }
}
[e $U 1039  ]
"1489
[; ;Source/FreeRTOS/tasks.c: 1489:         else
[e :U 1037 ]
"1490
[; ;Source/FreeRTOS/tasks.c: 1490:         {
{
"1492
[; ;Source/FreeRTOS/tasks.c: 1492:         }
}
[e :U 1039 ]
"1496
[; ;Source/FreeRTOS/tasks.c: 1496:         if( xAlreadyYielded == ( ( BaseType_t ) 0 ) )
[e $ ! == -> _xAlreadyYielded `i -> -> -> 0 `i `c `i 1040  ]
"1497
[; ;Source/FreeRTOS/tasks.c: 1497:         {
{
"1498
[; ;Source/FreeRTOS/tasks.c: 1498:             vPortYield();
[e ( _vPortYield ..  ]
"1499
[; ;Source/FreeRTOS/tasks.c: 1499:         }
}
[e $U 1041  ]
"1500
[; ;Source/FreeRTOS/tasks.c: 1500:         else
[e :U 1040 ]
"1501
[; ;Source/FreeRTOS/tasks.c: 1501:         {
{
"1503
[; ;Source/FreeRTOS/tasks.c: 1503:         }
}
[e :U 1041 ]
"1504
[; ;Source/FreeRTOS/tasks.c: 1504:     }
[e :UE 1036 ]
}
"1511
[; ;Source/FreeRTOS/tasks.c: 1511:     eTaskState eTaskGetState( TaskHandle_t xTask )
[v _eTaskGetState `(E7129 ~T0 @X0 1 ef1`*S936 ]
"1512
[; ;Source/FreeRTOS/tasks.c: 1512:     {
{
[e :U _eTaskGetState ]
"1511
[; ;Source/FreeRTOS/tasks.c: 1511:     eTaskState eTaskGetState( TaskHandle_t xTask )
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"1512
[; ;Source/FreeRTOS/tasks.c: 1512:     {
[f ]
"1513
[; ;Source/FreeRTOS/tasks.c: 1513:         eTaskState eReturn;
[v _eReturn `E7129 ~T0 @X0 1 a ]
"1514
[; ;Source/FreeRTOS/tasks.c: 1514:         List_t const * pxStateList;
[v _pxStateList `*CS931 ~T0 @X0 1 a ]
"1515
[; ;Source/FreeRTOS/tasks.c: 1515:         List_t const * pxDelayedList;
[v _pxDelayedList `*CS931 ~T0 @X0 1 a ]
"1516
[; ;Source/FreeRTOS/tasks.c: 1516:         List_t const * pxOverflowedDelayedList;
[v _pxOverflowedDelayedList `*CS931 ~T0 @X0 1 a ]
[v F7622 `*CS936 ~T0 @X0 1 t ]
"1517
[; ;Source/FreeRTOS/tasks.c: 1517:         const TCB_t * const pxTCB = xTask;
[v _pxTCB `C*CS936 ~T0 @X0 1 a ]
[e = _pxTCB -> _xTask `*CS936 ]
"1519
[; ;Source/FreeRTOS/tasks.c: 1519:         if( ( pxTCB ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1519 );
[e $ ! == _pxTCB -> -> 0 `i `*CS936 1043  ]
[e ( _Xprintf , (. :s 71C -> 1519 `i ]
[e :U 1043 ]
"1521
[; ;Source/FreeRTOS/tasks.c: 1521:         if( pxTCB == pxCurrentTCB )
[e $ ! == _pxTCB -> _pxCurrentTCB `*CS936 1044  ]
"1522
[; ;Source/FreeRTOS/tasks.c: 1522:         {
{
"1524
[; ;Source/FreeRTOS/tasks.c: 1524:             eReturn = eRunning;
[e = _eReturn . `E7129 0 ]
"1525
[; ;Source/FreeRTOS/tasks.c: 1525:         }
}
[e $U 1045  ]
"1526
[; ;Source/FreeRTOS/tasks.c: 1526:         else
[e :U 1044 ]
"1527
[; ;Source/FreeRTOS/tasks.c: 1527:         {
{
"1528
[; ;Source/FreeRTOS/tasks.c: 1528:             POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1529
[; ;Source/FreeRTOS/tasks.c: 1529:             {
{
"1530
[; ;Source/FreeRTOS/tasks.c: 1530:                 pxStateList = ( ( &( pxTCB->xStateListItem ) )->pvContainer );
[e = _pxStateList -> . *U &U . *U _pxTCB 1 4 `*CS931 ]
"1531
[; ;Source/FreeRTOS/tasks.c: 1531:                 pxDelayedList = pxDelayedTaskList;
[e = _pxDelayedList -> _pxDelayedTaskList `*CS931 ]
"1532
[; ;Source/FreeRTOS/tasks.c: 1532:                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
[e = _pxOverflowedDelayedList -> _pxOverflowDelayedTaskList `*CS931 ]
"1533
[; ;Source/FreeRTOS/tasks.c: 1533:             }
}
"1534
[; ;Source/FreeRTOS/tasks.c: 1534:             __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1046  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1046 ]
"1536
[; ;Source/FreeRTOS/tasks.c: 1536:             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
[e $ ! || == _pxStateList _pxDelayedList == _pxStateList _pxOverflowedDelayedList 1047  ]
"1537
[; ;Source/FreeRTOS/tasks.c: 1537:             {
{
"1540
[; ;Source/FreeRTOS/tasks.c: 1540:                 eReturn = eBlocked;
[e = _eReturn . `E7129 2 ]
"1541
[; ;Source/FreeRTOS/tasks.c: 1541:             }
}
[e $U 1048  ]
"1544
[; ;Source/FreeRTOS/tasks.c: 1544:                 else if( pxStateList == &xSuspendedTaskList )
[e :U 1047 ]
[e $ ! == _pxStateList -> &U _xSuspendedTaskList `*CS931 1049  ]
"1545
[; ;Source/FreeRTOS/tasks.c: 1545:                 {
{
"1549
[; ;Source/FreeRTOS/tasks.c: 1549:                     if( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) == ((void*)0) )
[e $ ! == . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 1050  ]
"1550
[; ;Source/FreeRTOS/tasks.c: 1550:                     {
{
"1552
[; ;Source/FreeRTOS/tasks.c: 1552:                         {
{
"1553
[; ;Source/FreeRTOS/tasks.c: 1553:                             BaseType_t x;
[v _x `c ~T0 @X0 1 a ]
"1560
[; ;Source/FreeRTOS/tasks.c: 1560:                             eReturn = eSuspended;
[e = _eReturn . `E7129 3 ]
"1562
[; ;Source/FreeRTOS/tasks.c: 1562:                             for( x = 0; x < 1; x++ )
{
[e = _x -> -> 0 `i `c ]
[e $ < -> _x `i -> 1 `i 1051  ]
[e $U 1052  ]
[e :U 1051 ]
"1563
[; ;Source/FreeRTOS/tasks.c: 1563:                             {
{
"1564
[; ;Source/FreeRTOS/tasks.c: 1564:                                 if( pxTCB->ucNotifyState[ x ] == ( ( uint8_t ) 1 ) )
[e $ ! == -> *U + &U . *U _pxTCB 10 * -> -> _x `uc `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux `i -> -> -> 1 `i `uc `i 1054  ]
"1565
[; ;Source/FreeRTOS/tasks.c: 1565:                                 {
{
"1566
[; ;Source/FreeRTOS/tasks.c: 1566:                                     eReturn = eBlocked;
[e = _eReturn . `E7129 2 ]
"1567
[; ;Source/FreeRTOS/tasks.c: 1567:                                     break;
[e $U 1052  ]
"1568
[; ;Source/FreeRTOS/tasks.c: 1568:                                 }
}
[e :U 1054 ]
"1569
[; ;Source/FreeRTOS/tasks.c: 1569:                             }
}
[e ++ _x -> -> 1 `i `c ]
[e $ < -> _x `i -> 1 `i 1051  ]
[e :U 1052 ]
}
"1570
[; ;Source/FreeRTOS/tasks.c: 1570:                         }
}
"1576
[; ;Source/FreeRTOS/tasks.c: 1576:                     }
}
[e $U 1055  ]
"1577
[; ;Source/FreeRTOS/tasks.c: 1577:                     else
[e :U 1050 ]
"1578
[; ;Source/FreeRTOS/tasks.c: 1578:                     {
{
"1579
[; ;Source/FreeRTOS/tasks.c: 1579:                         eReturn = eBlocked;
[e = _eReturn . `E7129 2 ]
"1580
[; ;Source/FreeRTOS/tasks.c: 1580:                     }
}
[e :U 1055 ]
"1581
[; ;Source/FreeRTOS/tasks.c: 1581:                 }
}
[e $U 1056  ]
"1585
[; ;Source/FreeRTOS/tasks.c: 1585:                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == ((void*)0) ) )
[e :U 1049 ]
[e $ ! || == _pxStateList -> &U _xTasksWaitingTermination `*CS931 == _pxStateList -> -> -> 0 `i `*v `*CS931 1057  ]
"1586
[; ;Source/FreeRTOS/tasks.c: 1586:                 {
{
"1590
[; ;Source/FreeRTOS/tasks.c: 1590:                     eReturn = eDeleted;
[e = _eReturn . `E7129 4 ]
"1591
[; ;Source/FreeRTOS/tasks.c: 1591:                 }
}
[e $U 1058  ]
"1594
[; ;Source/FreeRTOS/tasks.c: 1594:             else
[e :U 1057 ]
"1595
[; ;Source/FreeRTOS/tasks.c: 1595:             {
{
"1598
[; ;Source/FreeRTOS/tasks.c: 1598:                 eReturn = eReady;
[e = _eReturn . `E7129 1 ]
"1599
[; ;Source/FreeRTOS/tasks.c: 1599:             }
}
[e :U 1058 ]
[e :U 1056 ]
[e :U 1048 ]
"1600
[; ;Source/FreeRTOS/tasks.c: 1600:         }
}
[e :U 1045 ]
"1602
[; ;Source/FreeRTOS/tasks.c: 1602:         return eReturn;
[e ) _eReturn ]
[e $UE 1042  ]
"1603
[; ;Source/FreeRTOS/tasks.c: 1603:     }
[e :UE 1042 ]
}
"1610
[; ;Source/FreeRTOS/tasks.c: 1610:     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
[v _uxTaskPriorityGet `(uc ~T0 @X0 1 ef1`C*S936 ]
"1611
[; ;Source/FreeRTOS/tasks.c: 1611:     {
{
[e :U _uxTaskPriorityGet ]
[v F7629 `*S936 ~T0 @X0 1 t ]
"1610
[; ;Source/FreeRTOS/tasks.c: 1610:     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
[v _xTask `C*S936 ~T0 @X0 1 r1 ]
"1611
[; ;Source/FreeRTOS/tasks.c: 1611:     {
[f ]
"1612
[; ;Source/FreeRTOS/tasks.c: 1612:         TCB_t const * pxTCB;
[v _pxTCB `*CS936 ~T0 @X0 1 a ]
"1613
[; ;Source/FreeRTOS/tasks.c: 1613:         UBaseType_t uxReturn;
[v _uxReturn `uc ~T0 @X0 1 a ]
"1615
[; ;Source/FreeRTOS/tasks.c: 1615:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1616
[; ;Source/FreeRTOS/tasks.c: 1616:         {
{
"1619
[; ;Source/FreeRTOS/tasks.c: 1619:             pxTCB = ( ( ( xTask ) == ((void*)0) ) ? pxCurrentTCB : ( xTask ) );
[e = _pxTCB -> ? == _xTask -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTask `*CS936 ]
"1620
[; ;Source/FreeRTOS/tasks.c: 1620:             uxReturn = pxTCB->uxPriority;
[e = _uxReturn . *U _pxTCB 3 ]
"1621
[; ;Source/FreeRTOS/tasks.c: 1621:         }
}
"1622
[; ;Source/FreeRTOS/tasks.c: 1622:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1060  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1060 ]
"1624
[; ;Source/FreeRTOS/tasks.c: 1624:         return uxReturn;
[e ) _uxReturn ]
[e $UE 1059  ]
"1625
[; ;Source/FreeRTOS/tasks.c: 1625:     }
[e :UE 1059 ]
}
"1632
[; ;Source/FreeRTOS/tasks.c: 1632:     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
[v _uxTaskPriorityGetFromISR `(uc ~T0 @X0 1 ef1`C*S936 ]
"1633
[; ;Source/FreeRTOS/tasks.c: 1633:     {
{
[e :U _uxTaskPriorityGetFromISR ]
[v F7635 `*S936 ~T0 @X0 1 t ]
"1632
[; ;Source/FreeRTOS/tasks.c: 1632:     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
[v _xTask `C*S936 ~T0 @X0 1 r1 ]
"1633
[; ;Source/FreeRTOS/tasks.c: 1633:     {
[f ]
"1634
[; ;Source/FreeRTOS/tasks.c: 1634:         TCB_t const * pxTCB;
[v _pxTCB `*CS936 ~T0 @X0 1 a ]
"1635
[; ;Source/FreeRTOS/tasks.c: 1635:         UBaseType_t uxReturn, uxSavedInterruptState;
[v _uxReturn `uc ~T0 @X0 1 a ]
[v _uxSavedInterruptState `uc ~T0 @X0 1 a ]
"1655
[; ;Source/FreeRTOS/tasks.c: 1655:         uxSavedInterruptState = 0;
[e = _uxSavedInterruptState -> -> 0 `i `uc ]
"1656
[; ;Source/FreeRTOS/tasks.c: 1656:         {
{
"1659
[; ;Source/FreeRTOS/tasks.c: 1659:             pxTCB = ( ( ( xTask ) == ((void*)0) ) ? pxCurrentTCB : ( xTask ) );
[e = _pxTCB -> ? == _xTask -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTask `*CS936 ]
"1660
[; ;Source/FreeRTOS/tasks.c: 1660:             uxReturn = pxTCB->uxPriority;
[e = _uxReturn . *U _pxTCB 3 ]
"1661
[; ;Source/FreeRTOS/tasks.c: 1661:         }
}
"1662
[; ;Source/FreeRTOS/tasks.c: 1662:         ( void ) ( uxSavedInterruptState );
[e _uxSavedInterruptState ]
"1664
[; ;Source/FreeRTOS/tasks.c: 1664:         return uxReturn;
[e ) _uxReturn ]
[e $UE 1061  ]
"1665
[; ;Source/FreeRTOS/tasks.c: 1665:     }
[e :UE 1061 ]
}
"1672
[; ;Source/FreeRTOS/tasks.c: 1672:     void vTaskPrioritySet( TaskHandle_t xTask,
[v _vTaskPrioritySet `(v ~T0 @X0 1 ef2`*S936`uc ]
"1674
[; ;Source/FreeRTOS/tasks.c: 1674:     {
{
[e :U _vTaskPrioritySet ]
"1672
[; ;Source/FreeRTOS/tasks.c: 1672:     void vTaskPrioritySet( TaskHandle_t xTask,
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"1673
[; ;Source/FreeRTOS/tasks.c: 1673:                            UBaseType_t uxNewPriority )
[v _uxNewPriority `uc ~T0 @X0 1 r2 ]
"1674
[; ;Source/FreeRTOS/tasks.c: 1674:     {
[f ]
"1675
[; ;Source/FreeRTOS/tasks.c: 1675:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"1676
[; ;Source/FreeRTOS/tasks.c: 1676:         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
[v _uxCurrentBasePriority `uc ~T0 @X0 1 a ]
[v _uxPriorityUsedOnEntry `uc ~T0 @X0 1 a ]
"1677
[; ;Source/FreeRTOS/tasks.c: 1677:         BaseType_t xYieldRequired = ( ( BaseType_t ) 0 );
[v _xYieldRequired `c ~T0 @X0 1 a ]
[e = _xYieldRequired -> -> 0 `i `c ]
"1679
[; ;Source/FreeRTOS/tasks.c: 1679:         if( ( uxNewPriority < ( 3 ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1679 );
[e $ ! == -> < -> _uxNewPriority `i -> 3 `i `i -> 0 `i 1063  ]
[e ( _Xprintf , (. :s 72C -> 1679 `i ]
[e :U 1063 ]
"1682
[; ;Source/FreeRTOS/tasks.c: 1682:         if( uxNewPriority >= ( UBaseType_t ) ( 3 ) )
[e $ ! >= -> _uxNewPriority `i -> -> -> 3 `i `uc `i 1064  ]
"1683
[; ;Source/FreeRTOS/tasks.c: 1683:         {
{
"1684
[; ;Source/FreeRTOS/tasks.c: 1684:             uxNewPriority = ( UBaseType_t ) ( 3 ) - ( UBaseType_t ) 1U;
[e = _uxNewPriority -> - -> -> -> 3 `i `uc `i -> -> -> 1 `ui `uc `i `uc ]
"1685
[; ;Source/FreeRTOS/tasks.c: 1685:         }
}
[e $U 1065  ]
"1686
[; ;Source/FreeRTOS/tasks.c: 1686:         else
[e :U 1064 ]
"1687
[; ;Source/FreeRTOS/tasks.c: 1687:         {
{
"1689
[; ;Source/FreeRTOS/tasks.c: 1689:         }
}
[e :U 1065 ]
"1691
[; ;Source/FreeRTOS/tasks.c: 1691:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1692
[; ;Source/FreeRTOS/tasks.c: 1692:         {
{
"1695
[; ;Source/FreeRTOS/tasks.c: 1695:             pxTCB = ( ( ( xTask ) == ((void*)0) ) ? pxCurrentTCB : ( xTask ) );
[e = _pxTCB ? == _xTask -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTask ]
"1704
[; ;Source/FreeRTOS/tasks.c: 1704:             {
{
"1705
[; ;Source/FreeRTOS/tasks.c: 1705:                 uxCurrentBasePriority = pxTCB->uxPriority;
[e = _uxCurrentBasePriority . *U _pxTCB 3 ]
"1706
[; ;Source/FreeRTOS/tasks.c: 1706:             }
}
"1709
[; ;Source/FreeRTOS/tasks.c: 1709:             if( uxCurrentBasePriority != uxNewPriority )
[e $ ! != -> _uxCurrentBasePriority `i -> _uxNewPriority `i 1066  ]
"1710
[; ;Source/FreeRTOS/tasks.c: 1710:             {
{
"1713
[; ;Source/FreeRTOS/tasks.c: 1713:                 if( uxNewPriority > uxCurrentBasePriority )
[e $ ! > -> _uxNewPriority `i -> _uxCurrentBasePriority `i 1067  ]
"1714
[; ;Source/FreeRTOS/tasks.c: 1714:                 {
{
"1715
[; ;Source/FreeRTOS/tasks.c: 1715:                     if( pxTCB != pxCurrentTCB )
[e $ ! != _pxTCB _pxCurrentTCB 1068  ]
"1716
[; ;Source/FreeRTOS/tasks.c: 1716:                     {
{
"1720
[; ;Source/FreeRTOS/tasks.c: 1720:                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
[e $ ! >= -> _uxNewPriority `i -> . *U _pxCurrentTCB 3 `i 1069  ]
"1721
[; ;Source/FreeRTOS/tasks.c: 1721:                         {
{
"1722
[; ;Source/FreeRTOS/tasks.c: 1722:                             xYieldRequired = ( ( BaseType_t ) 1 );
[e = _xYieldRequired -> -> 1 `i `c ]
"1723
[; ;Source/FreeRTOS/tasks.c: 1723:                         }
}
[e $U 1070  ]
"1724
[; ;Source/FreeRTOS/tasks.c: 1724:                         else
[e :U 1069 ]
"1725
[; ;Source/FreeRTOS/tasks.c: 1725:                         {
{
"1727
[; ;Source/FreeRTOS/tasks.c: 1727:                         }
}
[e :U 1070 ]
"1728
[; ;Source/FreeRTOS/tasks.c: 1728:                     }
}
[e $U 1071  ]
"1729
[; ;Source/FreeRTOS/tasks.c: 1729:                     else
[e :U 1068 ]
"1730
[; ;Source/FreeRTOS/tasks.c: 1730:                     {
{
"1734
[; ;Source/FreeRTOS/tasks.c: 1734:                     }
}
[e :U 1071 ]
"1735
[; ;Source/FreeRTOS/tasks.c: 1735:                 }
}
[e $U 1072  ]
"1736
[; ;Source/FreeRTOS/tasks.c: 1736:                 else if( pxTCB == pxCurrentTCB )
[e :U 1067 ]
[e $ ! == _pxTCB _pxCurrentTCB 1073  ]
"1737
[; ;Source/FreeRTOS/tasks.c: 1737:                 {
{
"1741
[; ;Source/FreeRTOS/tasks.c: 1741:                     xYieldRequired = ( ( BaseType_t ) 1 );
[e = _xYieldRequired -> -> 1 `i `c ]
"1742
[; ;Source/FreeRTOS/tasks.c: 1742:                 }
}
[e $U 1074  ]
"1743
[; ;Source/FreeRTOS/tasks.c: 1743:                 else
[e :U 1073 ]
"1744
[; ;Source/FreeRTOS/tasks.c: 1744:                 {
{
"1748
[; ;Source/FreeRTOS/tasks.c: 1748:                 }
}
[e :U 1074 ]
[e :U 1072 ]
"1753
[; ;Source/FreeRTOS/tasks.c: 1753:                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
[e = _uxPriorityUsedOnEntry . *U _pxTCB 3 ]
"1772
[; ;Source/FreeRTOS/tasks.c: 1772:                 {
{
"1773
[; ;Source/FreeRTOS/tasks.c: 1773:                     pxTCB->uxPriority = uxNewPriority;
[e = . *U _pxTCB 3 _uxNewPriority ]
"1774
[; ;Source/FreeRTOS/tasks.c: 1774:                 }
}
"1779
[; ;Source/FreeRTOS/tasks.c: 1779:                 if( ( ( ( &( pxTCB->xEventListItem ) )->xItemValue ) & 0x8000U ) == 0UL )
[e $ ! == -> & -> . *U &U . *U _pxTCB 2 0 `ui -> 32768 `ui `ul -> 0 `ul 1075  ]
"1780
[; ;Source/FreeRTOS/tasks.c: 1780:                 {
{
"1781
[; ;Source/FreeRTOS/tasks.c: 1781:                     ( ( &( pxTCB->xEventListItem ) )->xItemValue = ( ( ( TickType_t ) ( 3 ) - ( TickType_t ) uxNewPriority ) ) );
[e = . *U &U . *U _pxTCB 2 0 -> - -> -> -> 3 `i `us `ui -> -> _uxNewPriority `us `ui `us ]
"1782
[; ;Source/FreeRTOS/tasks.c: 1782:                 }
}
[e $U 1076  ]
"1783
[; ;Source/FreeRTOS/tasks.c: 1783:                 else
[e :U 1075 ]
"1784
[; ;Source/FreeRTOS/tasks.c: 1784:                 {
{
"1786
[; ;Source/FreeRTOS/tasks.c: 1786:                 }
}
[e :U 1076 ]
"1792
[; ;Source/FreeRTOS/tasks.c: 1792:                 if( ( ( ( &( pxTCB->xStateListItem ) )->pvContainer == ( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ) ) ) ? ( ( ( BaseType_t ) 1 ) ) : ( ( ( BaseType_t ) 0 ) ) ) != ( ( BaseType_t ) 0 ) )
[e $ ! != ? == . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> _uxPriorityUsedOnEntry `ux -> -> # *U &U _pxReadyTasksLists `ui `ux : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1077  ]
"1793
[; ;Source/FreeRTOS/tasks.c: 1793:                 {
{
"1797
[; ;Source/FreeRTOS/tasks.c: 1797:                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
[e $ ! == -> ( _uxListRemove (1 &U . *U _pxTCB 1 `i -> -> -> 0 `i `uc `i 1078  ]
"1798
[; ;Source/FreeRTOS/tasks.c: 1798:                     {
{
"1803
[; ;Source/FreeRTOS/tasks.c: 1803:                     }
}
[e $U 1079  ]
"1804
[; ;Source/FreeRTOS/tasks.c: 1804:                     else
[e :U 1078 ]
"1805
[; ;Source/FreeRTOS/tasks.c: 1805:                     {
{
"1807
[; ;Source/FreeRTOS/tasks.c: 1807:                     }
}
[e :U 1079 ]
"1809
[; ;Source/FreeRTOS/tasks.c: 1809:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1080  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1080 ]
}
{
[v F7647 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"1810
[; ;Source/FreeRTOS/tasks.c: 1810:                 }
}
[e $U 1081  ]
"1811
[; ;Source/FreeRTOS/tasks.c: 1811:                 else
[e :U 1077 ]
"1812
[; ;Source/FreeRTOS/tasks.c: 1812:                 {
{
"1814
[; ;Source/FreeRTOS/tasks.c: 1814:                 }
}
[e :U 1081 ]
"1816
[; ;Source/FreeRTOS/tasks.c: 1816:                 if( xYieldRequired != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xYieldRequired `i -> -> -> 0 `i `c `i 1082  ]
"1817
[; ;Source/FreeRTOS/tasks.c: 1817:                 {
{
"1818
[; ;Source/FreeRTOS/tasks.c: 1818:                     vPortYield();
[e ( _vPortYield ..  ]
"1819
[; ;Source/FreeRTOS/tasks.c: 1819:                 }
}
[e $U 1083  ]
"1820
[; ;Source/FreeRTOS/tasks.c: 1820:                 else
[e :U 1082 ]
"1821
[; ;Source/FreeRTOS/tasks.c: 1821:                 {
{
"1823
[; ;Source/FreeRTOS/tasks.c: 1823:                 }
}
[e :U 1083 ]
"1827
[; ;Source/FreeRTOS/tasks.c: 1827:                 ( void ) uxPriorityUsedOnEntry;
[e _uxPriorityUsedOnEntry ]
"1828
[; ;Source/FreeRTOS/tasks.c: 1828:             }
}
[e :U 1066 ]
"1829
[; ;Source/FreeRTOS/tasks.c: 1829:         }
}
"1830
[; ;Source/FreeRTOS/tasks.c: 1830:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1084  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1084 ]
"1831
[; ;Source/FreeRTOS/tasks.c: 1831:     }
[e :UE 1062 ]
}
"1838
[; ;Source/FreeRTOS/tasks.c: 1838:     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
[v _vTaskSuspend `(v ~T0 @X0 1 ef1`*S936 ]
"1839
[; ;Source/FreeRTOS/tasks.c: 1839:     {
{
[e :U _vTaskSuspend ]
"1838
[; ;Source/FreeRTOS/tasks.c: 1838:     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
[v _xTaskToSuspend `*S936 ~T0 @X0 1 r1 ]
"1839
[; ;Source/FreeRTOS/tasks.c: 1839:     {
[f ]
"1840
[; ;Source/FreeRTOS/tasks.c: 1840:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"1842
[; ;Source/FreeRTOS/tasks.c: 1842:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1843
[; ;Source/FreeRTOS/tasks.c: 1843:         {
{
"1846
[; ;Source/FreeRTOS/tasks.c: 1846:             pxTCB = ( ( ( xTaskToSuspend ) == ((void*)0) ) ? pxCurrentTCB : ( xTaskToSuspend ) );
[e = _pxTCB ? == _xTaskToSuspend -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTaskToSuspend ]
"1852
[; ;Source/FreeRTOS/tasks.c: 1852:             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
[e $ ! == -> ( _uxListRemove (1 &U . *U _pxTCB 1 `i -> -> -> 0 `i `uc `i 1086  ]
"1853
[; ;Source/FreeRTOS/tasks.c: 1853:             {
{
"1855
[; ;Source/FreeRTOS/tasks.c: 1855:             }
}
[e $U 1087  ]
"1856
[; ;Source/FreeRTOS/tasks.c: 1856:             else
[e :U 1086 ]
"1857
[; ;Source/FreeRTOS/tasks.c: 1857:             {
{
"1859
[; ;Source/FreeRTOS/tasks.c: 1859:             }
}
[e :U 1087 ]
"1862
[; ;Source/FreeRTOS/tasks.c: 1862:             if( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) != ((void*)0) )
[e $ ! != . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 1088  ]
"1863
[; ;Source/FreeRTOS/tasks.c: 1863:             {
{
"1864
[; ;Source/FreeRTOS/tasks.c: 1864:                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
[e ( _uxListRemove (1 &U . *U _pxTCB 2 ]
"1865
[; ;Source/FreeRTOS/tasks.c: 1865:             }
}
[e $U 1089  ]
"1866
[; ;Source/FreeRTOS/tasks.c: 1866:             else
[e :U 1088 ]
"1867
[; ;Source/FreeRTOS/tasks.c: 1867:             {
{
"1869
[; ;Source/FreeRTOS/tasks.c: 1869:             }
}
[e :U 1089 ]
"1871
[; ;Source/FreeRTOS/tasks.c: 1871:             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
[e ( _vListInsertEnd (2 , &U _xSuspendedTaskList &U . *U _pxTCB 1 ]
"1874
[; ;Source/FreeRTOS/tasks.c: 1874:             {
{
"1875
[; ;Source/FreeRTOS/tasks.c: 1875:                 BaseType_t x;
[v _x `c ~T0 @X0 1 a ]
"1877
[; ;Source/FreeRTOS/tasks.c: 1877:                 for( x = 0; x < 1; x++ )
{
[e = _x -> -> 0 `i `c ]
[e $ < -> _x `i -> 1 `i 1090  ]
[e $U 1091  ]
[e :U 1090 ]
"1878
[; ;Source/FreeRTOS/tasks.c: 1878:                 {
{
"1879
[; ;Source/FreeRTOS/tasks.c: 1879:                     if( pxTCB->ucNotifyState[ x ] == ( ( uint8_t ) 1 ) )
[e $ ! == -> *U + &U . *U _pxTCB 10 * -> -> _x `uc `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux `i -> -> -> 1 `i `uc `i 1093  ]
"1880
[; ;Source/FreeRTOS/tasks.c: 1880:                     {
{
"1883
[; ;Source/FreeRTOS/tasks.c: 1883:                         pxTCB->ucNotifyState[ x ] = ( ( uint8_t ) 0 );
[e = *U + &U . *U _pxTCB 10 * -> -> _x `uc `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux -> -> 0 `i `uc ]
"1884
[; ;Source/FreeRTOS/tasks.c: 1884:                     }
}
[e :U 1093 ]
"1885
[; ;Source/FreeRTOS/tasks.c: 1885:                 }
}
[e ++ _x -> -> 1 `i `c ]
[e $ < -> _x `i -> 1 `i 1090  ]
[e :U 1091 ]
}
"1886
[; ;Source/FreeRTOS/tasks.c: 1886:             }
}
"1888
[; ;Source/FreeRTOS/tasks.c: 1888:         }
}
"1889
[; ;Source/FreeRTOS/tasks.c: 1889:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1094  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1094 ]
"1891
[; ;Source/FreeRTOS/tasks.c: 1891:         if( xSchedulerRunning != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xSchedulerRunning `i -> -> -> 0 `i `c `i 1095  ]
"1892
[; ;Source/FreeRTOS/tasks.c: 1892:         {
{
"1895
[; ;Source/FreeRTOS/tasks.c: 1895:             POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"1896
[; ;Source/FreeRTOS/tasks.c: 1896:             {
{
"1897
[; ;Source/FreeRTOS/tasks.c: 1897:                 prvResetNextTaskUnblockTime();
[e ( _prvResetNextTaskUnblockTime ..  ]
"1898
[; ;Source/FreeRTOS/tasks.c: 1898:             }
}
"1899
[; ;Source/FreeRTOS/tasks.c: 1899:             __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1096  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1096 ]
"1900
[; ;Source/FreeRTOS/tasks.c: 1900:         }
}
[e $U 1097  ]
"1901
[; ;Source/FreeRTOS/tasks.c: 1901:         else
[e :U 1095 ]
"1902
[; ;Source/FreeRTOS/tasks.c: 1902:         {
{
"1904
[; ;Source/FreeRTOS/tasks.c: 1904:         }
}
[e :U 1097 ]
"1906
[; ;Source/FreeRTOS/tasks.c: 1906:         if( pxTCB == pxCurrentTCB )
[e $ ! == _pxTCB _pxCurrentTCB 1098  ]
"1907
[; ;Source/FreeRTOS/tasks.c: 1907:         {
{
"1908
[; ;Source/FreeRTOS/tasks.c: 1908:             if( xSchedulerRunning != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xSchedulerRunning `i -> -> -> 0 `i `c `i 1099  ]
"1909
[; ;Source/FreeRTOS/tasks.c: 1909:             {
{
"1911
[; ;Source/FreeRTOS/tasks.c: 1911:                 if( ( uxSchedulerSuspended == 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1911 );
[e $ ! == -> == -> _uxSchedulerSuspended `i -> 0 `i `i -> 0 `i 1100  ]
[e ( _Xprintf , (. :s 73C -> 1911 `i ]
[e :U 1100 ]
"1912
[; ;Source/FreeRTOS/tasks.c: 1912:                 vPortYield();
[e ( _vPortYield ..  ]
"1913
[; ;Source/FreeRTOS/tasks.c: 1913:             }
}
[e $U 1101  ]
"1914
[; ;Source/FreeRTOS/tasks.c: 1914:             else
[e :U 1099 ]
"1915
[; ;Source/FreeRTOS/tasks.c: 1915:             {
{
"1919
[; ;Source/FreeRTOS/tasks.c: 1919:                 if( ( ( &xSuspendedTaskList )->uxNumberOfItems ) == uxCurrentNumberOfTasks )
[e $ ! == -> . *U &U _xSuspendedTaskList 0 `i -> _uxCurrentNumberOfTasks `i 1102  ]
"1920
[; ;Source/FreeRTOS/tasks.c: 1920:                 {
{
[v F7652 `*S936 ~T0 @X0 1 t ]
"1925
[; ;Source/FreeRTOS/tasks.c: 1925:                     pxCurrentTCB = ((void*)0);
[e = _pxCurrentTCB -> -> -> 0 `i `*v `V*S936 ]
"1926
[; ;Source/FreeRTOS/tasks.c: 1926:                 }
}
[e $U 1103  ]
"1927
[; ;Source/FreeRTOS/tasks.c: 1927:                 else
[e :U 1102 ]
"1928
[; ;Source/FreeRTOS/tasks.c: 1928:                 {
{
"1929
[; ;Source/FreeRTOS/tasks.c: 1929:                     vTaskSwitchContext();
[e ( _vTaskSwitchContext ..  ]
"1930
[; ;Source/FreeRTOS/tasks.c: 1930:                 }
}
[e :U 1103 ]
"1931
[; ;Source/FreeRTOS/tasks.c: 1931:             }
}
[e :U 1101 ]
"1932
[; ;Source/FreeRTOS/tasks.c: 1932:         }
}
[e $U 1104  ]
"1933
[; ;Source/FreeRTOS/tasks.c: 1933:         else
[e :U 1098 ]
"1934
[; ;Source/FreeRTOS/tasks.c: 1934:         {
{
"1936
[; ;Source/FreeRTOS/tasks.c: 1936:         }
}
[e :U 1104 ]
"1937
[; ;Source/FreeRTOS/tasks.c: 1937:     }
[e :UE 1085 ]
}
"1944
[; ;Source/FreeRTOS/tasks.c: 1944:     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
[v _prvTaskIsTaskSuspended `(c ~T0 @X0 1 sf1`C*S936 ]
"1945
[; ;Source/FreeRTOS/tasks.c: 1945:     {
{
[e :U _prvTaskIsTaskSuspended ]
[v F7656 `*S936 ~T0 @X0 1 t ]
"1944
[; ;Source/FreeRTOS/tasks.c: 1944:     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
[v _xTask `C*S936 ~T0 @X0 1 r1 ]
"1945
[; ;Source/FreeRTOS/tasks.c: 1945:     {
[f ]
"1946
[; ;Source/FreeRTOS/tasks.c: 1946:         BaseType_t xReturn = ( ( BaseType_t ) 0 );
[v _xReturn `c ~T0 @X0 1 a ]
[e = _xReturn -> -> 0 `i `c ]
[v F7659 `*CS936 ~T0 @X0 1 t ]
"1947
[; ;Source/FreeRTOS/tasks.c: 1947:         const TCB_t * const pxTCB = xTask;
[v _pxTCB `C*CS936 ~T0 @X0 1 a ]
[e = _pxTCB -> _xTask `*CS936 ]
"1953
[; ;Source/FreeRTOS/tasks.c: 1953:         if( ( xTask ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1953 );
[e $ ! == _xTask -> -> 0 `i `*S936 1106  ]
[e ( _Xprintf , (. :s 74C -> 1953 `i ]
[e :U 1106 ]
"1956
[; ;Source/FreeRTOS/tasks.c: 1956:         if( ( ( ( &( pxTCB->xStateListItem ) )->pvContainer == ( &xSuspendedTaskList ) ) ? ( ( ( BaseType_t ) 1 ) ) : ( ( ( BaseType_t ) 0 ) ) ) != ( ( BaseType_t ) 0 ) )
[e $ ! != ? == . *U &U . *U _pxTCB 1 4 &U _xSuspendedTaskList : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1107  ]
"1957
[; ;Source/FreeRTOS/tasks.c: 1957:         {
{
"1959
[; ;Source/FreeRTOS/tasks.c: 1959:             if( ( ( ( &( pxTCB->xEventListItem ) )->pvContainer == ( &xPendingReadyList ) ) ? ( ( ( BaseType_t ) 1 ) ) : ( ( ( BaseType_t ) 0 ) ) ) == ( ( BaseType_t ) 0 ) )
[e $ ! == ? == . *U &U . *U _pxTCB 2 4 &U _xPendingReadyList : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1108  ]
"1960
[; ;Source/FreeRTOS/tasks.c: 1960:             {
{
"1963
[; ;Source/FreeRTOS/tasks.c: 1963:                 if( ( ( ( &( pxTCB->xEventListItem ) )->pvContainer == ( ((void*)0) ) ) ? ( ( ( BaseType_t ) 1 ) ) : ( ( ( BaseType_t ) 0 ) ) ) != ( ( BaseType_t ) 0 ) )
[e $ ! != ? == . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1109  ]
"1964
[; ;Source/FreeRTOS/tasks.c: 1964:                 {
{
"1965
[; ;Source/FreeRTOS/tasks.c: 1965:                     xReturn = ( ( BaseType_t ) 1 );
[e = _xReturn -> -> 1 `i `c ]
"1966
[; ;Source/FreeRTOS/tasks.c: 1966:                 }
}
[e $U 1110  ]
"1967
[; ;Source/FreeRTOS/tasks.c: 1967:                 else
[e :U 1109 ]
"1968
[; ;Source/FreeRTOS/tasks.c: 1968:                 {
{
"1970
[; ;Source/FreeRTOS/tasks.c: 1970:                 }
}
[e :U 1110 ]
"1971
[; ;Source/FreeRTOS/tasks.c: 1971:             }
}
[e $U 1111  ]
"1972
[; ;Source/FreeRTOS/tasks.c: 1972:             else
[e :U 1108 ]
"1973
[; ;Source/FreeRTOS/tasks.c: 1973:             {
{
"1975
[; ;Source/FreeRTOS/tasks.c: 1975:             }
}
[e :U 1111 ]
"1976
[; ;Source/FreeRTOS/tasks.c: 1976:         }
}
[e $U 1112  ]
"1977
[; ;Source/FreeRTOS/tasks.c: 1977:         else
[e :U 1107 ]
"1978
[; ;Source/FreeRTOS/tasks.c: 1978:         {
{
"1980
[; ;Source/FreeRTOS/tasks.c: 1980:         }
}
[e :U 1112 ]
"1982
[; ;Source/FreeRTOS/tasks.c: 1982:         return xReturn;
[e ) _xReturn ]
[e $UE 1105  ]
"1983
[; ;Source/FreeRTOS/tasks.c: 1983:     }
[e :UE 1105 ]
}
"1990
[; ;Source/FreeRTOS/tasks.c: 1990:     void vTaskResume( TaskHandle_t xTaskToResume )
[v _vTaskResume `(v ~T0 @X0 1 ef1`*S936 ]
"1991
[; ;Source/FreeRTOS/tasks.c: 1991:     {
{
[e :U _vTaskResume ]
"1990
[; ;Source/FreeRTOS/tasks.c: 1990:     void vTaskResume( TaskHandle_t xTaskToResume )
[v _xTaskToResume `*S936 ~T0 @X0 1 r1 ]
"1991
[; ;Source/FreeRTOS/tasks.c: 1991:     {
[f ]
[v F7666 `*S936 ~T0 @X0 1 t ]
"1992
[; ;Source/FreeRTOS/tasks.c: 1992:         TCB_t * const pxTCB = xTaskToResume;
[v _pxTCB `C*S936 ~T0 @X0 1 a ]
[e = _pxTCB _xTaskToResume ]
"1995
[; ;Source/FreeRTOS/tasks.c: 1995:         if( ( xTaskToResume ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 1995 );
[e $ ! == _xTaskToResume -> -> 0 `i `*S936 1114  ]
[e ( _Xprintf , (. :s 75C -> 1995 `i ]
[e :U 1114 ]
"1999
[; ;Source/FreeRTOS/tasks.c: 1999:         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != ((void*)0) ) )
[e $ ! && != _pxTCB _pxCurrentTCB != _pxTCB -> -> -> 0 `i `*v `*S936 1115  ]
"2000
[; ;Source/FreeRTOS/tasks.c: 2000:         {
{
"2001
[; ;Source/FreeRTOS/tasks.c: 2001:             POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"2002
[; ;Source/FreeRTOS/tasks.c: 2002:             {
{
"2003
[; ;Source/FreeRTOS/tasks.c: 2003:                 if( prvTaskIsTaskSuspended( pxTCB ) != ( ( BaseType_t ) 0 ) )
[e $ ! != -> ( _prvTaskIsTaskSuspended (1 _pxTCB `i -> -> -> 0 `i `c `i 1116  ]
"2004
[; ;Source/FreeRTOS/tasks.c: 2004:                 {
{
"2009
[; ;Source/FreeRTOS/tasks.c: 2009:                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
[e ( _uxListRemove (1 &U . *U _pxTCB 1 ]
"2010
[; ;Source/FreeRTOS/tasks.c: 2010:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1117  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1117 ]
}
{
[v F7668 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"2013
[; ;Source/FreeRTOS/tasks.c: 2013:                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
[e $ ! >= -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1118  ]
"2014
[; ;Source/FreeRTOS/tasks.c: 2014:                     {
{
"2018
[; ;Source/FreeRTOS/tasks.c: 2018:                         vPortYield();
[e ( _vPortYield ..  ]
"2019
[; ;Source/FreeRTOS/tasks.c: 2019:                     }
}
[e $U 1119  ]
"2020
[; ;Source/FreeRTOS/tasks.c: 2020:                     else
[e :U 1118 ]
"2021
[; ;Source/FreeRTOS/tasks.c: 2021:                     {
{
"2023
[; ;Source/FreeRTOS/tasks.c: 2023:                     }
}
[e :U 1119 ]
"2024
[; ;Source/FreeRTOS/tasks.c: 2024:                 }
}
[e $U 1120  ]
"2025
[; ;Source/FreeRTOS/tasks.c: 2025:                 else
[e :U 1116 ]
"2026
[; ;Source/FreeRTOS/tasks.c: 2026:                 {
{
"2028
[; ;Source/FreeRTOS/tasks.c: 2028:                 }
}
[e :U 1120 ]
"2029
[; ;Source/FreeRTOS/tasks.c: 2029:             }
}
"2030
[; ;Source/FreeRTOS/tasks.c: 2030:             __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1121  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1121 ]
"2031
[; ;Source/FreeRTOS/tasks.c: 2031:         }
}
[e $U 1122  ]
"2032
[; ;Source/FreeRTOS/tasks.c: 2032:         else
[e :U 1115 ]
"2033
[; ;Source/FreeRTOS/tasks.c: 2033:         {
{
"2035
[; ;Source/FreeRTOS/tasks.c: 2035:         }
}
[e :U 1122 ]
"2036
[; ;Source/FreeRTOS/tasks.c: 2036:     }
[e :UE 1113 ]
}
"2044
[; ;Source/FreeRTOS/tasks.c: 2044:     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
[v _xTaskResumeFromISR `(c ~T0 @X0 1 ef1`*S936 ]
"2045
[; ;Source/FreeRTOS/tasks.c: 2045:     {
{
[e :U _xTaskResumeFromISR ]
"2044
[; ;Source/FreeRTOS/tasks.c: 2044:     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
[v _xTaskToResume `*S936 ~T0 @X0 1 r1 ]
"2045
[; ;Source/FreeRTOS/tasks.c: 2045:     {
[f ]
"2046
[; ;Source/FreeRTOS/tasks.c: 2046:         BaseType_t xYieldRequired = ( ( BaseType_t ) 0 );
[v _xYieldRequired `c ~T0 @X0 1 a ]
[e = _xYieldRequired -> -> 0 `i `c ]
[v F7673 `*S936 ~T0 @X0 1 t ]
"2047
[; ;Source/FreeRTOS/tasks.c: 2047:         TCB_t * const pxTCB = xTaskToResume;
[v _pxTCB `C*S936 ~T0 @X0 1 a ]
[e = _pxTCB _xTaskToResume ]
"2048
[; ;Source/FreeRTOS/tasks.c: 2048:         UBaseType_t uxSavedInterruptStatus;
[v _uxSavedInterruptStatus `uc ~T0 @X0 1 a ]
"2050
[; ;Source/FreeRTOS/tasks.c: 2050:         if( ( xTaskToResume ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 2050 );
[e $ ! == _xTaskToResume -> -> 0 `i `*S936 1124  ]
[e ( _Xprintf , (. :s 76C -> 2050 `i ]
[e :U 1124 ]
"2070
[; ;Source/FreeRTOS/tasks.c: 2070:         uxSavedInterruptStatus = 0;
[e = _uxSavedInterruptStatus -> -> 0 `i `uc ]
"2071
[; ;Source/FreeRTOS/tasks.c: 2071:         {
{
"2072
[; ;Source/FreeRTOS/tasks.c: 2072:             if( prvTaskIsTaskSuspended( pxTCB ) != ( ( BaseType_t ) 0 ) )
[e $ ! != -> ( _prvTaskIsTaskSuspended (1 _pxTCB `i -> -> -> 0 `i `c `i 1125  ]
"2073
[; ;Source/FreeRTOS/tasks.c: 2073:             {
{
"2077
[; ;Source/FreeRTOS/tasks.c: 2077:                 if( uxSchedulerSuspended == ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! == -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1126  ]
"2078
[; ;Source/FreeRTOS/tasks.c: 2078:                 {
{
"2081
[; ;Source/FreeRTOS/tasks.c: 2081:                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
[e $ ! >= -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1127  ]
"2082
[; ;Source/FreeRTOS/tasks.c: 2082:                     {
{
"2083
[; ;Source/FreeRTOS/tasks.c: 2083:                         xYieldRequired = ( ( BaseType_t ) 1 );
[e = _xYieldRequired -> -> 1 `i `c ]
"2088
[; ;Source/FreeRTOS/tasks.c: 2088:                         xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"2089
[; ;Source/FreeRTOS/tasks.c: 2089:                     }
}
[e $U 1128  ]
"2090
[; ;Source/FreeRTOS/tasks.c: 2090:                     else
[e :U 1127 ]
"2091
[; ;Source/FreeRTOS/tasks.c: 2091:                     {
{
"2093
[; ;Source/FreeRTOS/tasks.c: 2093:                     }
}
[e :U 1128 ]
"2095
[; ;Source/FreeRTOS/tasks.c: 2095:                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
[e ( _uxListRemove (1 &U . *U _pxTCB 1 ]
"2096
[; ;Source/FreeRTOS/tasks.c: 2096:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1129  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1129 ]
}
{
[v F7676 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"2097
[; ;Source/FreeRTOS/tasks.c: 2097:                 }
}
[e $U 1130  ]
"2098
[; ;Source/FreeRTOS/tasks.c: 2098:                 else
[e :U 1126 ]
"2099
[; ;Source/FreeRTOS/tasks.c: 2099:                 {
{
"2103
[; ;Source/FreeRTOS/tasks.c: 2103:                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
[e ( _vListInsertEnd (2 , &U _xPendingReadyList &U . *U _pxTCB 2 ]
"2104
[; ;Source/FreeRTOS/tasks.c: 2104:                 }
}
[e :U 1130 ]
"2105
[; ;Source/FreeRTOS/tasks.c: 2105:             }
}
[e $U 1131  ]
"2106
[; ;Source/FreeRTOS/tasks.c: 2106:             else
[e :U 1125 ]
"2107
[; ;Source/FreeRTOS/tasks.c: 2107:             {
{
"2109
[; ;Source/FreeRTOS/tasks.c: 2109:             }
}
[e :U 1131 ]
"2110
[; ;Source/FreeRTOS/tasks.c: 2110:         }
}
"2111
[; ;Source/FreeRTOS/tasks.c: 2111:         ( void ) ( uxSavedInterruptStatus );
[e _uxSavedInterruptStatus ]
"2113
[; ;Source/FreeRTOS/tasks.c: 2113:         return xYieldRequired;
[e ) _xYieldRequired ]
[e $UE 1123  ]
"2114
[; ;Source/FreeRTOS/tasks.c: 2114:     }
[e :UE 1123 ]
}
"2119
[; ;Source/FreeRTOS/tasks.c: 2119: void vTaskStartScheduler( void )
[v _vTaskStartScheduler `(v ~T0 @X0 1 ef ]
"2120
[; ;Source/FreeRTOS/tasks.c: 2120: {
{
[e :U _vTaskStartScheduler ]
[f ]
"2121
[; ;Source/FreeRTOS/tasks.c: 2121:     BaseType_t xReturn;
[v _xReturn `c ~T0 @X0 1 a ]
"2123
[; ;Source/FreeRTOS/tasks.c: 2123:     Xprintf("vTaskStartScheduler(001)\r\n");
[e ( _Xprintf :s 77C ]
"2152
[; ;Source/FreeRTOS/tasks.c: 2152:     {
{
"2154
[; ;Source/FreeRTOS/tasks.c: 2154:         Xprintf("vTaskStartScheduler(002)\r\n");
[e ( _Xprintf :s 78C ]
"2155
[; ;Source/FreeRTOS/tasks.c: 2155:         xReturn = xTaskCreate( prvIdleTask,
[e = _xReturn ( _xTaskCreate (4 , , , , , &U _prvIdleTask :s 79C -> -> 128 `i `us -> -> 0 `i `*v -> -> 0 `i `uc &U _xIdleTaskHandle ]
"2161
[; ;Source/FreeRTOS/tasks.c: 2161:         Xprintf("vTaskStartScheduler(002)xReturn=%d \r\n",xReturn);
[e ( _Xprintf , (. :s 80C -> _xReturn `i ]
"2162
[; ;Source/FreeRTOS/tasks.c: 2162:     }
}
"2178
[; ;Source/FreeRTOS/tasks.c: 2178:     if( xReturn == ( ( ( BaseType_t ) 1 ) ) )
[e $ ! == -> _xReturn `i -> -> -> 1 `i `c `i 1133  ]
"2179
[; ;Source/FreeRTOS/tasks.c: 2179:     {
{
"2180
[; ;Source/FreeRTOS/tasks.c: 2180:         Xprintf("vTaskStartScheduler(003) \r\n");
[e ( _Xprintf :s 81C ]
"2195
[; ;Source/FreeRTOS/tasks.c: 2195:         Xprintf("vTaskStartScheduler(005) \r\n");
[e ( _Xprintf :s 82C ]
"2196
[; ;Source/FreeRTOS/tasks.c: 2196:         INTCONbits.GIE_GIEH = 0;;
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"2207
[; ;Source/FreeRTOS/tasks.c: 2207:         xNextTaskUnblockTime = ( TickType_t ) 0xffff;
[e = _xNextTaskUnblockTime -> -> 65535 `ui `us ]
"2208
[; ;Source/FreeRTOS/tasks.c: 2208:         xSchedulerRunning = ( ( BaseType_t ) 1 );
[e = _xSchedulerRunning -> -> 1 `i `c ]
"2209
[; ;Source/FreeRTOS/tasks.c: 2209:         xTickCount = ( TickType_t ) 0;
[e = _xTickCount -> -> 0 `i `us ]
"2210
[; ;Source/FreeRTOS/tasks.c: 2210:         Xprintf("vTaskStartScheduler(007) \r\n");
[e ( _Xprintf :s 83C ]
"2225
[; ;Source/FreeRTOS/tasks.c: 2225:         Xprintf("vTaskStartScheduler(008) \r\n");
[e ( _Xprintf :s 84C ]
"2226
[; ;Source/FreeRTOS/tasks.c: 2226:         pxReadyTasksLists_info();
[e ( _pxReadyTasksLists_info ..  ]
"2228
[; ;Source/FreeRTOS/tasks.c: 2228:         xPortStartScheduler();
[e ( _xPortStartScheduler ..  ]
"2235
[; ;Source/FreeRTOS/tasks.c: 2235:     }
}
[e $U 1134  ]
"2236
[; ;Source/FreeRTOS/tasks.c: 2236:     else
[e :U 1133 ]
"2237
[; ;Source/FreeRTOS/tasks.c: 2237:     {
{
"2241
[; ;Source/FreeRTOS/tasks.c: 2241:         if( ( xReturn != ( -1 ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 2241 );
[e $ ! == -> != -> _xReturn `i -U -> 1 `i `i -> 0 `i 1135  ]
[e ( _Xprintf , (. :s 85C -> 2241 `i ]
[e :U 1135 ]
"2242
[; ;Source/FreeRTOS/tasks.c: 2242:     }
}
[e :U 1134 ]
"2244
[; ;Source/FreeRTOS/tasks.c: 2244:         Xprintf("vTaskStartScheduler(009) \r\n");
[e ( _Xprintf :s 86C ]
"2247
[; ;Source/FreeRTOS/tasks.c: 2247:     ( void ) xIdleTaskHandle;
[e _xIdleTaskHandle ]
"2251
[; ;Source/FreeRTOS/tasks.c: 2251:     ( void ) uxTopUsedPriority;
[e _uxTopUsedPriority ]
"2252
[; ;Source/FreeRTOS/tasks.c: 2252: }
[e :UE 1132 ]
}
"2255
[; ;Source/FreeRTOS/tasks.c: 2255: void vTaskEndScheduler( void )
[v _vTaskEndScheduler `(v ~T0 @X0 1 ef ]
"2256
[; ;Source/FreeRTOS/tasks.c: 2256: {
{
[e :U _vTaskEndScheduler ]
[f ]
"2260
[; ;Source/FreeRTOS/tasks.c: 2260:     INTCONbits.GIE_GIEH = 0;;
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"2261
[; ;Source/FreeRTOS/tasks.c: 2261:     xSchedulerRunning = ( ( BaseType_t ) 0 );
[e = _xSchedulerRunning -> -> 0 `i `c ]
"2262
[; ;Source/FreeRTOS/tasks.c: 2262:     vPortEndScheduler();
[e ( _vPortEndScheduler ..  ]
"2263
[; ;Source/FreeRTOS/tasks.c: 2263: }
[e :UE 1136 ]
}
"2266
[; ;Source/FreeRTOS/tasks.c: 2266: void vTaskSuspendAll( void )
[v _vTaskSuspendAll `(v ~T0 @X0 1 ef ]
"2267
[; ;Source/FreeRTOS/tasks.c: 2267: {
{
[e :U _vTaskSuspendAll ]
[f ]
"2279
[; ;Source/FreeRTOS/tasks.c: 2279:     ++uxSchedulerSuspended;
[e =+ _uxSchedulerSuspended -> -> 1 `i `Vuc ]
"2284
[; ;Source/FreeRTOS/tasks.c: 2284: }
[e :UE 1137 ]
}
"2350
[; ;Source/FreeRTOS/tasks.c: 2350: BaseType_t xTaskResumeAll( void )
[v _xTaskResumeAll `(c ~T0 @X0 1 ef ]
"2351
[; ;Source/FreeRTOS/tasks.c: 2351: {
{
[e :U _xTaskResumeAll ]
[f ]
"2352
[; ;Source/FreeRTOS/tasks.c: 2352:     TCB_t * pxTCB = ((void*)0);
[v _pxTCB `*S936 ~T0 @X0 1 a ]
[e = _pxTCB -> -> -> 0 `i `*v `*S936 ]
"2353
[; ;Source/FreeRTOS/tasks.c: 2353:     BaseType_t xAlreadyYielded = ( ( BaseType_t ) 0 );
[v _xAlreadyYielded `c ~T0 @X0 1 a ]
[e = _xAlreadyYielded -> -> 0 `i `c ]
"2357
[; ;Source/FreeRTOS/tasks.c: 2357:     if( ( uxSchedulerSuspended ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 2357 );
[e $ ! == -> _uxSchedulerSuspended `i -> 0 `i 1139  ]
[e ( _Xprintf , (. :s 87C -> 2357 `i ]
[e :U 1139 ]
"2364
[; ;Source/FreeRTOS/tasks.c: 2364:     POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"2365
[; ;Source/FreeRTOS/tasks.c: 2365:     {
{
"2366
[; ;Source/FreeRTOS/tasks.c: 2366:         --uxSchedulerSuspended;
[e =- _uxSchedulerSuspended -> -> 1 `i `Vuc ]
"2368
[; ;Source/FreeRTOS/tasks.c: 2368:         if( uxSchedulerSuspended == ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! == -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1140  ]
"2369
[; ;Source/FreeRTOS/tasks.c: 2369:         {
{
"2370
[; ;Source/FreeRTOS/tasks.c: 2370:             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
[e $ ! > -> _uxCurrentNumberOfTasks `i -> -> -> 0 `ui `uc `i 1141  ]
"2371
[; ;Source/FreeRTOS/tasks.c: 2371:             {
{
"2374
[; ;Source/FreeRTOS/tasks.c: 2374:                 while( ( ( ( &xPendingReadyList )->uxNumberOfItems == ( UBaseType_t ) 0 ) ? ( ( BaseType_t ) 1 ) : ( ( BaseType_t ) 0 ) ) == ( ( BaseType_t ) 0 ) )
[e $U 1142  ]
[e :U 1143 ]
"2375
[; ;Source/FreeRTOS/tasks.c: 2375:                 {
{
"2376
[; ;Source/FreeRTOS/tasks.c: 2376:                     pxTCB = ( ( &( ( ( &xPendingReadyList ) )->xListEnd ) )->pxNext->pvOwner );
[e = _pxTCB -> . *U . *U &U . *U &U _xPendingReadyList 2 1 3 `*S936 ]
"2377
[; ;Source/FreeRTOS/tasks.c: 2377:                     { List_t * const pxList = ( &( pxTCB->xEventListItem ) )->pvContainer; ( &( pxTCB->xEventListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xEventListItem ) )->pxPrevious; ( &( pxTCB->xEventListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xEventListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xEventListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xEventListItem ) )->pxPrevious; } ( &( pxTCB->xEventListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7687 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 2 4 ]
[e = . *U . *U &U . *U _pxTCB 2 1 2 . *U &U . *U _pxTCB 2 2 ]
[e = . *U . *U &U . *U _pxTCB 2 2 1 . *U &U . *U _pxTCB 2 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 2 1145  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 2 2 ]
}
[e :U 1145 ]
[e = . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"2379
[; ;Source/FreeRTOS/tasks.c: 2379:                     { List_t * const pxList = ( &( pxTCB->xStateListItem ) )->pvContainer; ( &( pxTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xStateListItem ) )->pxPrevious; ( &( pxTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xStateListItem ) )->pxPrevious; } ( &( pxTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7689 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 1 4 ]
[e = . *U . *U &U . *U _pxTCB 1 1 2 . *U &U . *U _pxTCB 1 2 ]
[e = . *U . *U &U . *U _pxTCB 1 2 1 . *U &U . *U _pxTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 1 1146  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 1 2 ]
}
[e :U 1146 ]
[e = . *U &U . *U _pxTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"2380
[; ;Source/FreeRTOS/tasks.c: 2380:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1147  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1147 ]
}
{
[v F7691 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"2384
[; ;Source/FreeRTOS/tasks.c: 2384:                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
[e $ ! >= -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1148  ]
"2385
[; ;Source/FreeRTOS/tasks.c: 2385:                     {
{
"2386
[; ;Source/FreeRTOS/tasks.c: 2386:                         xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"2387
[; ;Source/FreeRTOS/tasks.c: 2387:                     }
}
[e $U 1149  ]
"2388
[; ;Source/FreeRTOS/tasks.c: 2388:                     else
[e :U 1148 ]
"2389
[; ;Source/FreeRTOS/tasks.c: 2389:                     {
{
"2391
[; ;Source/FreeRTOS/tasks.c: 2391:                     }
}
[e :U 1149 ]
"2392
[; ;Source/FreeRTOS/tasks.c: 2392:                 }
}
[e :U 1142 ]
"2374
[; ;Source/FreeRTOS/tasks.c: 2374:                 while( ( ( ( &xPendingReadyList )->uxNumberOfItems == ( UBaseType_t ) 0 ) ? ( ( BaseType_t ) 1 ) : ( ( BaseType_t ) 0 ) ) == ( ( BaseType_t ) 0 ) )
[e $ == ? == -> . *U &U _xPendingReadyList 0 `i -> -> -> 0 `i `uc `i : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1143  ]
[e :U 1144 ]
"2394
[; ;Source/FreeRTOS/tasks.c: 2394:                 if( pxTCB != ((void*)0) )
[e $ ! != _pxTCB -> -> -> 0 `i `*v `*S936 1150  ]
"2395
[; ;Source/FreeRTOS/tasks.c: 2395:                 {
{
"2402
[; ;Source/FreeRTOS/tasks.c: 2402:                     prvResetNextTaskUnblockTime();
[e ( _prvResetNextTaskUnblockTime ..  ]
"2403
[; ;Source/FreeRTOS/tasks.c: 2403:                 }
}
[e :U 1150 ]
"2409
[; ;Source/FreeRTOS/tasks.c: 2409:                 {
{
"2410
[; ;Source/FreeRTOS/tasks.c: 2410:                     TickType_t xPendedCounts = xPendedTicks;
[v _xPendedCounts `us ~T0 @X0 1 a ]
[e = _xPendedCounts _xPendedTicks ]
"2412
[; ;Source/FreeRTOS/tasks.c: 2412:                     if( xPendedCounts > ( TickType_t ) 0U )
[e $ ! > -> _xPendedCounts `ui -> -> -> 0 `ui `us `ui 1151  ]
"2413
[; ;Source/FreeRTOS/tasks.c: 2413:                     {
{
"2414
[; ;Source/FreeRTOS/tasks.c: 2414:                         do
[e :U 1154 ]
"2415
[; ;Source/FreeRTOS/tasks.c: 2415:                         {
{
"2416
[; ;Source/FreeRTOS/tasks.c: 2416:                             if( xTaskIncrementTick() != ( ( BaseType_t ) 0 ) )
[e $ ! != -> ( _xTaskIncrementTick ..  `i -> -> -> 0 `i `c `i 1155  ]
"2417
[; ;Source/FreeRTOS/tasks.c: 2417:                             {
{
"2418
[; ;Source/FreeRTOS/tasks.c: 2418:                                 xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"2419
[; ;Source/FreeRTOS/tasks.c: 2419:                             }
}
[e $U 1156  ]
"2420
[; ;Source/FreeRTOS/tasks.c: 2420:                             else
[e :U 1155 ]
"2421
[; ;Source/FreeRTOS/tasks.c: 2421:                             {
{
"2423
[; ;Source/FreeRTOS/tasks.c: 2423:                             }
}
[e :U 1156 ]
"2425
[; ;Source/FreeRTOS/tasks.c: 2425:                             --xPendedCounts;
[e =- _xPendedCounts -> -> 1 `i `us ]
"2426
[; ;Source/FreeRTOS/tasks.c: 2426:                         } while( xPendedCounts > ( TickType_t ) 0U );
}
[e $ > -> _xPendedCounts `ui -> -> -> 0 `ui `us `ui 1154  ]
[e :U 1153 ]
"2428
[; ;Source/FreeRTOS/tasks.c: 2428:                         xPendedTicks = 0;
[e = _xPendedTicks -> -> 0 `i `us ]
"2429
[; ;Source/FreeRTOS/tasks.c: 2429:                     }
}
[e $U 1157  ]
"2430
[; ;Source/FreeRTOS/tasks.c: 2430:                     else
[e :U 1151 ]
"2431
[; ;Source/FreeRTOS/tasks.c: 2431:                     {
{
"2433
[; ;Source/FreeRTOS/tasks.c: 2433:                     }
}
[e :U 1157 ]
"2434
[; ;Source/FreeRTOS/tasks.c: 2434:                 }
}
"2436
[; ;Source/FreeRTOS/tasks.c: 2436:                 if( xYieldPending != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xYieldPending `i -> -> -> 0 `i `c `i 1158  ]
"2437
[; ;Source/FreeRTOS/tasks.c: 2437:                 {
{
"2439
[; ;Source/FreeRTOS/tasks.c: 2439:                     {
{
"2440
[; ;Source/FreeRTOS/tasks.c: 2440:                         xAlreadyYielded = ( ( BaseType_t ) 1 );
[e = _xAlreadyYielded -> -> 1 `i `c ]
"2441
[; ;Source/FreeRTOS/tasks.c: 2441:                     }
}
"2443
[; ;Source/FreeRTOS/tasks.c: 2443:                     vPortYield();
[e ( _vPortYield ..  ]
"2444
[; ;Source/FreeRTOS/tasks.c: 2444:                 }
}
[e $U 1159  ]
"2445
[; ;Source/FreeRTOS/tasks.c: 2445:                 else
[e :U 1158 ]
"2446
[; ;Source/FreeRTOS/tasks.c: 2446:                 {
{
"2448
[; ;Source/FreeRTOS/tasks.c: 2448:                 }
}
[e :U 1159 ]
"2449
[; ;Source/FreeRTOS/tasks.c: 2449:             }
}
[e :U 1141 ]
"2450
[; ;Source/FreeRTOS/tasks.c: 2450:         }
}
[e $U 1160  ]
"2451
[; ;Source/FreeRTOS/tasks.c: 2451:         else
[e :U 1140 ]
"2452
[; ;Source/FreeRTOS/tasks.c: 2452:         {
{
"2454
[; ;Source/FreeRTOS/tasks.c: 2454:         }
}
[e :U 1160 ]
"2455
[; ;Source/FreeRTOS/tasks.c: 2455:     }
}
"2456
[; ;Source/FreeRTOS/tasks.c: 2456:     __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1161  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1161 ]
"2458
[; ;Source/FreeRTOS/tasks.c: 2458:     return xAlreadyYielded;
[e ) _xAlreadyYielded ]
[e $UE 1138  ]
"2459
[; ;Source/FreeRTOS/tasks.c: 2459: }
[e :UE 1138 ]
}
"2462
[; ;Source/FreeRTOS/tasks.c: 2462: TickType_t xTaskGetTickCount( void )
[v _xTaskGetTickCount `(us ~T0 @X0 1 ef ]
"2463
[; ;Source/FreeRTOS/tasks.c: 2463: {
{
[e :U _xTaskGetTickCount ]
[f ]
"2464
[; ;Source/FreeRTOS/tasks.c: 2464:     TickType_t xTicks;
[v _xTicks `us ~T0 @X0 1 a ]
"2467
[; ;Source/FreeRTOS/tasks.c: 2467:     POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"2468
[; ;Source/FreeRTOS/tasks.c: 2468:     {
{
"2469
[; ;Source/FreeRTOS/tasks.c: 2469:         xTicks = xTickCount;
[e = _xTicks _xTickCount ]
"2470
[; ;Source/FreeRTOS/tasks.c: 2470:     }
}
"2471
[; ;Source/FreeRTOS/tasks.c: 2471:     __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1163  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1163 ]
"2473
[; ;Source/FreeRTOS/tasks.c: 2473:     return xTicks;
[e ) _xTicks ]
[e $UE 1162  ]
"2474
[; ;Source/FreeRTOS/tasks.c: 2474: }
[e :UE 1162 ]
}
"2477
[; ;Source/FreeRTOS/tasks.c: 2477: TickType_t xTaskGetTickCountFromISR( void )
[v _xTaskGetTickCountFromISR `(us ~T0 @X0 1 ef ]
"2478
[; ;Source/FreeRTOS/tasks.c: 2478: {
{
[e :U _xTaskGetTickCountFromISR ]
[f ]
"2479
[; ;Source/FreeRTOS/tasks.c: 2479:     TickType_t xReturn;
[v _xReturn `us ~T0 @X0 1 a ]
"2480
[; ;Source/FreeRTOS/tasks.c: 2480:     UBaseType_t uxSavedInterruptStatus;
[v _uxSavedInterruptStatus `uc ~T0 @X0 1 a ]
"2498
[; ;Source/FreeRTOS/tasks.c: 2498:     uxSavedInterruptStatus = 0;
[e = _uxSavedInterruptStatus -> -> 0 `i `uc ]
"2499
[; ;Source/FreeRTOS/tasks.c: 2499:     {
{
"2500
[; ;Source/FreeRTOS/tasks.c: 2500:         xReturn = xTickCount;
[e = _xReturn _xTickCount ]
"2501
[; ;Source/FreeRTOS/tasks.c: 2501:     }
}
"2502
[; ;Source/FreeRTOS/tasks.c: 2502:     ( void ) ( ( uxSavedInterruptStatus ) );
[e _uxSavedInterruptStatus ]
"2504
[; ;Source/FreeRTOS/tasks.c: 2504:     return xReturn;
[e ) _xReturn ]
[e $UE 1164  ]
"2505
[; ;Source/FreeRTOS/tasks.c: 2505: }
[e :UE 1164 ]
}
"2508
[; ;Source/FreeRTOS/tasks.c: 2508: UBaseType_t uxTaskGetNumberOfTasks( void )
[v _uxTaskGetNumberOfTasks `(uc ~T0 @X0 1 ef ]
"2509
[; ;Source/FreeRTOS/tasks.c: 2509: {
{
[e :U _uxTaskGetNumberOfTasks ]
[f ]
"2512
[; ;Source/FreeRTOS/tasks.c: 2512:     return uxCurrentNumberOfTasks;
[e ) _uxCurrentNumberOfTasks ]
[e $UE 1165  ]
"2513
[; ;Source/FreeRTOS/tasks.c: 2513: }
[e :UE 1165 ]
}
"2516
[; ;Source/FreeRTOS/tasks.c: 2516: char * pcTaskGetName( TaskHandle_t xTaskToQuery )
[v _pcTaskGetName `(*uc ~T0 @X0 1 ef1`*S936 ]
"2517
[; ;Source/FreeRTOS/tasks.c: 2517: {
{
[e :U _pcTaskGetName ]
"2516
[; ;Source/FreeRTOS/tasks.c: 2516: char * pcTaskGetName( TaskHandle_t xTaskToQuery )
[v _xTaskToQuery `*S936 ~T0 @X0 1 r1 ]
"2517
[; ;Source/FreeRTOS/tasks.c: 2517: {
[f ]
"2518
[; ;Source/FreeRTOS/tasks.c: 2518:     TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"2522
[; ;Source/FreeRTOS/tasks.c: 2522:     pxTCB = ( ( ( xTaskToQuery ) == ((void*)0) ) ? pxCurrentTCB : ( xTaskToQuery ) );
[e = _pxTCB ? == _xTaskToQuery -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTaskToQuery ]
"2523
[; ;Source/FreeRTOS/tasks.c: 2523:     if( ( pxTCB ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 2523 );
[e $ ! == _pxTCB -> -> 0 `i `*S936 1167  ]
[e ( _Xprintf , (. :s 88C -> 2523 `i ]
[e :U 1167 ]
"2524
[; ;Source/FreeRTOS/tasks.c: 2524:     return &( pxTCB->pcTaskName[ 0 ] );
[e ) &U *U + &U . *U _pxTCB 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _pxTCB 5 `ui `ux ]
[e $UE 1166  ]
"2525
[; ;Source/FreeRTOS/tasks.c: 2525: }
[e :UE 1166 ]
}
"2665
[; ;Source/FreeRTOS/tasks.c: 2665:     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
[v _uxTaskGetSystemState `(uc ~T0 @X0 1 ef3`C*S940`Cuc`C*ul ]
"2668
[; ;Source/FreeRTOS/tasks.c: 2668:     {
{
[e :U _uxTaskGetSystemState ]
[v F7706 `*S940 ~T0 @X0 1 t ]
"2665
[; ;Source/FreeRTOS/tasks.c: 2665:     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
[v _pxTaskStatusArray `C*S940 ~T0 @X0 1 r1 ]
"2666
[; ;Source/FreeRTOS/tasks.c: 2666:                                       const UBaseType_t uxArraySize,
[v _uxArraySize `Cuc ~T0 @X0 1 r2 ]
[v F7709 `*ul ~T0 @X0 1 t ]
"2667
[; ;Source/FreeRTOS/tasks.c: 2667:                                       uint32_t * const pulTotalRunTime )
[v _pulTotalRunTime `C*ul ~T0 @X0 1 r3 ]
"2668
[; ;Source/FreeRTOS/tasks.c: 2668:     {
[f ]
"2669
[; ;Source/FreeRTOS/tasks.c: 2669:         UBaseType_t uxTask = 0, uxQueue = ( 3 );
[v _uxTask `uc ~T0 @X0 1 a ]
[e = _uxTask -> -> 0 `i `uc ]
[v _uxQueue `uc ~T0 @X0 1 a ]
[e = _uxQueue -> -> 3 `i `uc ]
"2671
[; ;Source/FreeRTOS/tasks.c: 2671:         vTaskSuspendAll();
[e ( _vTaskSuspendAll ..  ]
"2672
[; ;Source/FreeRTOS/tasks.c: 2672:         {
{
"2674
[; ;Source/FreeRTOS/tasks.c: 2674:             if( uxArraySize >= uxCurrentNumberOfTasks )
[e $ ! >= -> _uxArraySize `i -> _uxCurrentNumberOfTasks `i 1169  ]
"2675
[; ;Source/FreeRTOS/tasks.c: 2675:             {
{
"2678
[; ;Source/FreeRTOS/tasks.c: 2678:                 do
[e :U 1172 ]
"2679
[; ;Source/FreeRTOS/tasks.c: 2679:                 {
{
"2680
[; ;Source/FreeRTOS/tasks.c: 2680:                     uxQueue--;
[e -- _uxQueue -> -> 1 `i `uc ]
"2681
[; ;Source/FreeRTOS/tasks.c: 2681:                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
[e =+ _uxTask -> ( _prvListTasksWithinSingleList (3 , , &U *U + _pxTaskStatusArray * -> _uxTask `ux -> -> # *U _pxTaskStatusArray `ui `ux &U *U + &U _pxReadyTasksLists * -> _uxQueue `ux -> -> # *U &U _pxReadyTasksLists `ui `ux . `E7129 1 `uc ]
"2682
[; ;Source/FreeRTOS/tasks.c: 2682:                 } while( uxQueue > ( UBaseType_t ) ( ( UBaseType_t ) 0U ) );
}
[e $ > -> _uxQueue `i -> -> -> 0 `ui `uc `i 1172  ]
[e :U 1171 ]
"2686
[; ;Source/FreeRTOS/tasks.c: 2686:                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
[e =+ _uxTask -> ( _prvListTasksWithinSingleList (3 , , &U *U + _pxTaskStatusArray * -> _uxTask `ux -> -> # *U _pxTaskStatusArray `ui `ux _pxDelayedTaskList . `E7129 2 `uc ]
"2687
[; ;Source/FreeRTOS/tasks.c: 2687:                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
[e =+ _uxTask -> ( _prvListTasksWithinSingleList (3 , , &U *U + _pxTaskStatusArray * -> _uxTask `ux -> -> # *U _pxTaskStatusArray `ui `ux _pxOverflowDelayedTaskList . `E7129 2 `uc ]
"2690
[; ;Source/FreeRTOS/tasks.c: 2690:                 {
{
"2693
[; ;Source/FreeRTOS/tasks.c: 2693:                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermination, eDeleted );
[e =+ _uxTask -> ( _prvListTasksWithinSingleList (3 , , &U *U + _pxTaskStatusArray * -> _uxTask `ux -> -> # *U _pxTaskStatusArray `ui `ux &U _xTasksWaitingTermination . `E7129 4 `uc ]
"2694
[; ;Source/FreeRTOS/tasks.c: 2694:                 }
}
"2698
[; ;Source/FreeRTOS/tasks.c: 2698:                 {
{
"2701
[; ;Source/FreeRTOS/tasks.c: 2701:                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
[e =+ _uxTask -> ( _prvListTasksWithinSingleList (3 , , &U *U + _pxTaskStatusArray * -> _uxTask `ux -> -> # *U _pxTaskStatusArray `ui `ux &U _xSuspendedTaskList . `E7129 3 `uc ]
"2702
[; ;Source/FreeRTOS/tasks.c: 2702:                 }
}
"2717
[; ;Source/FreeRTOS/tasks.c: 2717:                 {
{
"2718
[; ;Source/FreeRTOS/tasks.c: 2718:                     if( pulTotalRunTime != ((void*)0) )
[e $ ! != _pulTotalRunTime -> -> -> 0 `i `*v `*ul 1173  ]
"2719
[; ;Source/FreeRTOS/tasks.c: 2719:                     {
{
"2720
[; ;Source/FreeRTOS/tasks.c: 2720:                         *pulTotalRunTime = 0;
[e = *U _pulTotalRunTime -> -> -> 0 `i `l `ul ]
"2721
[; ;Source/FreeRTOS/tasks.c: 2721:                     }
}
[e :U 1173 ]
"2722
[; ;Source/FreeRTOS/tasks.c: 2722:                 }
}
"2724
[; ;Source/FreeRTOS/tasks.c: 2724:             }
}
[e $U 1174  ]
"2725
[; ;Source/FreeRTOS/tasks.c: 2725:             else
[e :U 1169 ]
"2726
[; ;Source/FreeRTOS/tasks.c: 2726:             {
{
"2728
[; ;Source/FreeRTOS/tasks.c: 2728:             }
}
[e :U 1174 ]
"2729
[; ;Source/FreeRTOS/tasks.c: 2729:         }
}
"2730
[; ;Source/FreeRTOS/tasks.c: 2730:         ( void ) xTaskResumeAll();
[e ( _xTaskResumeAll ..  ]
"2732
[; ;Source/FreeRTOS/tasks.c: 2732:         return uxTask;
[e ) _uxTask ]
[e $UE 1168  ]
"2733
[; ;Source/FreeRTOS/tasks.c: 2733:     }
[e :UE 1168 ]
}
"2792
[; ;Source/FreeRTOS/tasks.c: 2792: BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
[v _xTaskCatchUpTicks `(c ~T0 @X0 1 ef1`us ]
"2793
[; ;Source/FreeRTOS/tasks.c: 2793: {
{
[e :U _xTaskCatchUpTicks ]
"2792
[; ;Source/FreeRTOS/tasks.c: 2792: BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
[v _xTicksToCatchUp `us ~T0 @X0 1 r1 ]
"2793
[; ;Source/FreeRTOS/tasks.c: 2793: {
[f ]
"2794
[; ;Source/FreeRTOS/tasks.c: 2794:     BaseType_t xYieldOccurred;
[v _xYieldOccurred `c ~T0 @X0 1 a ]
"2798
[; ;Source/FreeRTOS/tasks.c: 2798:     if( ( uxSchedulerSuspended == 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 2798 );
[e $ ! == -> == -> _uxSchedulerSuspended `i -> 0 `i `i -> 0 `i 1176  ]
[e ( _Xprintf , (. :s 89C -> 2798 `i ]
[e :U 1176 ]
"2802
[; ;Source/FreeRTOS/tasks.c: 2802:     vTaskSuspendAll();
[e ( _vTaskSuspendAll ..  ]
"2805
[; ;Source/FreeRTOS/tasks.c: 2805:     POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"2806
[; ;Source/FreeRTOS/tasks.c: 2806:     {
{
"2807
[; ;Source/FreeRTOS/tasks.c: 2807:         xPendedTicks += xTicksToCatchUp;
[e =+ _xPendedTicks -> _xTicksToCatchUp `Vus ]
"2808
[; ;Source/FreeRTOS/tasks.c: 2808:     }
}
"2809
[; ;Source/FreeRTOS/tasks.c: 2809:     __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1177  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1177 ]
"2810
[; ;Source/FreeRTOS/tasks.c: 2810:     xYieldOccurred = xTaskResumeAll();
[e = _xYieldOccurred ( _xTaskResumeAll ..  ]
"2812
[; ;Source/FreeRTOS/tasks.c: 2812:     return xYieldOccurred;
[e ) _xYieldOccurred ]
[e $UE 1175  ]
"2813
[; ;Source/FreeRTOS/tasks.c: 2813: }
[e :UE 1175 ]
}
"2896
[; ;Source/FreeRTOS/tasks.c: 2896: BaseType_t xTaskIncrementTick( void )
[v _xTaskIncrementTick `(c ~T0 @X0 1 ef ]
"2897
[; ;Source/FreeRTOS/tasks.c: 2897: {
{
[e :U _xTaskIncrementTick ]
[f ]
"2898
[; ;Source/FreeRTOS/tasks.c: 2898:     TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"2899
[; ;Source/FreeRTOS/tasks.c: 2899:     TickType_t xItemValue;
[v _xItemValue `us ~T0 @X0 1 a ]
"2900
[; ;Source/FreeRTOS/tasks.c: 2900:     BaseType_t xSwitchRequired = ( ( BaseType_t ) 0 );
[v _xSwitchRequired `c ~T0 @X0 1 a ]
[e = _xSwitchRequired -> -> 0 `i `c ]
"2905
[; ;Source/FreeRTOS/tasks.c: 2905:     do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1181 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1182  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 90C ]
[e $U 1183  ]
[e :U 1184 ]
{
{
[e $U 1186  ]
[e :U 1187 ]
[e :U 1186 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1187  ]
[e :U 1188 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1183 ]
[e $ != -> *U __s `i -> 0 `i 1184  ]
[e :U 1185 ]
{
[e $U 1189  ]
[e :U 1190 ]
[e :U 1189 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1190  ]
[e :U 1191 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 1 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1192  ]
[e :U 1193 ]
[e :U 1192 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1193  ]
[e :U 1194 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 1 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1195  ]
[e :U 1196 ]
[e :U 1195 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1196  ]
[e :U 1197 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1198  ]
[e :U 1199 ]
[e :U 1198 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1199  ]
[e :U 1200 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1182 ]
}
[e :U 1180 ]
"2908
[; ;Source/FreeRTOS/tasks.c: 2908:     if( uxSchedulerSuspended == ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! == -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1201  ]
"2909
[; ;Source/FreeRTOS/tasks.c: 2909:     {
{
"2910
[; ;Source/FreeRTOS/tasks.c: 2910:         do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 2 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 2 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1204 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1205  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 91C ]
[e $U 1206  ]
[e :U 1207 ]
{
{
[e $U 1209  ]
[e :U 1210 ]
[e :U 1209 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1210  ]
[e :U 1211 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1206 ]
[e $ != -> *U __s `i -> 0 `i 1207  ]
[e :U 1208 ]
{
[e $U 1212  ]
[e :U 1213 ]
[e :U 1212 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1213  ]
[e :U 1214 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 2 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1215  ]
[e :U 1216 ]
[e :U 1215 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1216  ]
[e :U 1217 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 2 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1218  ]
[e :U 1219 ]
[e :U 1218 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1219  ]
[e :U 1220 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1221  ]
[e :U 1222 ]
[e :U 1221 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1222  ]
[e :U 1223 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1205 ]
}
[e :U 1203 ]
"2912
[; ;Source/FreeRTOS/tasks.c: 2912:         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
[v _xConstTickCount `Cus ~T0 @X0 1 a ]
[e = _xConstTickCount -> + -> _xTickCount `ui -> -> -> 1 `i `us `ui `us ]
"2915
[; ;Source/FreeRTOS/tasks.c: 2915:         xTickCount = xConstTickCount;
[e = _xTickCount _xConstTickCount ]
"2917
[; ;Source/FreeRTOS/tasks.c: 2917:         if( xConstTickCount == ( TickType_t ) 0U )
[e $ ! == -> _xConstTickCount `ui -> -> -> 0 `ui `us `ui 1224  ]
"2918
[; ;Source/FreeRTOS/tasks.c: 2918:         {
{
"2919
[; ;Source/FreeRTOS/tasks.c: 2919:             do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 3 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 3 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1227 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1228  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 92C ]
[e $U 1229  ]
[e :U 1230 ]
{
{
[e $U 1232  ]
[e :U 1233 ]
[e :U 1232 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1233  ]
[e :U 1234 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1229 ]
[e $ != -> *U __s `i -> 0 `i 1230  ]
[e :U 1231 ]
{
[e $U 1235  ]
[e :U 1236 ]
[e :U 1235 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1236  ]
[e :U 1237 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 3 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1238  ]
[e :U 1239 ]
[e :U 1238 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1239  ]
[e :U 1240 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 3 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1241  ]
[e :U 1242 ]
[e :U 1241 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1242  ]
[e :U 1243 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1244  ]
[e :U 1245 ]
[e :U 1244 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1245  ]
[e :U 1246 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1228 ]
}
[e :U 1226 ]
"2920
[; ;Source/FreeRTOS/tasks.c: 2920:             { List_t * pxTemp; if( ( ( ( ( ( pxDelayedTaskList )->uxNumberOfItems == ( UBaseType_t ) 0 ) ? ( ( BaseType_t ) 1 ) : ( ( BaseType_t ) 0 ) ) ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 2920 ); pxTemp = pxDelayedTaskList; pxDelayedTaskList = pxOverflowDelayedTaskList; pxOverflowDelayedTaskList = pxTemp; xNumOfOverflows++; prvResetNextTaskUnblockTime(); };
{
[v _pxTemp `*S931 ~T0 @X0 1 a ]
[e $ ! == ? == -> . *U _pxDelayedTaskList 0 `i -> -> -> 0 `i `uc `i : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> 0 `i 1247  ]
[e ( _Xprintf , (. :s 93C -> 2920 `i ]
[e :U 1247 ]
[e = _pxTemp _pxDelayedTaskList ]
[e = _pxDelayedTaskList _pxOverflowDelayedTaskList ]
[e = _pxOverflowDelayedTaskList _pxTemp ]
[e ++ _xNumOfOverflows -> -> 1 `i `Vc ]
[e ( _prvResetNextTaskUnblockTime ..  ]
}
"2921
[; ;Source/FreeRTOS/tasks.c: 2921:         }
}
[e $U 1248  ]
"2922
[; ;Source/FreeRTOS/tasks.c: 2922:         else
[e :U 1224 ]
"2923
[; ;Source/FreeRTOS/tasks.c: 2923:         {
{
"2925
[; ;Source/FreeRTOS/tasks.c: 2925:         }
}
[e :U 1248 ]
"2931
[; ;Source/FreeRTOS/tasks.c: 2931:         do { if( isr_cnt < 10 ){ const char* _s = ("xCon="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( xConstTickCount >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( xConstTickCount & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1251 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1252  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 94C ]
[e $U 1253  ]
[e :U 1254 ]
{
{
[e $U 1256  ]
[e :U 1257 ]
[e :U 1256 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1257  ]
[e :U 1258 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1253 ]
[e $ != -> *U __s `i -> 0 `i 1254  ]
[e :U 1255 ]
{
[e $U 1259  ]
[e :U 1260 ]
[e :U 1259 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1260  ]
[e :U 1261 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> -> _xConstTickCount `ui -> 4 `i -> -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1262  ]
[e :U 1263 ]
[e :U 1262 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1263  ]
[e :U 1264 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & -> _xConstTickCount `ui -> -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1265  ]
[e :U 1266 ]
[e :U 1265 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1266  ]
[e :U 1267 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1268  ]
[e :U 1269 ]
[e :U 1268 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1269  ]
[e :U 1270 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1252 ]
}
[e :U 1250 ]
"2932
[; ;Source/FreeRTOS/tasks.c: 2932:         do { if( isr_cnt < 10 ){ const char* _s = ("xNex="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( xNextTaskUnblockTime >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( xNextTaskUnblockTime & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1273 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1274  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 95C ]
[e $U 1275  ]
[e :U 1276 ]
{
{
[e $U 1278  ]
[e :U 1279 ]
[e :U 1278 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1279  ]
[e :U 1280 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1275 ]
[e $ != -> *U __s `i -> 0 `i 1276  ]
[e :U 1277 ]
{
[e $U 1281  ]
[e :U 1282 ]
[e :U 1281 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1282  ]
[e :U 1283 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & >> -> _xNextTaskUnblockTime `ui -> 4 `i -> -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1284  ]
[e :U 1285 ]
[e :U 1284 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1285  ]
[e :U 1286 ]
[e = _TXREG2 -> *U + &U _ConvC * -> & -> _xNextTaskUnblockTime `ui -> -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1287  ]
[e :U 1288 ]
[e :U 1287 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1288  ]
[e :U 1289 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1290  ]
[e :U 1291 ]
[e :U 1290 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1291  ]
[e :U 1292 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1274 ]
}
[e :U 1272 ]
"2933
[; ;Source/FreeRTOS/tasks.c: 2933:         if( xConstTickCount >= xNextTaskUnblockTime )
[e $ ! >= -> _xConstTickCount `ui -> _xNextTaskUnblockTime `ui 1293  ]
"2934
[; ;Source/FreeRTOS/tasks.c: 2934:         {
{
"2935
[; ;Source/FreeRTOS/tasks.c: 2935:             do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 4 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 4 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1296 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1297  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 96C ]
[e $U 1298  ]
[e :U 1299 ]
{
{
[e $U 1301  ]
[e :U 1302 ]
[e :U 1301 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1302  ]
[e :U 1303 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1298 ]
[e $ != -> *U __s `i -> 0 `i 1299  ]
[e :U 1300 ]
{
[e $U 1304  ]
[e :U 1305 ]
[e :U 1304 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1305  ]
[e :U 1306 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 4 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1307  ]
[e :U 1308 ]
[e :U 1307 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1308  ]
[e :U 1309 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1310  ]
[e :U 1311 ]
[e :U 1310 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1311  ]
[e :U 1312 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1313  ]
[e :U 1314 ]
[e :U 1313 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1314  ]
[e :U 1315 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1297 ]
}
[e :U 1295 ]
"2936
[; ;Source/FreeRTOS/tasks.c: 2936:             for( ; ; )
{
[e :U 1316 ]
"2937
[; ;Source/FreeRTOS/tasks.c: 2937:             {
{
"2938
[; ;Source/FreeRTOS/tasks.c: 2938:                 if( ( ( ( pxDelayedTaskList )->uxNumberOfItems == ( UBaseType_t ) 0 ) ? ( ( BaseType_t ) 1 ) : ( ( BaseType_t ) 0 ) ) != ( ( BaseType_t ) 0 ) )
[e $ ! != ? == -> . *U _pxDelayedTaskList 0 `i -> -> -> 0 `i `uc `i : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1319  ]
"2939
[; ;Source/FreeRTOS/tasks.c: 2939:                 {
{
"2940
[; ;Source/FreeRTOS/tasks.c: 2940:                     do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 5 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 5 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1322 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1323  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 97C ]
[e $U 1324  ]
[e :U 1325 ]
{
{
[e $U 1327  ]
[e :U 1328 ]
[e :U 1327 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1328  ]
[e :U 1329 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1324 ]
[e $ != -> *U __s `i -> 0 `i 1325  ]
[e :U 1326 ]
{
[e $U 1330  ]
[e :U 1331 ]
[e :U 1330 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1331  ]
[e :U 1332 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 5 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1333  ]
[e :U 1334 ]
[e :U 1333 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1334  ]
[e :U 1335 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 5 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1336  ]
[e :U 1337 ]
[e :U 1336 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1337  ]
[e :U 1338 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1339  ]
[e :U 1340 ]
[e :U 1339 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1340  ]
[e :U 1341 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1323 ]
}
[e :U 1321 ]
"2944
[; ;Source/FreeRTOS/tasks.c: 2944:                     xNextTaskUnblockTime = ( TickType_t ) 0xffff;
[e = _xNextTaskUnblockTime -> -> 65535 `ui `us ]
"2945
[; ;Source/FreeRTOS/tasks.c: 2945:                     break;
[e $U 1317  ]
"2946
[; ;Source/FreeRTOS/tasks.c: 2946:                 }
}
[e $U 1342  ]
"2947
[; ;Source/FreeRTOS/tasks.c: 2947:                 else
[e :U 1319 ]
"2948
[; ;Source/FreeRTOS/tasks.c: 2948:                 {
{
"2949
[; ;Source/FreeRTOS/tasks.c: 2949:                     do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 6 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 6 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1345 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1346  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 98C ]
[e $U 1347  ]
[e :U 1348 ]
{
{
[e $U 1350  ]
[e :U 1351 ]
[e :U 1350 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1351  ]
[e :U 1352 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1347 ]
[e $ != -> *U __s `i -> 0 `i 1348  ]
[e :U 1349 ]
{
[e $U 1353  ]
[e :U 1354 ]
[e :U 1353 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1354  ]
[e :U 1355 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 6 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1356  ]
[e :U 1357 ]
[e :U 1356 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1357  ]
[e :U 1358 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 6 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1359  ]
[e :U 1360 ]
[e :U 1359 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1360  ]
[e :U 1361 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1362  ]
[e :U 1363 ]
[e :U 1362 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1363  ]
[e :U 1364 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1346 ]
}
[e :U 1344 ]
"2953
[; ;Source/FreeRTOS/tasks.c: 2953:                     pxTCB = ( ( &( ( pxDelayedTaskList )->xListEnd ) )->pxNext->pvOwner );
[e = _pxTCB -> . *U . *U &U . *U _pxDelayedTaskList 2 1 3 `*S936 ]
"2954
[; ;Source/FreeRTOS/tasks.c: 2954:                     xItemValue = ( ( &( pxTCB->xStateListItem ) )->xItemValue );
[e = _xItemValue . *U &U . *U _pxTCB 1 0 ]
"2956
[; ;Source/FreeRTOS/tasks.c: 2956:                     if( xConstTickCount < xItemValue )
[e $ ! < -> _xConstTickCount `ui -> _xItemValue `ui 1365  ]
"2957
[; ;Source/FreeRTOS/tasks.c: 2957:                     {
{
"2958
[; ;Source/FreeRTOS/tasks.c: 2958:                        do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 7 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 7 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1368 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1369  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 99C ]
[e $U 1370  ]
[e :U 1371 ]
{
{
[e $U 1373  ]
[e :U 1374 ]
[e :U 1373 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1374  ]
[e :U 1375 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1370 ]
[e $ != -> *U __s `i -> 0 `i 1371  ]
[e :U 1372 ]
{
[e $U 1376  ]
[e :U 1377 ]
[e :U 1376 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1377  ]
[e :U 1378 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 7 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1379  ]
[e :U 1380 ]
[e :U 1379 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1380  ]
[e :U 1381 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 7 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1382  ]
[e :U 1383 ]
[e :U 1382 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1383  ]
[e :U 1384 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1385  ]
[e :U 1386 ]
[e :U 1385 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1386  ]
[e :U 1387 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1369 ]
}
[e :U 1367 ]
"2963
[; ;Source/FreeRTOS/tasks.c: 2963:                         xNextTaskUnblockTime = xItemValue;
[e = _xNextTaskUnblockTime _xItemValue ]
"2964
[; ;Source/FreeRTOS/tasks.c: 2964:                         break;
[e $U 1317  ]
"2965
[; ;Source/FreeRTOS/tasks.c: 2965:                     }
}
[e $U 1388  ]
"2966
[; ;Source/FreeRTOS/tasks.c: 2966:                     else
[e :U 1365 ]
"2967
[; ;Source/FreeRTOS/tasks.c: 2967:                     {
{
"2969
[; ;Source/FreeRTOS/tasks.c: 2969:                     }
}
[e :U 1388 ]
"2972
[; ;Source/FreeRTOS/tasks.c: 2972:                     { List_t * const pxList = ( &( pxTCB->xStateListItem ) )->pvContainer; ( &( pxTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xStateListItem ) )->pxPrevious; ( &( pxTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xStateListItem ) )->pxPrevious; } ( &( pxTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7731 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 1 4 ]
[e = . *U . *U &U . *U _pxTCB 1 1 2 . *U &U . *U _pxTCB 1 2 ]
[e = . *U . *U &U . *U _pxTCB 1 2 1 . *U &U . *U _pxTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 1 1389  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 1 2 ]
}
[e :U 1389 ]
[e = . *U &U . *U _pxTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"2975
[; ;Source/FreeRTOS/tasks.c: 2975:                     if( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) != ((void*)0) )
[e $ ! != . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 1390  ]
"2976
[; ;Source/FreeRTOS/tasks.c: 2976:                     {
{
"2977
[; ;Source/FreeRTOS/tasks.c: 2977:                        do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 8 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 8 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1393 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1394  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 100C ]
[e $U 1395  ]
[e :U 1396 ]
{
{
[e $U 1398  ]
[e :U 1399 ]
[e :U 1398 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1399  ]
[e :U 1400 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1395 ]
[e $ != -> *U __s `i -> 0 `i 1396  ]
[e :U 1397 ]
{
[e $U 1401  ]
[e :U 1402 ]
[e :U 1401 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1402  ]
[e :U 1403 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 8 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1404  ]
[e :U 1405 ]
[e :U 1404 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1405  ]
[e :U 1406 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 8 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1407  ]
[e :U 1408 ]
[e :U 1407 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1408  ]
[e :U 1409 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1410  ]
[e :U 1411 ]
[e :U 1410 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1411  ]
[e :U 1412 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1394 ]
}
[e :U 1392 ]
"2978
[; ;Source/FreeRTOS/tasks.c: 2978:                         { List_t * const pxList = ( &( pxTCB->xEventListItem ) )->pvContainer; ( &( pxTCB->xEventListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xEventListItem ) )->pxPrevious; ( &( pxTCB->xEventListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xEventListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xEventListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xEventListItem ) )->pxPrevious; } ( &( pxTCB->xEventListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7734 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 2 4 ]
[e = . *U . *U &U . *U _pxTCB 2 1 2 . *U &U . *U _pxTCB 2 2 ]
[e = . *U . *U &U . *U _pxTCB 2 2 1 . *U &U . *U _pxTCB 2 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 2 1413  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 2 2 ]
}
[e :U 1413 ]
[e = . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"2979
[; ;Source/FreeRTOS/tasks.c: 2979:                     }
}
[e $U 1414  ]
"2980
[; ;Source/FreeRTOS/tasks.c: 2980:                     else
[e :U 1390 ]
"2981
[; ;Source/FreeRTOS/tasks.c: 2981:                     {
{
"2983
[; ;Source/FreeRTOS/tasks.c: 2983:                     }
}
[e :U 1414 ]
"2986
[; ;Source/FreeRTOS/tasks.c: 2986:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1415  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1415 ]
}
{
[v F7736 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"2990
[; ;Source/FreeRTOS/tasks.c: 2990:                     {
{
"2998
[; ;Source/FreeRTOS/tasks.c: 2998:                         do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 9 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 9 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1418 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1419  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 101C ]
[e $U 1420  ]
[e :U 1421 ]
{
{
[e $U 1423  ]
[e :U 1424 ]
[e :U 1423 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1424  ]
[e :U 1425 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1420 ]
[e $ != -> *U __s `i -> 0 `i 1421  ]
[e :U 1422 ]
{
[e $U 1426  ]
[e :U 1427 ]
[e :U 1426 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1427  ]
[e :U 1428 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 9 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1429  ]
[e :U 1430 ]
[e :U 1429 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1430  ]
[e :U 1431 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 9 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1432  ]
[e :U 1433 ]
[e :U 1432 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1433  ]
[e :U 1434 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1435  ]
[e :U 1436 ]
[e :U 1435 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1436  ]
[e :U 1437 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1419 ]
}
[e :U 1417 ]
"2999
[; ;Source/FreeRTOS/tasks.c: 2999:                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
[e $ ! > -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1438  ]
"3000
[; ;Source/FreeRTOS/tasks.c: 3000:                         {
{
"3001
[; ;Source/FreeRTOS/tasks.c: 3001:                             xSwitchRequired = ( ( BaseType_t ) 1 );
[e = _xSwitchRequired -> -> 1 `i `c ]
"3002
[; ;Source/FreeRTOS/tasks.c: 3002:                         }
}
[e $U 1439  ]
"3003
[; ;Source/FreeRTOS/tasks.c: 3003:                         else
[e :U 1438 ]
"3004
[; ;Source/FreeRTOS/tasks.c: 3004:                         {
{
"3006
[; ;Source/FreeRTOS/tasks.c: 3006:                         }
}
[e :U 1439 ]
"3007
[; ;Source/FreeRTOS/tasks.c: 3007:                     }
}
"3009
[; ;Source/FreeRTOS/tasks.c: 3009:                 }
}
[e :U 1342 ]
"3010
[; ;Source/FreeRTOS/tasks.c: 3010:             }
}
[e $U 1316  ]
[e :U 1317 ]
}
"3011
[; ;Source/FreeRTOS/tasks.c: 3011:         }
}
[e :U 1293 ]
"3017
[; ;Source/FreeRTOS/tasks.c: 3017:         {
{
"3018
[; ;Source/FreeRTOS/tasks.c: 3018:             do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 10 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 10 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1442 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1443  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 102C ]
[e $U 1444  ]
[e :U 1445 ]
{
{
[e $U 1447  ]
[e :U 1448 ]
[e :U 1447 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1448  ]
[e :U 1449 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1444 ]
[e $ != -> *U __s `i -> 0 `i 1445  ]
[e :U 1446 ]
{
[e $U 1450  ]
[e :U 1451 ]
[e :U 1450 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1451  ]
[e :U 1452 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 10 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1453  ]
[e :U 1454 ]
[e :U 1453 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1454  ]
[e :U 1455 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 10 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1456  ]
[e :U 1457 ]
[e :U 1456 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1457  ]
[e :U 1458 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1459  ]
[e :U 1460 ]
[e :U 1459 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1460  ]
[e :U 1461 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1443 ]
}
[e :U 1441 ]
"3019
[; ;Source/FreeRTOS/tasks.c: 3019:             if( ( ( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) )->uxNumberOfItems ) > ( UBaseType_t ) 1 )
[e $ ! > -> . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxCurrentTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 `i -> -> -> 1 `i `uc `i 1462  ]
"3020
[; ;Source/FreeRTOS/tasks.c: 3020:             {
{
"3021
[; ;Source/FreeRTOS/tasks.c: 3021:                 do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 11 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 11 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1465 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1466  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 103C ]
[e $U 1467  ]
[e :U 1468 ]
{
{
[e $U 1470  ]
[e :U 1471 ]
[e :U 1470 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1471  ]
[e :U 1472 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1467 ]
[e $ != -> *U __s `i -> 0 `i 1468  ]
[e :U 1469 ]
{
[e $U 1473  ]
[e :U 1474 ]
[e :U 1473 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1474  ]
[e :U 1475 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 11 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1476  ]
[e :U 1477 ]
[e :U 1476 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1477  ]
[e :U 1478 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 11 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1479  ]
[e :U 1480 ]
[e :U 1479 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1480  ]
[e :U 1481 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1482  ]
[e :U 1483 ]
[e :U 1482 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1483  ]
[e :U 1484 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1466 ]
}
[e :U 1464 ]
"3022
[; ;Source/FreeRTOS/tasks.c: 3022:                 xSwitchRequired = ( ( BaseType_t ) 1 );
[e = _xSwitchRequired -> -> 1 `i `c ]
"3023
[; ;Source/FreeRTOS/tasks.c: 3023:             }
}
[e $U 1485  ]
"3024
[; ;Source/FreeRTOS/tasks.c: 3024:             else
[e :U 1462 ]
"3025
[; ;Source/FreeRTOS/tasks.c: 3025:             {
{
"3027
[; ;Source/FreeRTOS/tasks.c: 3027:             }
}
[e :U 1485 ]
"3028
[; ;Source/FreeRTOS/tasks.c: 3028:         }
}
"3047
[; ;Source/FreeRTOS/tasks.c: 3047:         {
{
"3048
[; ;Source/FreeRTOS/tasks.c: 3048:             do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 12 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 12 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1488 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1489  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 104C ]
[e $U 1490  ]
[e :U 1491 ]
{
{
[e $U 1493  ]
[e :U 1494 ]
[e :U 1493 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1494  ]
[e :U 1495 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1490 ]
[e $ != -> *U __s `i -> 0 `i 1491  ]
[e :U 1492 ]
{
[e $U 1496  ]
[e :U 1497 ]
[e :U 1496 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1497  ]
[e :U 1498 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 12 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1499  ]
[e :U 1500 ]
[e :U 1499 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1500  ]
[e :U 1501 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 12 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1502  ]
[e :U 1503 ]
[e :U 1502 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1503  ]
[e :U 1504 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1505  ]
[e :U 1506 ]
[e :U 1505 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1506  ]
[e :U 1507 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1489 ]
}
[e :U 1487 ]
"3049
[; ;Source/FreeRTOS/tasks.c: 3049:             if( xYieldPending != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xYieldPending `i -> -> -> 0 `i `c `i 1508  ]
"3050
[; ;Source/FreeRTOS/tasks.c: 3050:             {
{
"3051
[; ;Source/FreeRTOS/tasks.c: 3051:                 do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 13 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 13 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1511 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1512  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 105C ]
[e $U 1513  ]
[e :U 1514 ]
{
{
[e $U 1516  ]
[e :U 1517 ]
[e :U 1516 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1517  ]
[e :U 1518 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1513 ]
[e $ != -> *U __s `i -> 0 `i 1514  ]
[e :U 1515 ]
{
[e $U 1519  ]
[e :U 1520 ]
[e :U 1519 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1520  ]
[e :U 1521 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 13 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1522  ]
[e :U 1523 ]
[e :U 1522 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1523  ]
[e :U 1524 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 13 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1525  ]
[e :U 1526 ]
[e :U 1525 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1526  ]
[e :U 1527 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1528  ]
[e :U 1529 ]
[e :U 1528 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1529  ]
[e :U 1530 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1512 ]
}
[e :U 1510 ]
"3052
[; ;Source/FreeRTOS/tasks.c: 3052:                 xSwitchRequired = ( ( BaseType_t ) 1 );
[e = _xSwitchRequired -> -> 1 `i `c ]
"3053
[; ;Source/FreeRTOS/tasks.c: 3053:             }
}
[e $U 1531  ]
"3054
[; ;Source/FreeRTOS/tasks.c: 3054:             else
[e :U 1508 ]
"3055
[; ;Source/FreeRTOS/tasks.c: 3055:             {
{
"3057
[; ;Source/FreeRTOS/tasks.c: 3057:             }
}
[e :U 1531 ]
"3058
[; ;Source/FreeRTOS/tasks.c: 3058:         }
}
"3060
[; ;Source/FreeRTOS/tasks.c: 3060:     }
}
[e $U 1532  ]
"3061
[; ;Source/FreeRTOS/tasks.c: 3061:     else
[e :U 1201 ]
"3062
[; ;Source/FreeRTOS/tasks.c: 3062:     {
{
"3063
[; ;Source/FreeRTOS/tasks.c: 3063:         ++xPendedTicks;
[e =+ _xPendedTicks -> -> 1 `i `Vus ]
"3071
[; ;Source/FreeRTOS/tasks.c: 3071:     }
}
[e :U 1532 ]
"3072
[; ;Source/FreeRTOS/tasks.c: 3072:     do { if( isr_cnt < 10 ){ const char* _s = ("TIT="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 0xff >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 0xff & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1535 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1536  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 106C ]
[e $U 1537  ]
[e :U 1538 ]
{
{
[e $U 1540  ]
[e :U 1541 ]
[e :U 1540 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1541  ]
[e :U 1542 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1537 ]
[e $ != -> *U __s `i -> 0 `i 1538  ]
[e :U 1539 ]
{
[e $U 1543  ]
[e :U 1544 ]
[e :U 1543 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1544  ]
[e :U 1545 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 255 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1546  ]
[e :U 1547 ]
[e :U 1546 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1547  ]
[e :U 1548 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 255 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1549  ]
[e :U 1550 ]
[e :U 1549 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1550  ]
[e :U 1551 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1552  ]
[e :U 1553 ]
[e :U 1552 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1553  ]
[e :U 1554 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1536 ]
}
[e :U 1534 ]
"3073
[; ;Source/FreeRTOS/tasks.c: 3073:     return xSwitchRequired;
[e ) _xSwitchRequired ]
[e $UE 1178  ]
"3074
[; ;Source/FreeRTOS/tasks.c: 3074: }
[e :UE 1178 ]
}
"3189
[; ;Source/FreeRTOS/tasks.c: 3189: void vTaskSwitchContext( void )
[v _vTaskSwitchContext `(v ~T0 @X0 1 ef ]
"3190
[; ;Source/FreeRTOS/tasks.c: 3190: {
{
[e :U _vTaskSwitchContext ]
[f ]
"3191
[; ;Source/FreeRTOS/tasks.c: 3191:     do { if( isr_cnt < 10 ){ const char* _s = ("TSC="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 1 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1558 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1559  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 107C ]
[e $U 1560  ]
[e :U 1561 ]
{
{
[e $U 1563  ]
[e :U 1564 ]
[e :U 1563 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1564  ]
[e :U 1565 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1560 ]
[e $ != -> *U __s `i -> 0 `i 1561  ]
[e :U 1562 ]
{
[e $U 1566  ]
[e :U 1567 ]
[e :U 1566 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1567  ]
[e :U 1568 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 1 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1569  ]
[e :U 1570 ]
[e :U 1569 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1570  ]
[e :U 1571 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 1 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1572  ]
[e :U 1573 ]
[e :U 1572 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1573  ]
[e :U 1574 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1575  ]
[e :U 1576 ]
[e :U 1575 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1576  ]
[e :U 1577 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1559 ]
}
[e :U 1557 ]
"3192
[; ;Source/FreeRTOS/tasks.c: 3192:     if( uxSchedulerSuspended != ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! != -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1578  ]
"3193
[; ;Source/FreeRTOS/tasks.c: 3193:     {
{
"3195
[; ;Source/FreeRTOS/tasks.c: 3195:         xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"3196
[; ;Source/FreeRTOS/tasks.c: 3196:     }
}
[e $U 1579  ]
"3197
[; ;Source/FreeRTOS/tasks.c: 3197:     else
[e :U 1578 ]
"3198
[; ;Source/FreeRTOS/tasks.c: 3198:     {
{
"3199
[; ;Source/FreeRTOS/tasks.c: 3199:         xYieldPending = ( ( BaseType_t ) 0 );
[e = _xYieldPending -> -> 0 `i `c ]
"3241
[; ;Source/FreeRTOS/tasks.c: 3241:         { UBaseType_t uxTopPriority = uxTopReadyPriority; while( ( ( ( &( pxReadyTasksLists[ uxTopPriority ] ) )->uxNumberOfItems == ( UBaseType_t ) 0 ) ? ( ( BaseType_t ) 1 ) : ( ( BaseType_t ) 0 ) ) ) { if( ( uxTopPriority ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3241 ); --uxTopPriority; } { List_t * const pxConstList = ( &( pxReadyTasksLists[ uxTopPriority ] ) ); ( pxConstList )->pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( void * ) ( pxConstList )->pxIndex == ( void * ) &( ( pxConstList )->xListEnd ) ) { ( pxConstList )->pxIndex = ( pxConstList )->pxIndex->pxNext; } ( pxCurrentTCB ) = ( pxConstList )->pxIndex->pvOwner; }; uxTopReadyPriority = uxTopPriority; };
{
[v _uxTopPriority `uc ~T0 @X0 1 a ]
[e = _uxTopPriority _uxTopReadyPriority ]
[e $U 1580  ]
[e :U 1581 ]
{
[e $ ! == -> _uxTopPriority `i -> 0 `i 1583  ]
[e ( _Xprintf , (. :s 108C -> 3241 `i ]
[e :U 1583 ]
[e =- _uxTopPriority -> -> 1 `i `uc ]
}
[e :U 1580 ]
[e $ != ? == -> . *U &U *U + &U _pxReadyTasksLists * -> _uxTopPriority `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 `i -> -> -> 0 `i `uc `i : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> 0 `i 1581  ]
[e :U 1582 ]
{
[v F7747 `*S931 ~T0 @X0 1 t ]
[v _pxConstList `C*S931 ~T0 @X0 1 a ]
[e = _pxConstList &U *U + &U _pxReadyTasksLists * -> _uxTopPriority `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e = . *U _pxConstList 1 . *U . *U _pxConstList 1 1 ]
[e $ ! == -> . *U _pxConstList 1 `*v -> &U . *U _pxConstList 2 `*v 1584  ]
{
[e = . *U _pxConstList 1 . *U . *U _pxConstList 1 1 ]
}
[e :U 1584 ]
[e = _pxCurrentTCB -> . *U . *U _pxConstList 1 3 `*S936 ]
}
[e = _uxTopReadyPriority _uxTopPriority ]
}
"3258
[; ;Source/FreeRTOS/tasks.c: 3258:     }
}
[e :U 1579 ]
"3259
[; ;Source/FreeRTOS/tasks.c: 3259:     do { if( isr_cnt < 10 ){ const char* _s = ("TSC="); while (*_s) { { while (!TXSTA2bits.TRMT); TXREG2 = (*_s); }; _s++; } { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 10 >> 4 ) & 0x0f ]); }; { while (!TXSTA2bits.TRMT); TXREG2 = (ConvC[( 10 & 0x0f)]); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\r'); }; { while (!TXSTA2bits.TRMT); TXREG2 = ('\n'); }; } } while (0);
[e :U 1587 ]
{
[e $ ! < -> _isr_cnt `i -> 10 `i 1588  ]
{
[v __s `*Cuc ~T0 @X0 1 a ]
[e = __s :s 109C ]
[e $U 1589  ]
[e :U 1590 ]
{
{
[e $U 1592  ]
[e :U 1593 ]
[e :U 1592 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1593  ]
[e :U 1594 ]
[e = _TXREG2 -> *U __s `uc ]
}
[e ++ __s * -> -> 1 `i `x -> -> # *U __s `i `x ]
}
[e :U 1589 ]
[e $ != -> *U __s `i -> 0 `i 1590  ]
[e :U 1591 ]
{
[e $U 1595  ]
[e :U 1596 ]
[e :U 1595 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1596  ]
[e :U 1597 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & >> -> 10 `i -> 4 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1598  ]
[e :U 1599 ]
[e :U 1598 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1599  ]
[e :U 1600 ]
[e = _TXREG2 -> *U + &U _ConvC * -> -> & -> 10 `i -> 15 `i `ui `ux -> -> # *U &U _ConvC `ui `ux `uc ]
}
{
[e $U 1601  ]
[e :U 1602 ]
[e :U 1601 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1602  ]
[e :U 1603 ]
[e = _TXREG2 -> -> 13 `ui `uc ]
}
{
[e $U 1604  ]
[e :U 1605 ]
[e :U 1604 ]
[e $ ! != -> . . _TXSTA2bits 0 1 `i -> 0 `i 1605  ]
[e :U 1606 ]
[e = _TXREG2 -> -> 10 `ui `uc ]
}
}
[e :U 1588 ]
}
[e :U 1586 ]
"3260
[; ;Source/FreeRTOS/tasks.c: 3260: }
[e :UE 1555 ]
}
"3263
[; ;Source/FreeRTOS/tasks.c: 3263: void vTaskPlaceOnEventList( List_t * const pxEventList,
[v _vTaskPlaceOnEventList `(v ~T0 @X0 1 ef2`C*S931`Cus ]
"3265
[; ;Source/FreeRTOS/tasks.c: 3265: {
{
[e :U _vTaskPlaceOnEventList ]
[v F7752 `*S931 ~T0 @X0 1 t ]
"3263
[; ;Source/FreeRTOS/tasks.c: 3263: void vTaskPlaceOnEventList( List_t * const pxEventList,
[v _pxEventList `C*S931 ~T0 @X0 1 r1 ]
"3264
[; ;Source/FreeRTOS/tasks.c: 3264:                             const TickType_t xTicksToWait )
[v _xTicksToWait `Cus ~T0 @X0 1 r2 ]
"3265
[; ;Source/FreeRTOS/tasks.c: 3265: {
[f ]
"3266
[; ;Source/FreeRTOS/tasks.c: 3266:     if( ( pxEventList ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3266 );
[e $ ! == _pxEventList -> -> 0 `i `*S931 1608  ]
[e ( _Xprintf , (. :s 110C -> 3266 `i ]
[e :U 1608 ]
"3282
[; ;Source/FreeRTOS/tasks.c: 3282:     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
[e ( _vListInsert (2 , _pxEventList &U . *U _pxCurrentTCB 2 ]
"3284
[; ;Source/FreeRTOS/tasks.c: 3284:     prvAddCurrentTaskToDelayedList( xTicksToWait, ( ( BaseType_t ) 1 ) );
[e ( _prvAddCurrentTaskToDelayedList (2 , _xTicksToWait -> -> 1 `i `c ]
"3285
[; ;Source/FreeRTOS/tasks.c: 3285: }
[e :UE 1607 ]
}
"3288
[; ;Source/FreeRTOS/tasks.c: 3288: void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
[v _vTaskPlaceOnUnorderedEventList `(v ~T0 @X0 1 ef3`*S931`Cus`Cus ]
"3291
[; ;Source/FreeRTOS/tasks.c: 3291: {
{
[e :U _vTaskPlaceOnUnorderedEventList ]
"3288
[; ;Source/FreeRTOS/tasks.c: 3288: void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
[v _pxEventList `*S931 ~T0 @X0 1 r1 ]
"3289
[; ;Source/FreeRTOS/tasks.c: 3289:                                      const TickType_t xItemValue,
[v _xItemValue `Cus ~T0 @X0 1 r2 ]
"3290
[; ;Source/FreeRTOS/tasks.c: 3290:                                      const TickType_t xTicksToWait )
[v _xTicksToWait `Cus ~T0 @X0 1 r3 ]
"3291
[; ;Source/FreeRTOS/tasks.c: 3291: {
[f ]
"3292
[; ;Source/FreeRTOS/tasks.c: 3292:     if( ( pxEventList ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3292 );
[e $ ! == _pxEventList -> -> 0 `i `*S931 1610  ]
[e ( _Xprintf , (. :s 111C -> 3292 `i ]
[e :U 1610 ]
"3296
[; ;Source/FreeRTOS/tasks.c: 3296:     if( ( uxSchedulerSuspended != 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3296 );
[e $ ! == -> != -> _uxSchedulerSuspended `i -> 0 `i `i -> 0 `i 1611  ]
[e ( _Xprintf , (. :s 112C -> 3296 `i ]
[e :U 1611 ]
"3301
[; ;Source/FreeRTOS/tasks.c: 3301:     ( ( &( pxCurrentTCB->xEventListItem ) )->xItemValue = ( xItemValue | 0x8000U ) );
[e = . *U &U . *U _pxCurrentTCB 2 0 -> | -> _xItemValue `ui -> 32768 `ui `us ]
"3308
[; ;Source/FreeRTOS/tasks.c: 3308:     { ListItem_t * const pxIndex = ( pxEventList )->pxIndex; ; ; ( &( pxCurrentTCB->xEventListItem ) )->pxNext = pxIndex; ( &( pxCurrentTCB->xEventListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( pxCurrentTCB->xEventListItem ) ); pxIndex->pxPrevious = ( &( pxCurrentTCB->xEventListItem ) ); ( &( pxCurrentTCB->xEventListItem ) )->pvContainer = ( pxEventList ); ( ( pxEventList )->uxNumberOfItems )++; };
{
[v F7759 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U _pxEventList 1 ]
[e = . *U &U . *U _pxCurrentTCB 2 1 _pxIndex ]
[e = . *U &U . *U _pxCurrentTCB 2 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxCurrentTCB 2 ]
[e = . *U _pxIndex 2 &U . *U _pxCurrentTCB 2 ]
[e = . *U &U . *U _pxCurrentTCB 2 4 _pxEventList ]
[e ++ . *U _pxEventList 0 -> -> 1 `i `Vuc ]
}
"3310
[; ;Source/FreeRTOS/tasks.c: 3310:     prvAddCurrentTaskToDelayedList( xTicksToWait, ( ( BaseType_t ) 1 ) );
[e ( _prvAddCurrentTaskToDelayedList (2 , _xTicksToWait -> -> 1 `i `c ]
"3311
[; ;Source/FreeRTOS/tasks.c: 3311: }
[e :UE 1609 ]
}
"3349
[; ;Source/FreeRTOS/tasks.c: 3349: BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
[v _xTaskRemoveFromEventList `(c ~T0 @X0 1 ef1`C*CS931 ]
"3350
[; ;Source/FreeRTOS/tasks.c: 3350: {
{
[e :U _xTaskRemoveFromEventList ]
[v F7763 `*CS931 ~T0 @X0 1 t ]
"3349
[; ;Source/FreeRTOS/tasks.c: 3349: BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
[v _pxEventList `C*CS931 ~T0 @X0 1 r1 ]
"3350
[; ;Source/FreeRTOS/tasks.c: 3350: {
[f ]
"3351
[; ;Source/FreeRTOS/tasks.c: 3351:     TCB_t * pxUnblockedTCB;
[v _pxUnblockedTCB `*S936 ~T0 @X0 1 a ]
"3352
[; ;Source/FreeRTOS/tasks.c: 3352:     BaseType_t xReturn;
[v _xReturn `c ~T0 @X0 1 a ]
"3367
[; ;Source/FreeRTOS/tasks.c: 3367:     pxUnblockedTCB = ( ( &( ( pxEventList )->xListEnd ) )->pxNext->pvOwner );
[e = _pxUnblockedTCB -> . *U . *U &U . *U _pxEventList 2 1 3 `*S936 ]
"3368
[; ;Source/FreeRTOS/tasks.c: 3368:     if( ( pxUnblockedTCB ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3368 );
[e $ ! == _pxUnblockedTCB -> -> 0 `i `*S936 1613  ]
[e ( _Xprintf , (. :s 113C -> 3368 `i ]
[e :U 1613 ]
"3369
[; ;Source/FreeRTOS/tasks.c: 3369:     { List_t * const pxList = ( &( pxUnblockedTCB->xEventListItem ) )->pvContainer; ( &( pxUnblockedTCB->xEventListItem ) )->pxNext->pxPrevious = ( &( pxUnblockedTCB->xEventListItem ) )->pxPrevious; ( &( pxUnblockedTCB->xEventListItem ) )->pxPrevious->pxNext = ( &( pxUnblockedTCB->xEventListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxUnblockedTCB->xEventListItem ) ) ) { pxList->pxIndex = ( &( pxUnblockedTCB->xEventListItem ) )->pxPrevious; } ( &( pxUnblockedTCB->xEventListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7768 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxUnblockedTCB 2 4 ]
[e = . *U . *U &U . *U _pxUnblockedTCB 2 1 2 . *U &U . *U _pxUnblockedTCB 2 2 ]
[e = . *U . *U &U . *U _pxUnblockedTCB 2 2 1 . *U &U . *U _pxUnblockedTCB 2 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxUnblockedTCB 2 1614  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxUnblockedTCB 2 2 ]
}
[e :U 1614 ]
[e = . *U &U . *U _pxUnblockedTCB 2 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"3371
[; ;Source/FreeRTOS/tasks.c: 3371:     if( uxSchedulerSuspended == ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! == -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1615  ]
"3372
[; ;Source/FreeRTOS/tasks.c: 3372:     {
{
"3373
[; ;Source/FreeRTOS/tasks.c: 3373:         { List_t * const pxList = ( &( pxUnblockedTCB->xStateListItem ) )->pvContainer; ( &( pxUnblockedTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxUnblockedTCB->xStateListItem ) )->pxPrevious; ( &( pxUnblockedTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxUnblockedTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxUnblockedTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxUnblockedTCB->xStateListItem ) )->pxPrevious; } ( &( pxUnblockedTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7770 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxUnblockedTCB 1 4 ]
[e = . *U . *U &U . *U _pxUnblockedTCB 1 1 2 . *U &U . *U _pxUnblockedTCB 1 2 ]
[e = . *U . *U &U . *U _pxUnblockedTCB 1 2 1 . *U &U . *U _pxUnblockedTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxUnblockedTCB 1 1616  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxUnblockedTCB 1 2 ]
}
[e :U 1616 ]
[e = . *U &U . *U _pxUnblockedTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"3374
[; ;Source/FreeRTOS/tasks.c: 3374:         ; { if( ( ( pxUnblockedTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxUnblockedTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxUnblockedTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxUnblockedTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxUnblockedTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxUnblockedTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxUnblockedTCB )->xStateListItem ) ); ( &( ( pxUnblockedTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxUnblockedTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxUnblockedTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxUnblockedTCB 3 `i -> _uxTopReadyPriority `i 1617  ]
{
[e = _uxTopReadyPriority . *U _pxUnblockedTCB 3 ]
}
[e :U 1617 ]
}
{
[v F7772 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxUnblockedTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxUnblockedTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxUnblockedTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxUnblockedTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxUnblockedTCB 1 ]
[e = . *U &U . *U _pxUnblockedTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxUnblockedTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxUnblockedTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"3389
[; ;Source/FreeRTOS/tasks.c: 3389:     }
}
[e $U 1618  ]
"3390
[; ;Source/FreeRTOS/tasks.c: 3390:     else
[e :U 1615 ]
"3391
[; ;Source/FreeRTOS/tasks.c: 3391:     {
{
"3394
[; ;Source/FreeRTOS/tasks.c: 3394:         { ListItem_t * const pxIndex = ( &( xPendingReadyList ) )->pxIndex; ; ; ( &( pxUnblockedTCB->xEventListItem ) )->pxNext = pxIndex; ( &( pxUnblockedTCB->xEventListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( pxUnblockedTCB->xEventListItem ) ); pxIndex->pxPrevious = ( &( pxUnblockedTCB->xEventListItem ) ); ( &( pxUnblockedTCB->xEventListItem ) )->pvContainer = ( &( xPendingReadyList ) ); ( ( &( xPendingReadyList ) )->uxNumberOfItems )++; };
{
[v F7774 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U _xPendingReadyList 1 ]
[e = . *U &U . *U _pxUnblockedTCB 2 1 _pxIndex ]
[e = . *U &U . *U _pxUnblockedTCB 2 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxUnblockedTCB 2 ]
[e = . *U _pxIndex 2 &U . *U _pxUnblockedTCB 2 ]
[e = . *U &U . *U _pxUnblockedTCB 2 4 &U _xPendingReadyList ]
[e ++ . *U &U _xPendingReadyList 0 -> -> 1 `i `Vuc ]
}
"3395
[; ;Source/FreeRTOS/tasks.c: 3395:     }
}
[e :U 1618 ]
"3397
[; ;Source/FreeRTOS/tasks.c: 3397:     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
[e $ ! > -> . *U _pxUnblockedTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1619  ]
"3398
[; ;Source/FreeRTOS/tasks.c: 3398:     {
{
"3402
[; ;Source/FreeRTOS/tasks.c: 3402:         xReturn = ( ( BaseType_t ) 1 );
[e = _xReturn -> -> 1 `i `c ]
"3406
[; ;Source/FreeRTOS/tasks.c: 3406:         xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"3407
[; ;Source/FreeRTOS/tasks.c: 3407:     }
}
[e $U 1620  ]
"3408
[; ;Source/FreeRTOS/tasks.c: 3408:     else
[e :U 1619 ]
"3409
[; ;Source/FreeRTOS/tasks.c: 3409:     {
{
"3410
[; ;Source/FreeRTOS/tasks.c: 3410:         xReturn = ( ( BaseType_t ) 0 );
[e = _xReturn -> -> 0 `i `c ]
"3411
[; ;Source/FreeRTOS/tasks.c: 3411:     }
}
[e :U 1620 ]
"3413
[; ;Source/FreeRTOS/tasks.c: 3413:     return xReturn;
[e ) _xReturn ]
[e $UE 1612  ]
"3414
[; ;Source/FreeRTOS/tasks.c: 3414: }
[e :UE 1612 ]
}
"3417
[; ;Source/FreeRTOS/tasks.c: 3417: void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
[v _vTaskRemoveFromUnorderedEventList `(v ~T0 @X0 1 ef2`*S930`Cus ]
"3419
[; ;Source/FreeRTOS/tasks.c: 3419: {
{
[e :U _vTaskRemoveFromUnorderedEventList ]
"3417
[; ;Source/FreeRTOS/tasks.c: 3417: void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
[v _pxEventListItem `*S930 ~T0 @X0 1 r1 ]
"3418
[; ;Source/FreeRTOS/tasks.c: 3418:                                         const TickType_t xItemValue )
[v _xItemValue `Cus ~T0 @X0 1 r2 ]
"3419
[; ;Source/FreeRTOS/tasks.c: 3419: {
[f ]
"3420
[; ;Source/FreeRTOS/tasks.c: 3420:     TCB_t * pxUnblockedTCB;
[v _pxUnblockedTCB `*S936 ~T0 @X0 1 a ]
"3424
[; ;Source/FreeRTOS/tasks.c: 3424:     if( ( uxSchedulerSuspended != ( ( BaseType_t ) 0 ) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3424 );
[e $ ! == -> != -> _uxSchedulerSuspended `i -> -> -> 0 `i `c `i `i -> 0 `i 1622  ]
[e ( _Xprintf , (. :s 114C -> 3424 `i ]
[e :U 1622 ]
"3427
[; ;Source/FreeRTOS/tasks.c: 3427:     ( ( pxEventListItem )->xItemValue = ( xItemValue | 0x8000U ) );
[e = . *U _pxEventListItem 0 -> | -> _xItemValue `ui -> 32768 `ui `us ]
"3431
[; ;Source/FreeRTOS/tasks.c: 3431:     pxUnblockedTCB = ( ( pxEventListItem )->pvOwner );
[e = _pxUnblockedTCB -> . *U _pxEventListItem 3 `*S936 ]
"3432
[; ;Source/FreeRTOS/tasks.c: 3432:     if( ( pxUnblockedTCB ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3432 );
[e $ ! == _pxUnblockedTCB -> -> 0 `i `*S936 1623  ]
[e ( _Xprintf , (. :s 115C -> 3432 `i ]
[e :U 1623 ]
"3433
[; ;Source/FreeRTOS/tasks.c: 3433:     { List_t * const pxList = ( pxEventListItem )->pvContainer; ( pxEventListItem )->pxNext->pxPrevious = ( pxEventListItem )->pxPrevious; ( pxEventListItem )->pxPrevious->pxNext = ( pxEventListItem )->pxNext; if( pxList->pxIndex == ( pxEventListItem ) ) { pxList->pxIndex = ( pxEventListItem )->pxPrevious; } ( pxEventListItem )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7780 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U _pxEventListItem 4 ]
[e = . *U . *U _pxEventListItem 1 2 . *U _pxEventListItem 2 ]
[e = . *U . *U _pxEventListItem 2 1 . *U _pxEventListItem 1 ]
[e $ ! == . *U _pxList 1 _pxEventListItem 1624  ]
{
[e = . *U _pxList 1 . *U _pxEventListItem 2 ]
}
[e :U 1624 ]
[e = . *U _pxEventListItem 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"3452
[; ;Source/FreeRTOS/tasks.c: 3452:     { List_t * const pxList = ( &( pxUnblockedTCB->xStateListItem ) )->pvContainer; ( &( pxUnblockedTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxUnblockedTCB->xStateListItem ) )->pxPrevious; ( &( pxUnblockedTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxUnblockedTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxUnblockedTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxUnblockedTCB->xStateListItem ) )->pxPrevious; } ( &( pxUnblockedTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7782 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxUnblockedTCB 1 4 ]
[e = . *U . *U &U . *U _pxUnblockedTCB 1 1 2 . *U &U . *U _pxUnblockedTCB 1 2 ]
[e = . *U . *U &U . *U _pxUnblockedTCB 1 2 1 . *U &U . *U _pxUnblockedTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxUnblockedTCB 1 1625  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxUnblockedTCB 1 2 ]
}
[e :U 1625 ]
[e = . *U &U . *U _pxUnblockedTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"3453
[; ;Source/FreeRTOS/tasks.c: 3453:     ; { if( ( ( pxUnblockedTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxUnblockedTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxUnblockedTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxUnblockedTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxUnblockedTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxUnblockedTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxUnblockedTCB )->xStateListItem ) ); ( &( ( pxUnblockedTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxUnblockedTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxUnblockedTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxUnblockedTCB 3 `i -> _uxTopReadyPriority `i 1626  ]
{
[e = _uxTopReadyPriority . *U _pxUnblockedTCB 3 ]
}
[e :U 1626 ]
}
{
[v F7784 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxUnblockedTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxUnblockedTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxUnblockedTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxUnblockedTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxUnblockedTCB 1 ]
[e = . *U &U . *U _pxUnblockedTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxUnblockedTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxUnblockedTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"3455
[; ;Source/FreeRTOS/tasks.c: 3455:     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
[e $ ! > -> . *U _pxUnblockedTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1627  ]
"3456
[; ;Source/FreeRTOS/tasks.c: 3456:     {
{
"3461
[; ;Source/FreeRTOS/tasks.c: 3461:         xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"3462
[; ;Source/FreeRTOS/tasks.c: 3462:     }
}
[e :U 1627 ]
"3463
[; ;Source/FreeRTOS/tasks.c: 3463: }
[e :UE 1621 ]
}
"3466
[; ;Source/FreeRTOS/tasks.c: 3466: void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
[v _vTaskSetTimeOutState `(v ~T0 @X0 1 ef1`C*S937 ]
"3467
[; ;Source/FreeRTOS/tasks.c: 3467: {
{
[e :U _vTaskSetTimeOutState ]
[v F7788 `*S937 ~T0 @X0 1 t ]
"3466
[; ;Source/FreeRTOS/tasks.c: 3466: void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
[v _pxTimeOut `C*S937 ~T0 @X0 1 r1 ]
"3467
[; ;Source/FreeRTOS/tasks.c: 3467: {
[f ]
"3468
[; ;Source/FreeRTOS/tasks.c: 3468:     if( ( pxTimeOut ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3468 );
[e $ ! == _pxTimeOut -> -> 0 `i `*S937 1629  ]
[e ( _Xprintf , (. :s 116C -> 3468 `i ]
[e :U 1629 ]
"3469
[; ;Source/FreeRTOS/tasks.c: 3469:     POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"3470
[; ;Source/FreeRTOS/tasks.c: 3470:     {
{
"3471
[; ;Source/FreeRTOS/tasks.c: 3471:         pxTimeOut->xOverflowCount = xNumOfOverflows;
[e = . *U _pxTimeOut 0 _xNumOfOverflows ]
"3472
[; ;Source/FreeRTOS/tasks.c: 3472:         pxTimeOut->xTimeOnEntering = xTickCount;
[e = . *U _pxTimeOut 1 _xTickCount ]
"3473
[; ;Source/FreeRTOS/tasks.c: 3473:     }
}
"3474
[; ;Source/FreeRTOS/tasks.c: 3474:     __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1630  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1630 ]
"3475
[; ;Source/FreeRTOS/tasks.c: 3475: }
[e :UE 1628 ]
}
"3478
[; ;Source/FreeRTOS/tasks.c: 3478: void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
[v _vTaskInternalSetTimeOutState `(v ~T0 @X0 1 ef1`C*S937 ]
"3479
[; ;Source/FreeRTOS/tasks.c: 3479: {
{
[e :U _vTaskInternalSetTimeOutState ]
[v F7792 `*S937 ~T0 @X0 1 t ]
"3478
[; ;Source/FreeRTOS/tasks.c: 3478: void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
[v _pxTimeOut `C*S937 ~T0 @X0 1 r1 ]
"3479
[; ;Source/FreeRTOS/tasks.c: 3479: {
[f ]
"3481
[; ;Source/FreeRTOS/tasks.c: 3481:     pxTimeOut->xOverflowCount = xNumOfOverflows;
[e = . *U _pxTimeOut 0 _xNumOfOverflows ]
"3482
[; ;Source/FreeRTOS/tasks.c: 3482:     pxTimeOut->xTimeOnEntering = xTickCount;
[e = . *U _pxTimeOut 1 _xTickCount ]
"3483
[; ;Source/FreeRTOS/tasks.c: 3483: }
[e :UE 1631 ]
}
"3486
[; ;Source/FreeRTOS/tasks.c: 3486: BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
[v _xTaskCheckForTimeOut `(c ~T0 @X0 1 ef2`C*S937`C*us ]
"3488
[; ;Source/FreeRTOS/tasks.c: 3488: {
{
[e :U _xTaskCheckForTimeOut ]
[v F7797 `*S937 ~T0 @X0 1 t ]
"3486
[; ;Source/FreeRTOS/tasks.c: 3486: BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
[v _pxTimeOut `C*S937 ~T0 @X0 1 r1 ]
[v F7799 `*us ~T0 @X0 1 t ]
"3487
[; ;Source/FreeRTOS/tasks.c: 3487:                                  TickType_t * const pxTicksToWait )
[v _pxTicksToWait `C*us ~T0 @X0 1 r2 ]
"3488
[; ;Source/FreeRTOS/tasks.c: 3488: {
[f ]
"3489
[; ;Source/FreeRTOS/tasks.c: 3489:     BaseType_t xReturn;
[v _xReturn `c ~T0 @X0 1 a ]
"3491
[; ;Source/FreeRTOS/tasks.c: 3491:     if( ( pxTimeOut ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3491 );
[e $ ! == _pxTimeOut -> -> 0 `i `*S937 1633  ]
[e ( _Xprintf , (. :s 117C -> 3491 `i ]
[e :U 1633 ]
"3492
[; ;Source/FreeRTOS/tasks.c: 3492:     if( ( pxTicksToWait ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 3492 );
[e $ ! == _pxTicksToWait -> -> 0 `i `*us 1634  ]
[e ( _Xprintf , (. :s 118C -> 3492 `i ]
[e :U 1634 ]
"3494
[; ;Source/FreeRTOS/tasks.c: 3494:     POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"3495
[; ;Source/FreeRTOS/tasks.c: 3495:     {
{
"3497
[; ;Source/FreeRTOS/tasks.c: 3497:         const TickType_t xConstTickCount = xTickCount;
[v _xConstTickCount `Cus ~T0 @X0 1 a ]
[e = _xConstTickCount _xTickCount ]
"3498
[; ;Source/FreeRTOS/tasks.c: 3498:         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
[v _xElapsedTime `Cus ~T0 @X0 1 a ]
[e = _xElapsedTime -> - -> _xConstTickCount `ui -> . *U _pxTimeOut 1 `ui `us ]
"3512
[; ;Source/FreeRTOS/tasks.c: 3512:             if( *pxTicksToWait == ( TickType_t ) 0xffff )
[e $ ! == -> *U _pxTicksToWait `ui -> -> -> 65535 `ui `us `ui 1635  ]
"3513
[; ;Source/FreeRTOS/tasks.c: 3513:             {
{
"3517
[; ;Source/FreeRTOS/tasks.c: 3517:                 xReturn = ( ( BaseType_t ) 0 );
[e = _xReturn -> -> 0 `i `c ]
"3518
[; ;Source/FreeRTOS/tasks.c: 3518:             }
}
[e $U 1636  ]
"3519
[; ;Source/FreeRTOS/tasks.c: 3519:             else
[e :U 1635 ]
"3522
[; ;Source/FreeRTOS/tasks.c: 3522:         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
[e $ ! && != -> _xNumOfOverflows `i -> . *U _pxTimeOut 0 `i >= -> _xConstTickCount `ui -> . *U _pxTimeOut 1 `ui 1637  ]
"3523
[; ;Source/FreeRTOS/tasks.c: 3523:         {
{
"3529
[; ;Source/FreeRTOS/tasks.c: 3529:             xReturn = ( ( BaseType_t ) 1 );
[e = _xReturn -> -> 1 `i `c ]
"3530
[; ;Source/FreeRTOS/tasks.c: 3530:             *pxTicksToWait = ( TickType_t ) 0;
[e = *U _pxTicksToWait -> -> 0 `i `us ]
"3531
[; ;Source/FreeRTOS/tasks.c: 3531:         }
}
[e $U 1638  ]
"3532
[; ;Source/FreeRTOS/tasks.c: 3532:         else if( xElapsedTime < *pxTicksToWait )
[e :U 1637 ]
[e $ ! < -> _xElapsedTime `ui -> *U _pxTicksToWait `ui 1639  ]
"3533
[; ;Source/FreeRTOS/tasks.c: 3533:         {
{
"3535
[; ;Source/FreeRTOS/tasks.c: 3535:             *pxTicksToWait -= xElapsedTime;
[e =- *U _pxTicksToWait -> _xElapsedTime `us ]
"3536
[; ;Source/FreeRTOS/tasks.c: 3536:             vTaskInternalSetTimeOutState( pxTimeOut );
[e ( _vTaskInternalSetTimeOutState (1 _pxTimeOut ]
"3537
[; ;Source/FreeRTOS/tasks.c: 3537:             xReturn = ( ( BaseType_t ) 0 );
[e = _xReturn -> -> 0 `i `c ]
"3538
[; ;Source/FreeRTOS/tasks.c: 3538:         }
}
[e $U 1640  ]
"3539
[; ;Source/FreeRTOS/tasks.c: 3539:         else
[e :U 1639 ]
"3540
[; ;Source/FreeRTOS/tasks.c: 3540:         {
{
"3541
[; ;Source/FreeRTOS/tasks.c: 3541:             *pxTicksToWait = ( TickType_t ) 0;
[e = *U _pxTicksToWait -> -> 0 `i `us ]
"3542
[; ;Source/FreeRTOS/tasks.c: 3542:             xReturn = ( ( BaseType_t ) 1 );
[e = _xReturn -> -> 1 `i `c ]
"3543
[; ;Source/FreeRTOS/tasks.c: 3543:         }
}
[e :U 1640 ]
[e :U 1638 ]
[e :U 1636 ]
"3544
[; ;Source/FreeRTOS/tasks.c: 3544:     }
}
"3545
[; ;Source/FreeRTOS/tasks.c: 3545:     __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1641  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1641 ]
"3547
[; ;Source/FreeRTOS/tasks.c: 3547:     return xReturn;
[e ) _xReturn ]
[e $UE 1632  ]
"3548
[; ;Source/FreeRTOS/tasks.c: 3548: }
[e :UE 1632 ]
}
"3551
[; ;Source/FreeRTOS/tasks.c: 3551: void vTaskMissedYield( void )
[v _vTaskMissedYield `(v ~T0 @X0 1 ef ]
"3552
[; ;Source/FreeRTOS/tasks.c: 3552: {
{
[e :U _vTaskMissedYield ]
[f ]
"3553
[; ;Source/FreeRTOS/tasks.c: 3553:     xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"3554
[; ;Source/FreeRTOS/tasks.c: 3554: }
[e :UE 1642 ]
}
"3559
[; ;Source/FreeRTOS/tasks.c: 3559:     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
[v _uxTaskGetTaskNumber `(uc ~T0 @X0 1 ef1`*S936 ]
"3560
[; ;Source/FreeRTOS/tasks.c: 3560:     {
{
[e :U _uxTaskGetTaskNumber ]
"3559
[; ;Source/FreeRTOS/tasks.c: 3559:     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"3560
[; ;Source/FreeRTOS/tasks.c: 3560:     {
[f ]
"3561
[; ;Source/FreeRTOS/tasks.c: 3561:         UBaseType_t uxReturn;
[v _uxReturn `uc ~T0 @X0 1 a ]
"3562
[; ;Source/FreeRTOS/tasks.c: 3562:         TCB_t const * pxTCB;
[v _pxTCB `*CS936 ~T0 @X0 1 a ]
"3564
[; ;Source/FreeRTOS/tasks.c: 3564:         if( xTask != ((void*)0) )
[e $ ! != _xTask -> -> -> 0 `i `*v `*S936 1644  ]
"3565
[; ;Source/FreeRTOS/tasks.c: 3565:         {
{
"3566
[; ;Source/FreeRTOS/tasks.c: 3566:             pxTCB = xTask;
[e = _pxTCB -> _xTask `*CS936 ]
"3567
[; ;Source/FreeRTOS/tasks.c: 3567:             uxReturn = pxTCB->uxTaskNumber;
[e = _uxReturn . *U _pxTCB 8 ]
"3568
[; ;Source/FreeRTOS/tasks.c: 3568:         }
}
[e $U 1645  ]
"3569
[; ;Source/FreeRTOS/tasks.c: 3569:         else
[e :U 1644 ]
"3570
[; ;Source/FreeRTOS/tasks.c: 3570:         {
{
"3571
[; ;Source/FreeRTOS/tasks.c: 3571:             uxReturn = 0U;
[e = _uxReturn -> -> 0 `ui `uc ]
"3572
[; ;Source/FreeRTOS/tasks.c: 3572:         }
}
[e :U 1645 ]
"3574
[; ;Source/FreeRTOS/tasks.c: 3574:         return uxReturn;
[e ) _uxReturn ]
[e $UE 1643  ]
"3575
[; ;Source/FreeRTOS/tasks.c: 3575:     }
[e :UE 1643 ]
}
"3582
[; ;Source/FreeRTOS/tasks.c: 3582:     void vTaskSetTaskNumber( TaskHandle_t xTask,
[v _vTaskSetTaskNumber `(v ~T0 @X0 1 ef2`*S936`Cuc ]
"3584
[; ;Source/FreeRTOS/tasks.c: 3584:     {
{
[e :U _vTaskSetTaskNumber ]
"3582
[; ;Source/FreeRTOS/tasks.c: 3582:     void vTaskSetTaskNumber( TaskHandle_t xTask,
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"3583
[; ;Source/FreeRTOS/tasks.c: 3583:                              const UBaseType_t uxHandle )
[v _uxHandle `Cuc ~T0 @X0 1 r2 ]
"3584
[; ;Source/FreeRTOS/tasks.c: 3584:     {
[f ]
"3585
[; ;Source/FreeRTOS/tasks.c: 3585:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"3587
[; ;Source/FreeRTOS/tasks.c: 3587:         if( xTask != ((void*)0) )
[e $ ! != _xTask -> -> -> 0 `i `*v `*S936 1647  ]
"3588
[; ;Source/FreeRTOS/tasks.c: 3588:         {
{
"3589
[; ;Source/FreeRTOS/tasks.c: 3589:             pxTCB = xTask;
[e = _pxTCB _xTask ]
"3590
[; ;Source/FreeRTOS/tasks.c: 3590:             pxTCB->uxTaskNumber = uxHandle;
[e = . *U _pxTCB 8 _uxHandle ]
"3591
[; ;Source/FreeRTOS/tasks.c: 3591:         }
}
[e :U 1647 ]
"3592
[; ;Source/FreeRTOS/tasks.c: 3592:     }
[e :UE 1646 ]
}
"3607
[; ;Source/FreeRTOS/tasks.c: 3607: static void prvIdleTask( void *pvParameters )
[v _prvIdleTask `(v ~T0 @X0 1 sf1`*v ]
"3608
[; ;Source/FreeRTOS/tasks.c: 3608: {
{
[e :U _prvIdleTask ]
"3607
[; ;Source/FreeRTOS/tasks.c: 3607: static void prvIdleTask( void *pvParameters )
[v _pvParameters `*v ~T0 @X0 1 r1 ]
"3608
[; ;Source/FreeRTOS/tasks.c: 3608: {
[f ]
"3610
[; ;Source/FreeRTOS/tasks.c: 3610:     ( void ) pvParameters;
[e _pvParameters ]
"3620
[; ;Source/FreeRTOS/tasks.c: 3620:     for( ; ; )
{
[e :U 1649 ]
"3621
[; ;Source/FreeRTOS/tasks.c: 3621:     {
{
"3624
[; ;Source/FreeRTOS/tasks.c: 3624:         prvCheckTasksWaitingTermination();
[e ( _prvCheckTasksWaitingTermination ..  ]
"3637
[; ;Source/FreeRTOS/tasks.c: 3637:         {
{
"3647
[; ;Source/FreeRTOS/tasks.c: 3647:             if( ( ( &( pxReadyTasksLists[ ( ( UBaseType_t ) 0U ) ] ) )->uxNumberOfItems ) > ( UBaseType_t ) 1 )
[e $ ! > -> . *U &U *U + &U _pxReadyTasksLists * -> -> -> 0 `ui `uc `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 `i -> -> -> 1 `i `uc `i 1652  ]
"3648
[; ;Source/FreeRTOS/tasks.c: 3648:             {
{
"3649
[; ;Source/FreeRTOS/tasks.c: 3649:                 vPortYield();
[e ( _vPortYield ..  ]
"3650
[; ;Source/FreeRTOS/tasks.c: 3650:             }
}
[e $U 1653  ]
"3651
[; ;Source/FreeRTOS/tasks.c: 3651:             else
[e :U 1652 ]
"3652
[; ;Source/FreeRTOS/tasks.c: 3652:             {
{
"3654
[; ;Source/FreeRTOS/tasks.c: 3654:             }
}
[e :U 1653 ]
"3655
[; ;Source/FreeRTOS/tasks.c: 3655:         }
}
"3720
[; ;Source/FreeRTOS/tasks.c: 3720:     }
}
[e $U 1649  ]
[e :U 1650 ]
}
"3721
[; ;Source/FreeRTOS/tasks.c: 3721: }
[e :UE 1648 ]
}
"3837
[; ;Source/FreeRTOS/tasks.c: 3837: static void prvInitialiseTaskLists( void )
[v _prvInitialiseTaskLists `(v ~T0 @X0 1 sf ]
"3838
[; ;Source/FreeRTOS/tasks.c: 3838: {
{
[e :U _prvInitialiseTaskLists ]
[f ]
"3839
[; ;Source/FreeRTOS/tasks.c: 3839:     UBaseType_t uxPriority;
[v _uxPriority `uc ~T0 @X0 1 a ]
"3841
[; ;Source/FreeRTOS/tasks.c: 3841:     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) ( 3 ); uxPriority++ )
{
[e = _uxPriority -> -> 0 `ui `uc ]
[e $ < -> _uxPriority `i -> -> -> 3 `i `uc `i 1655  ]
[e $U 1656  ]
[e :U 1655 ]
"3842
[; ;Source/FreeRTOS/tasks.c: 3842:     {
{
"3843
[; ;Source/FreeRTOS/tasks.c: 3843:         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
[e ( _vListInitialise (1 &U *U + &U _pxReadyTasksLists * -> _uxPriority `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
"3844
[; ;Source/FreeRTOS/tasks.c: 3844:     }
}
[e ++ _uxPriority -> -> 1 `i `uc ]
[e $ < -> _uxPriority `i -> -> -> 3 `i `uc `i 1655  ]
[e :U 1656 ]
}
"3846
[; ;Source/FreeRTOS/tasks.c: 3846:     vListInitialise( &xDelayedTaskList1 );
[e ( _vListInitialise (1 &U _xDelayedTaskList1 ]
"3847
[; ;Source/FreeRTOS/tasks.c: 3847:     vListInitialise( &xDelayedTaskList2 );
[e ( _vListInitialise (1 &U _xDelayedTaskList2 ]
"3848
[; ;Source/FreeRTOS/tasks.c: 3848:     vListInitialise( &xPendingReadyList );
[e ( _vListInitialise (1 &U _xPendingReadyList ]
"3851
[; ;Source/FreeRTOS/tasks.c: 3851:     {
{
"3852
[; ;Source/FreeRTOS/tasks.c: 3852:         vListInitialise( &xTasksWaitingTermination );
[e ( _vListInitialise (1 &U _xTasksWaitingTermination ]
"3853
[; ;Source/FreeRTOS/tasks.c: 3853:     }
}
"3857
[; ;Source/FreeRTOS/tasks.c: 3857:     {
{
"3858
[; ;Source/FreeRTOS/tasks.c: 3858:         vListInitialise( &xSuspendedTaskList );
[e ( _vListInitialise (1 &U _xSuspendedTaskList ]
"3859
[; ;Source/FreeRTOS/tasks.c: 3859:     }
}
"3864
[; ;Source/FreeRTOS/tasks.c: 3864:     pxDelayedTaskList = &xDelayedTaskList1;
[e = _pxDelayedTaskList &U _xDelayedTaskList1 ]
"3865
[; ;Source/FreeRTOS/tasks.c: 3865:     pxOverflowDelayedTaskList = &xDelayedTaskList2;
[e = _pxOverflowDelayedTaskList &U _xDelayedTaskList2 ]
"3866
[; ;Source/FreeRTOS/tasks.c: 3866: }
[e :UE 1654 ]
}
"3869
[; ;Source/FreeRTOS/tasks.c: 3869: static void prvCheckTasksWaitingTermination( void )
[v _prvCheckTasksWaitingTermination `(v ~T0 @X0 1 sf ]
"3870
[; ;Source/FreeRTOS/tasks.c: 3870: {
{
[e :U _prvCheckTasksWaitingTermination ]
[f ]
"3874
[; ;Source/FreeRTOS/tasks.c: 3874:     {
{
"3875
[; ;Source/FreeRTOS/tasks.c: 3875:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"3879
[; ;Source/FreeRTOS/tasks.c: 3879:         while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
[e $U 1659  ]
[e :U 1660 ]
"3880
[; ;Source/FreeRTOS/tasks.c: 3880:         {
{
"3881
[; ;Source/FreeRTOS/tasks.c: 3881:             POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"3882
[; ;Source/FreeRTOS/tasks.c: 3882:             {
{
"3883
[; ;Source/FreeRTOS/tasks.c: 3883:                 pxTCB = ( ( &( ( ( &xTasksWaitingTermination ) )->xListEnd ) )->pxNext->pvOwner );
[e = _pxTCB -> . *U . *U &U . *U &U _xTasksWaitingTermination 2 1 3 `*S936 ]
"3884
[; ;Source/FreeRTOS/tasks.c: 3884:                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
[e ( _uxListRemove (1 &U . *U _pxTCB 1 ]
"3885
[; ;Source/FreeRTOS/tasks.c: 3885:                 --uxCurrentNumberOfTasks;
[e =- _uxCurrentNumberOfTasks -> -> 1 `i `Vuc ]
"3886
[; ;Source/FreeRTOS/tasks.c: 3886:                 --uxDeletedTasksWaitingCleanUp;
[e =- _uxDeletedTasksWaitingCleanUp -> -> 1 `i `Vuc ]
"3887
[; ;Source/FreeRTOS/tasks.c: 3887:             }
}
"3888
[; ;Source/FreeRTOS/tasks.c: 3888:             __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1662  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1662 ]
"3890
[; ;Source/FreeRTOS/tasks.c: 3890:             prvDeleteTCB( pxTCB );
[e ( _prvDeleteTCB (1 _pxTCB ]
"3891
[; ;Source/FreeRTOS/tasks.c: 3891:         }
}
[e :U 1659 ]
"3879
[; ;Source/FreeRTOS/tasks.c: 3879:         while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
[e $ > -> _uxDeletedTasksWaitingCleanUp `i -> -> -> 0 `ui `uc `i 1660  ]
[e :U 1661 ]
"3892
[; ;Source/FreeRTOS/tasks.c: 3892:     }
}
"3894
[; ;Source/FreeRTOS/tasks.c: 3894: }
[e :UE 1658 ]
}
"3899
[; ;Source/FreeRTOS/tasks.c: 3899:     void vTaskGetInfo( TaskHandle_t xTask,
[v _vTaskGetInfo `(v ~T0 @X0 1 ef4`*S936`*S940`c`E7129 ]
"3903
[; ;Source/FreeRTOS/tasks.c: 3903:     {
{
[e :U _vTaskGetInfo ]
"3899
[; ;Source/FreeRTOS/tasks.c: 3899:     void vTaskGetInfo( TaskHandle_t xTask,
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"3900
[; ;Source/FreeRTOS/tasks.c: 3900:                        TaskStatus_t * pxTaskStatus,
[v _pxTaskStatus `*S940 ~T0 @X0 1 r2 ]
"3901
[; ;Source/FreeRTOS/tasks.c: 3901:                        BaseType_t xGetFreeStackSpace,
[v _xGetFreeStackSpace `c ~T0 @X0 1 r3 ]
"3902
[; ;Source/FreeRTOS/tasks.c: 3902:                        eTaskState eState )
[v _eState `E7129 ~T0 @X0 1 r4 ]
"3903
[; ;Source/FreeRTOS/tasks.c: 3903:     {
[f ]
"3904
[; ;Source/FreeRTOS/tasks.c: 3904:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"3907
[; ;Source/FreeRTOS/tasks.c: 3907:         pxTCB = ( ( ( xTask ) == ((void*)0) ) ? pxCurrentTCB : ( xTask ) );
[e = _pxTCB ? == _xTask -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTask ]
"3909
[; ;Source/FreeRTOS/tasks.c: 3909:         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
[e = . *U _pxTaskStatus 0 _pxTCB ]
"3910
[; ;Source/FreeRTOS/tasks.c: 3910:         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
[e = . *U _pxTaskStatus 1 -> &U *U + &U . *U _pxTCB 5 * -> -> -> 0 `i `ui `ux -> -> # *U &U . *U _pxTCB 5 `ui `ux `*Cuc ]
"3911
[; ;Source/FreeRTOS/tasks.c: 3911:         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
[e = . *U _pxTaskStatus 4 . *U _pxTCB 3 ]
"3912
[; ;Source/FreeRTOS/tasks.c: 3912:         pxTaskStatus->pxStackBase = pxTCB->pxStack;
[e = . *U _pxTaskStatus 7 . *U _pxTCB 4 ]
"3917
[; ;Source/FreeRTOS/tasks.c: 3917:         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
[e = . *U _pxTaskStatus 2 . *U _pxTCB 7 ]
"3924
[; ;Source/FreeRTOS/tasks.c: 3924:         {
{
"3925
[; ;Source/FreeRTOS/tasks.c: 3925:             pxTaskStatus->uxBasePriority = 0;
[e = . *U _pxTaskStatus 5 -> -> 0 `i `uc ]
"3926
[; ;Source/FreeRTOS/tasks.c: 3926:         }
}
"3934
[; ;Source/FreeRTOS/tasks.c: 3934:         {
{
"3935
[; ;Source/FreeRTOS/tasks.c: 3935:             pxTaskStatus->ulRunTimeCounter = ( uint32_t ) 0;
[e = . *U _pxTaskStatus 6 -> -> 0 `i `ul ]
"3936
[; ;Source/FreeRTOS/tasks.c: 3936:         }
}
"3942
[; ;Source/FreeRTOS/tasks.c: 3942:         if( eState != eInvalid )
[e $ ! != -> _eState `ui -> . `E7129 5 `ui 1664  ]
"3943
[; ;Source/FreeRTOS/tasks.c: 3943:         {
{
"3944
[; ;Source/FreeRTOS/tasks.c: 3944:             if( pxTCB == pxCurrentTCB )
[e $ ! == _pxTCB _pxCurrentTCB 1665  ]
"3945
[; ;Source/FreeRTOS/tasks.c: 3945:             {
{
"3946
[; ;Source/FreeRTOS/tasks.c: 3946:                 pxTaskStatus->eCurrentState = eRunning;
[e = . *U _pxTaskStatus 3 . `E7129 0 ]
"3947
[; ;Source/FreeRTOS/tasks.c: 3947:             }
}
[e $U 1666  ]
"3948
[; ;Source/FreeRTOS/tasks.c: 3948:             else
[e :U 1665 ]
"3949
[; ;Source/FreeRTOS/tasks.c: 3949:             {
{
"3950
[; ;Source/FreeRTOS/tasks.c: 3950:                 pxTaskStatus->eCurrentState = eState;
[e = . *U _pxTaskStatus 3 _eState ]
"3953
[; ;Source/FreeRTOS/tasks.c: 3953:                 {
{
"3957
[; ;Source/FreeRTOS/tasks.c: 3957:                     if( eState == eSuspended )
[e $ ! == -> _eState `ui -> . `E7129 3 `ui 1667  ]
"3958
[; ;Source/FreeRTOS/tasks.c: 3958:                     {
{
"3959
[; ;Source/FreeRTOS/tasks.c: 3959:                         vTaskSuspendAll();
[e ( _vTaskSuspendAll ..  ]
"3960
[; ;Source/FreeRTOS/tasks.c: 3960:                         {
{
"3961
[; ;Source/FreeRTOS/tasks.c: 3961:                             if( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) != ((void*)0) )
[e $ ! != . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 1668  ]
"3962
[; ;Source/FreeRTOS/tasks.c: 3962:                             {
{
"3963
[; ;Source/FreeRTOS/tasks.c: 3963:                                 pxTaskStatus->eCurrentState = eBlocked;
[e = . *U _pxTaskStatus 3 . `E7129 2 ]
"3964
[; ;Source/FreeRTOS/tasks.c: 3964:                             }
}
[e :U 1668 ]
"3965
[; ;Source/FreeRTOS/tasks.c: 3965:                         }
}
"3966
[; ;Source/FreeRTOS/tasks.c: 3966:                         ( void ) xTaskResumeAll();
[e ( _xTaskResumeAll ..  ]
"3967
[; ;Source/FreeRTOS/tasks.c: 3967:                     }
}
[e :U 1667 ]
"3968
[; ;Source/FreeRTOS/tasks.c: 3968:                 }
}
"3970
[; ;Source/FreeRTOS/tasks.c: 3970:             }
}
[e :U 1666 ]
"3971
[; ;Source/FreeRTOS/tasks.c: 3971:         }
}
[e $U 1669  ]
"3972
[; ;Source/FreeRTOS/tasks.c: 3972:         else
[e :U 1664 ]
"3973
[; ;Source/FreeRTOS/tasks.c: 3973:         {
{
"3974
[; ;Source/FreeRTOS/tasks.c: 3974:             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
[e = . *U _pxTaskStatus 3 ( _eTaskGetState (1 _pxTCB ]
"3975
[; ;Source/FreeRTOS/tasks.c: 3975:         }
}
[e :U 1669 ]
"3979
[; ;Source/FreeRTOS/tasks.c: 3979:         if( xGetFreeStackSpace != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xGetFreeStackSpace `i -> -> -> 0 `i `c `i 1670  ]
"3980
[; ;Source/FreeRTOS/tasks.c: 3980:         {
{
"3982
[; ;Source/FreeRTOS/tasks.c: 3982:             {
{
"3983
[; ;Source/FreeRTOS/tasks.c: 3983:                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfStack );
[e = . *U _pxTaskStatus 8 ( _prvTaskCheckFreeStackSpace (1 -> . *U _pxTCB 6 `*Cuc ]
"3984
[; ;Source/FreeRTOS/tasks.c: 3984:             }
}
"3990
[; ;Source/FreeRTOS/tasks.c: 3990:         }
}
[e $U 1671  ]
"3991
[; ;Source/FreeRTOS/tasks.c: 3991:         else
[e :U 1670 ]
"3992
[; ;Source/FreeRTOS/tasks.c: 3992:         {
{
"3993
[; ;Source/FreeRTOS/tasks.c: 3993:             pxTaskStatus->usStackHighWaterMark = 0;
[e = . *U _pxTaskStatus 8 -> -> 0 `i `us ]
"3994
[; ;Source/FreeRTOS/tasks.c: 3994:         }
}
[e :U 1671 ]
"3995
[; ;Source/FreeRTOS/tasks.c: 3995:     }
[e :UE 1663 ]
}
"4002
[; ;Source/FreeRTOS/tasks.c: 4002:     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
[v _prvListTasksWithinSingleList `(uc ~T0 @X0 1 sf3`*S940`*S931`E7129 ]
"4005
[; ;Source/FreeRTOS/tasks.c: 4005:     {
{
[e :U _prvListTasksWithinSingleList ]
"4002
[; ;Source/FreeRTOS/tasks.c: 4002:     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
[v _pxTaskStatusArray `*S940 ~T0 @X0 1 r1 ]
"4003
[; ;Source/FreeRTOS/tasks.c: 4003:                                                      List_t * pxList,
[v _pxList `*S931 ~T0 @X0 1 r2 ]
"4004
[; ;Source/FreeRTOS/tasks.c: 4004:                                                      eTaskState eState )
[v _eState `E7129 ~T0 @X0 1 r3 ]
"4005
[; ;Source/FreeRTOS/tasks.c: 4005:     {
[f ]
"4006
[; ;Source/FreeRTOS/tasks.c: 4006:                             TCB_t * pxNextTCB;
[v _pxNextTCB `*S936 ~T0 @X0 1 a ]
"4007
[; ;Source/FreeRTOS/tasks.c: 4007:                             TCB_t * pxFirstTCB;
[v _pxFirstTCB `*S936 ~T0 @X0 1 a ]
"4008
[; ;Source/FreeRTOS/tasks.c: 4008:         UBaseType_t uxTask = 0;
[v _uxTask `uc ~T0 @X0 1 a ]
[e = _uxTask -> -> 0 `i `uc ]
"4010
[; ;Source/FreeRTOS/tasks.c: 4010:         if( ( ( pxList )->uxNumberOfItems ) > ( UBaseType_t ) 0 )
[e $ ! > -> . *U _pxList 0 `i -> -> -> 0 `i `uc `i 1673  ]
"4011
[; ;Source/FreeRTOS/tasks.c: 4011:         {
{
"4012
[; ;Source/FreeRTOS/tasks.c: 4012:             { List_t * const pxConstList = ( pxList ); ( pxConstList )->pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( void * ) ( pxConstList )->pxIndex == ( void * ) &( ( pxConstList )->xListEnd ) ) { ( pxConstList )->pxIndex = ( pxConstList )->pxIndex->pxNext; } ( pxFirstTCB ) = ( pxConstList )->pxIndex->pvOwner; };
{
[v F7832 `*S931 ~T0 @X0 1 t ]
[v _pxConstList `C*S931 ~T0 @X0 1 a ]
[e = _pxConstList _pxList ]
[e = . *U _pxConstList 1 . *U . *U _pxConstList 1 1 ]
[e $ ! == -> . *U _pxConstList 1 `*v -> &U . *U _pxConstList 2 `*v 1674  ]
{
[e = . *U _pxConstList 1 . *U . *U _pxConstList 1 1 ]
}
[e :U 1674 ]
[e = _pxFirstTCB -> . *U . *U _pxConstList 1 3 `*S936 ]
}
"4018
[; ;Source/FreeRTOS/tasks.c: 4018:             do
[e :U 1677 ]
"4019
[; ;Source/FreeRTOS/tasks.c: 4019:             {
{
"4020
[; ;Source/FreeRTOS/tasks.c: 4020:                 { List_t * const pxConstList = ( pxList ); ( pxConstList )->pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( void * ) ( pxConstList )->pxIndex == ( void * ) &( ( pxConstList )->xListEnd ) ) { ( pxConstList )->pxIndex = ( pxConstList )->pxIndex->pxNext; } ( pxNextTCB ) = ( pxConstList )->pxIndex->pvOwner; };
{
[v F7834 `*S931 ~T0 @X0 1 t ]
[v _pxConstList `C*S931 ~T0 @X0 1 a ]
[e = _pxConstList _pxList ]
[e = . *U _pxConstList 1 . *U . *U _pxConstList 1 1 ]
[e $ ! == -> . *U _pxConstList 1 `*v -> &U . *U _pxConstList 2 `*v 1678  ]
{
[e = . *U _pxConstList 1 . *U . *U _pxConstList 1 1 ]
}
[e :U 1678 ]
[e = _pxNextTCB -> . *U . *U _pxConstList 1 3 `*S936 ]
}
"4021
[; ;Source/FreeRTOS/tasks.c: 4021:                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), ( ( BaseType_t ) 1 ), eState );
[e ( _vTaskGetInfo (4 , , , _pxNextTCB &U *U + _pxTaskStatusArray * -> _uxTask `ux -> -> # *U _pxTaskStatusArray `ui `ux -> -> 1 `i `c _eState ]
"4022
[; ;Source/FreeRTOS/tasks.c: 4022:                 uxTask++;
[e ++ _uxTask -> -> 1 `i `uc ]
"4023
[; ;Source/FreeRTOS/tasks.c: 4023:             } while( pxNextTCB != pxFirstTCB );
}
[e $ != _pxNextTCB _pxFirstTCB 1677  ]
[e :U 1676 ]
"4024
[; ;Source/FreeRTOS/tasks.c: 4024:         }
}
[e $U 1679  ]
"4025
[; ;Source/FreeRTOS/tasks.c: 4025:         else
[e :U 1673 ]
"4026
[; ;Source/FreeRTOS/tasks.c: 4026:         {
{
"4028
[; ;Source/FreeRTOS/tasks.c: 4028:         }
}
[e :U 1679 ]
"4030
[; ;Source/FreeRTOS/tasks.c: 4030:         return uxTask;
[e ) _uxTask ]
[e $UE 1672  ]
"4031
[; ;Source/FreeRTOS/tasks.c: 4031:     }
[e :UE 1672 ]
}
"4038
[; ;Source/FreeRTOS/tasks.c: 4038:     static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
[v _prvTaskCheckFreeStackSpace `(us ~T0 @X0 1 sf1`*Cuc ]
"4039
[; ;Source/FreeRTOS/tasks.c: 4039:     {
{
[e :U _prvTaskCheckFreeStackSpace ]
"4038
[; ;Source/FreeRTOS/tasks.c: 4038:     static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
[v _pucStackByte `*Cuc ~T0 @X0 1 r1 ]
"4039
[; ;Source/FreeRTOS/tasks.c: 4039:     {
[f ]
"4040
[; ;Source/FreeRTOS/tasks.c: 4040:         uint32_t ulCount = 0U;
[v _ulCount `ul ~T0 @X0 1 a ]
[e = _ulCount -> -> 0 `ui `ul ]
"4042
[; ;Source/FreeRTOS/tasks.c: 4042:         while( *pucStackByte == ( uint8_t ) ( 0xa5U ) )
[e $U 1681  ]
[e :U 1682 ]
"4043
[; ;Source/FreeRTOS/tasks.c: 4043:         {
{
"4044
[; ;Source/FreeRTOS/tasks.c: 4044:             pucStackByte -= 1;
[e =- _pucStackByte * -> -> 1 `i `x -> -> # *U _pucStackByte `i `x ]
"4045
[; ;Source/FreeRTOS/tasks.c: 4045:             ulCount++;
[e ++ _ulCount -> -> -> 1 `i `l `ul ]
"4046
[; ;Source/FreeRTOS/tasks.c: 4046:         }
}
[e :U 1681 ]
"4042
[; ;Source/FreeRTOS/tasks.c: 4042:         while( *pucStackByte == ( uint8_t ) ( 0xa5U ) )
[e $ == -> *U _pucStackByte `i -> -> -> 165 `ui `uc `i 1682  ]
[e :U 1683 ]
"4048
[; ;Source/FreeRTOS/tasks.c: 4048:         ulCount /= ( uint32_t ) sizeof( StackType_t );
[e =/ _ulCount -> -> # `uc `ui `ul ]
"4050
[; ;Source/FreeRTOS/tasks.c: 4050:         return ( uint16_t ) ulCount;
[e ) -> _ulCount `us ]
[e $UE 1680  ]
"4051
[; ;Source/FreeRTOS/tasks.c: 4051:     }
[e :UE 1680 ]
}
"4126
[; ;Source/FreeRTOS/tasks.c: 4126:     static void prvDeleteTCB( TCB_t * pxTCB )
[v _prvDeleteTCB `(v ~T0 @X0 1 sf1`*S936 ]
"4127
[; ;Source/FreeRTOS/tasks.c: 4127:     {
{
[e :U _prvDeleteTCB ]
"4126
[; ;Source/FreeRTOS/tasks.c: 4126:     static void prvDeleteTCB( TCB_t * pxTCB )
[v _pxTCB `*S936 ~T0 @X0 1 r1 ]
"4127
[; ;Source/FreeRTOS/tasks.c: 4127:     {
[f ]
"4131
[; ;Source/FreeRTOS/tasks.c: 4131:         ( void ) ( pxTCB );
[e _pxTCB ]
"4141
[; ;Source/FreeRTOS/tasks.c: 4141:         {
{
"4144
[; ;Source/FreeRTOS/tasks.c: 4144:             vPortFree( pxTCB->pxStack );
[e ( _vPortFree (1 -> . *U _pxTCB 4 `*v ]
"4145
[; ;Source/FreeRTOS/tasks.c: 4145:             vPortFree( pxTCB );
[e ( _vPortFree (1 -> _pxTCB `*v ]
"4146
[; ;Source/FreeRTOS/tasks.c: 4146:         }
}
"4174
[; ;Source/FreeRTOS/tasks.c: 4174:     }
[e :UE 1684 ]
}
"4179
[; ;Source/FreeRTOS/tasks.c: 4179: static void prvResetNextTaskUnblockTime( void )
[v _prvResetNextTaskUnblockTime `(v ~T0 @X0 1 sf ]
"4180
[; ;Source/FreeRTOS/tasks.c: 4180: {
{
[e :U _prvResetNextTaskUnblockTime ]
[f ]
"4181
[; ;Source/FreeRTOS/tasks.c: 4181:     if( ( ( ( pxDelayedTaskList )->uxNumberOfItems == ( UBaseType_t ) 0 ) ? ( ( BaseType_t ) 1 ) : ( ( BaseType_t ) 0 ) ) != ( ( BaseType_t ) 0 ) )
[e $ ! != ? == -> . *U _pxDelayedTaskList 0 `i -> -> -> 0 `i `uc `i : -> -> -> 1 `i `c `i -> -> -> 0 `i `c `i -> -> -> 0 `i `c `i 1686  ]
"4182
[; ;Source/FreeRTOS/tasks.c: 4182:     {
{
"4187
[; ;Source/FreeRTOS/tasks.c: 4187:         xNextTaskUnblockTime = ( TickType_t ) 0xffff;
[e = _xNextTaskUnblockTime -> -> 65535 `ui `us ]
"4188
[; ;Source/FreeRTOS/tasks.c: 4188:     }
}
[e $U 1687  ]
"4189
[; ;Source/FreeRTOS/tasks.c: 4189:     else
[e :U 1686 ]
"4190
[; ;Source/FreeRTOS/tasks.c: 4190:     {
{
"4195
[; ;Source/FreeRTOS/tasks.c: 4195:         xNextTaskUnblockTime = ( ( ( pxDelayedTaskList )->xListEnd ).pxNext->xItemValue );
[e = _xNextTaskUnblockTime . *U . . *U _pxDelayedTaskList 2 1 0 ]
"4196
[; ;Source/FreeRTOS/tasks.c: 4196:     }
}
[e :U 1687 ]
"4197
[; ;Source/FreeRTOS/tasks.c: 4197: }
[e :UE 1685 ]
}
"4202
[; ;Source/FreeRTOS/tasks.c: 4202:     TaskHandle_t xTaskGetCurrentTaskHandle( void )
[v _xTaskGetCurrentTaskHandle `(*S936 ~T0 @X0 1 ef ]
"4203
[; ;Source/FreeRTOS/tasks.c: 4203:     {
{
[e :U _xTaskGetCurrentTaskHandle ]
[f ]
"4204
[; ;Source/FreeRTOS/tasks.c: 4204:         TaskHandle_t xReturn;
[v _xReturn `*S936 ~T0 @X0 1 a ]
"4209
[; ;Source/FreeRTOS/tasks.c: 4209:         xReturn = pxCurrentTCB;
[e = _xReturn _pxCurrentTCB ]
"4211
[; ;Source/FreeRTOS/tasks.c: 4211:         return xReturn;
[e ) _xReturn ]
[e $UE 1688  ]
"4212
[; ;Source/FreeRTOS/tasks.c: 4212:     }
[e :UE 1688 ]
}
"4586
[; ;Source/FreeRTOS/tasks.c: 4586:     static char * prvWriteNameToBuffer( char * pcBuffer,
[v _prvWriteNameToBuffer `(*uc ~T0 @X0 1 sf2`*uc`*Cuc ]
"4588
[; ;Source/FreeRTOS/tasks.c: 4588:     {
{
[e :U _prvWriteNameToBuffer ]
"4586
[; ;Source/FreeRTOS/tasks.c: 4586:     static char * prvWriteNameToBuffer( char * pcBuffer,
[v _pcBuffer `*uc ~T0 @X0 1 r1 ]
"4587
[; ;Source/FreeRTOS/tasks.c: 4587:                                         const char * pcTaskName )
[v _pcTaskName `*Cuc ~T0 @X0 1 r2 ]
"4588
[; ;Source/FreeRTOS/tasks.c: 4588:     {
[f ]
"4589
[; ;Source/FreeRTOS/tasks.c: 4589:         size_t x;
[v _x `ui ~T0 @X0 1 a ]
"4592
[; ;Source/FreeRTOS/tasks.c: 4592:         strcpy( pcBuffer, pcTaskName );
[e ( _strcpy (2 , _pcBuffer _pcTaskName ]
"4596
[; ;Source/FreeRTOS/tasks.c: 4596:         for( x = strlen( pcBuffer ); x < ( size_t ) ( ( 4 ) - 1 ); x++ )
{
[e = _x ( _strlen (1 -> _pcBuffer `*Cuc ]
[e $ < _x -> - -> 4 `i -> 1 `i `ui 1690  ]
[e $U 1691  ]
[e :U 1690 ]
"4597
[; ;Source/FreeRTOS/tasks.c: 4597:         {
{
"4598
[; ;Source/FreeRTOS/tasks.c: 4598:             pcBuffer[ x ] = ' ';
[e = *U + _pcBuffer * -> _x `ux -> -> # *U _pcBuffer `ui `ux -> -> 32 `ui `uc ]
"4599
[; ;Source/FreeRTOS/tasks.c: 4599:         }
}
[e ++ _x -> -> 1 `i `ui ]
[e $ < _x -> - -> 4 `i -> 1 `i `ui 1690  ]
[e :U 1691 ]
}
"4602
[; ;Source/FreeRTOS/tasks.c: 4602:         pcBuffer[ x ] = ( char ) 0x00;
[e = *U + _pcBuffer * -> _x `ux -> -> # *U _pcBuffer `ui `ux -> -> 0 `i `uc ]
"4605
[; ;Source/FreeRTOS/tasks.c: 4605:         return &( pcBuffer[ x ] );
[e ) &U *U + _pcBuffer * -> _x `ux -> -> # *U _pcBuffer `ui `ux ]
[e $UE 1689  ]
"4606
[; ;Source/FreeRTOS/tasks.c: 4606:     }
[e :UE 1689 ]
}
"4613
[; ;Source/FreeRTOS/tasks.c: 4613:     void vTaskList( char * pcWriteBuffer )
[v _vTaskList `(v ~T0 @X0 1 ef1`*uc ]
"4614
[; ;Source/FreeRTOS/tasks.c: 4614:     {
{
[e :U _vTaskList ]
"4613
[; ;Source/FreeRTOS/tasks.c: 4613:     void vTaskList( char * pcWriteBuffer )
[v _pcWriteBuffer `*uc ~T0 @X0 1 r1 ]
"4614
[; ;Source/FreeRTOS/tasks.c: 4614:     {
[f ]
"4615
[; ;Source/FreeRTOS/tasks.c: 4615:         TaskStatus_t * pxTaskStatusArray;
[v _pxTaskStatusArray `*S940 ~T0 @X0 1 a ]
"4616
[; ;Source/FreeRTOS/tasks.c: 4616:         UBaseType_t uxArraySize, x;
[v _uxArraySize `uc ~T0 @X0 1 a ]
[v _x `uc ~T0 @X0 1 a ]
"4617
[; ;Source/FreeRTOS/tasks.c: 4617:         char cStatus;
[v _cStatus `uc ~T0 @X0 1 a ]
"4651
[; ;Source/FreeRTOS/tasks.c: 4651:         uxArraySize = uxCurrentNumberOfTasks;
[e = _uxArraySize _uxCurrentNumberOfTasks ]
"4656
[; ;Source/FreeRTOS/tasks.c: 4656:         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
[e = _pxTaskStatusArray -> ( _pvPortMalloc (1 * -> _uxCurrentNumberOfTasks `ui -> # `S940 `ui `*S940 ]
"4658
[; ;Source/FreeRTOS/tasks.c: 4658:         Xprintf("\r\n-------------------------------------\r\n");
[e ( _Xprintf :s 119C ]
"4659
[; ;Source/FreeRTOS/tasks.c: 4659:         Xprintf("Name\tState\tPrio\tStack\tNum\r\n");
[e ( _Xprintf :s 120C ]
"4660
[; ;Source/FreeRTOS/tasks.c: 4660:         Xprintf("-------------------------------------\r\n");
[e ( _Xprintf :s 121C ]
"4661
[; ;Source/FreeRTOS/tasks.c: 4661:         if( pxTaskStatusArray != ((void*)0) )
[e $ ! != _pxTaskStatusArray -> -> -> 0 `i `*v `*S940 1694  ]
"4662
[; ;Source/FreeRTOS/tasks.c: 4662:         {
{
"4664
[; ;Source/FreeRTOS/tasks.c: 4664:             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, ((void*)0) );
[e = _uxArraySize ( _uxTaskGetSystemState (3 , , _pxTaskStatusArray _uxArraySize -> -> -> 0 `i `*v `*ul ]
"4667
[; ;Source/FreeRTOS/tasks.c: 4667:             for( x = 0; x < uxArraySize; x++ )
{
[e = _x -> -> 0 `i `uc ]
[e $U 1698  ]
[e :U 1695 ]
"4668
[; ;Source/FreeRTOS/tasks.c: 4668:             {
{
"4669
[; ;Source/FreeRTOS/tasks.c: 4669:                 switch( pxTaskStatusArray[ x ].eCurrentState )
[e $U 1700  ]
"4670
[; ;Source/FreeRTOS/tasks.c: 4670:                 {
{
"4671
[; ;Source/FreeRTOS/tasks.c: 4671:                     case eRunning:
[e :U 1701 ]
"4672
[; ;Source/FreeRTOS/tasks.c: 4672:                         cStatus = ( 'X' );
[e = _cStatus -> -> 88 `ui `uc ]
"4673
[; ;Source/FreeRTOS/tasks.c: 4673:                         break;
[e $U 1699  ]
"4675
[; ;Source/FreeRTOS/tasks.c: 4675:                     case eReady:
[e :U 1702 ]
"4676
[; ;Source/FreeRTOS/tasks.c: 4676:                         cStatus = ( 'R' );
[e = _cStatus -> -> 82 `ui `uc ]
"4677
[; ;Source/FreeRTOS/tasks.c: 4677:                         break;
[e $U 1699  ]
"4679
[; ;Source/FreeRTOS/tasks.c: 4679:                     case eBlocked:
[e :U 1703 ]
"4680
[; ;Source/FreeRTOS/tasks.c: 4680:                         cStatus = ( 'B' );
[e = _cStatus -> -> 66 `ui `uc ]
"4681
[; ;Source/FreeRTOS/tasks.c: 4681:                         break;
[e $U 1699  ]
"4683
[; ;Source/FreeRTOS/tasks.c: 4683:                     case eSuspended:
[e :U 1704 ]
"4684
[; ;Source/FreeRTOS/tasks.c: 4684:                         cStatus = ( 'S' );
[e = _cStatus -> -> 83 `ui `uc ]
"4685
[; ;Source/FreeRTOS/tasks.c: 4685:                         break;
[e $U 1699  ]
"4687
[; ;Source/FreeRTOS/tasks.c: 4687:                     case eDeleted:
[e :U 1705 ]
"4688
[; ;Source/FreeRTOS/tasks.c: 4688:                         cStatus = ( 'D' );
[e = _cStatus -> -> 68 `ui `uc ]
"4689
[; ;Source/FreeRTOS/tasks.c: 4689:                         break;
[e $U 1699  ]
"4691
[; ;Source/FreeRTOS/tasks.c: 4691:                     case eInvalid:
[e :U 1706 ]
"4692
[; ;Source/FreeRTOS/tasks.c: 4692:                     default:
[e :U 1707 ]
"4694
[; ;Source/FreeRTOS/tasks.c: 4694:                         cStatus = ( char ) 0x00;
[e = _cStatus -> -> 0 `i `uc ]
"4695
[; ;Source/FreeRTOS/tasks.c: 4695:                         break;
[e $U 1699  ]
"4696
[; ;Source/FreeRTOS/tasks.c: 4696:                 }
}
[e $U 1699  ]
[e :U 1700 ]
[e [\ -> . *U + _pxTaskStatusArray * -> _x `ux -> -> # *U _pxTaskStatusArray `ui `ux 3 `ui , $ -> . `E7129 0 `ui 1701
 , $ -> . `E7129 1 `ui 1702
 , $ -> . `E7129 2 `ui 1703
 , $ -> . `E7129 3 `ui 1704
 , $ -> . `E7129 4 `ui 1705
 , $ -> . `E7129 5 `ui 1706
 1707 ]
[e :U 1699 ]
"4702
[; ;Source/FreeRTOS/tasks.c: 4702:                 Xprintf("%s",pxTaskStatusArray[ x ].pcTaskName);
[e ( _Xprintf , (. :s 122C . *U + _pxTaskStatusArray * -> _x `ux -> -> # *U _pxTaskStatusArray `ui `ux 1 ]
"4707
[; ;Source/FreeRTOS/tasks.c: 4707:                 Xprintf("\t%c\t%d\t%d\t%d\r\n", cStatus,
[e ( _Xprintf , , , , (. :s 123C -> _cStatus `i -> . *U + _pxTaskStatusArray * -> _x `ux -> -> # *U _pxTaskStatusArray `ui `ux 4 `ui -> . *U + _pxTaskStatusArray * -> _x `ux -> -> # *U _pxTaskStatusArray `ui `ux 8 `ui -> . *U + _pxTaskStatusArray * -> _x `ux -> -> # *U _pxTaskStatusArray `ui `ux 2 `ui ]
"4713
[; ;Source/FreeRTOS/tasks.c: 4713:             }
}
[e ++ _x -> -> 1 `i `uc ]
[e :U 1698 ]
[e $ < -> _x `i -> _uxArraySize `i 1695  ]
[e :U 1696 ]
}
"4714
[; ;Source/FreeRTOS/tasks.c: 4714:             Xprintf("-------------------------------------\r\n");
[e ( _Xprintf :s 124C ]
"4718
[; ;Source/FreeRTOS/tasks.c: 4718:             vPortFree( pxTaskStatusArray );
[e ( _vPortFree (1 -> _pxTaskStatusArray `*v ]
"4719
[; ;Source/FreeRTOS/tasks.c: 4719:         }
}
[e $U 1708  ]
"4720
[; ;Source/FreeRTOS/tasks.c: 4720:         else
[e :U 1694 ]
"4721
[; ;Source/FreeRTOS/tasks.c: 4721:         {
{
"4723
[; ;Source/FreeRTOS/tasks.c: 4723:         }
}
[e :U 1708 ]
"4724
[; ;Source/FreeRTOS/tasks.c: 4724:     }
[e :UE 1693 ]
}
"4850
[; ;Source/FreeRTOS/tasks.c: 4850: TickType_t uxTaskResetEventItemValue( void )
[v _uxTaskResetEventItemValue `(us ~T0 @X0 1 ef ]
"4851
[; ;Source/FreeRTOS/tasks.c: 4851: {
{
[e :U _uxTaskResetEventItemValue ]
[f ]
"4852
[; ;Source/FreeRTOS/tasks.c: 4852:     TickType_t uxReturn;
[v _uxReturn `us ~T0 @X0 1 a ]
"4854
[; ;Source/FreeRTOS/tasks.c: 4854:     uxReturn = ( ( &( pxCurrentTCB->xEventListItem ) )->xItemValue );
[e = _uxReturn . *U &U . *U _pxCurrentTCB 2 0 ]
"4858
[; ;Source/FreeRTOS/tasks.c: 4858:     ( ( &( pxCurrentTCB->xEventListItem ) )->xItemValue = ( ( ( TickType_t ) ( 3 ) - ( TickType_t ) pxCurrentTCB->uxPriority ) ) );
[e = . *U &U . *U _pxCurrentTCB 2 0 -> - -> -> -> 3 `i `us `ui -> -> . *U _pxCurrentTCB 3 `us `ui `us ]
"4860
[; ;Source/FreeRTOS/tasks.c: 4860:     return uxReturn;
[e ) _uxReturn ]
[e $UE 1709  ]
"4861
[; ;Source/FreeRTOS/tasks.c: 4861: }
[e :UE 1709 ]
}
"4883
[; ;Source/FreeRTOS/tasks.c: 4883:     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
[v _ulTaskGenericNotifyTake `(ul ~T0 @X0 1 ef3`uc`c`us ]
"4886
[; ;Source/FreeRTOS/tasks.c: 4886:     {
{
[e :U _ulTaskGenericNotifyTake ]
"4883
[; ;Source/FreeRTOS/tasks.c: 4883:     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
[v _uxIndexToWait `uc ~T0 @X0 1 r1 ]
"4884
[; ;Source/FreeRTOS/tasks.c: 4884:                                       BaseType_t xClearCountOnExit,
[v _xClearCountOnExit `c ~T0 @X0 1 r2 ]
"4885
[; ;Source/FreeRTOS/tasks.c: 4885:                                       TickType_t xTicksToWait )
[v _xTicksToWait `us ~T0 @X0 1 r3 ]
"4886
[; ;Source/FreeRTOS/tasks.c: 4886:     {
[f ]
"4887
[; ;Source/FreeRTOS/tasks.c: 4887:         uint32_t ulReturn;
[v _ulReturn `ul ~T0 @X0 1 a ]
"4889
[; ;Source/FreeRTOS/tasks.c: 4889:         if( ( uxIndexToWait < 1 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 4889 );
[e $ ! == -> < -> _uxIndexToWait `i -> 1 `i `i -> 0 `i 1711  ]
[e ( _Xprintf , (. :s 125C -> 4889 `i ]
[e :U 1711 ]
"4891
[; ;Source/FreeRTOS/tasks.c: 4891:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"4892
[; ;Source/FreeRTOS/tasks.c: 4892:         {
{
"4894
[; ;Source/FreeRTOS/tasks.c: 4894:             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
[e $ ! == *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux -> 0 `ul 1712  ]
"4895
[; ;Source/FreeRTOS/tasks.c: 4895:             {
{
"4897
[; ;Source/FreeRTOS/tasks.c: 4897:                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = ( ( uint8_t ) 1 );
[e = *U + &U . *U _pxCurrentTCB 10 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 10 `ui `ux -> -> 1 `i `uc ]
"4899
[; ;Source/FreeRTOS/tasks.c: 4899:                 if( xTicksToWait > ( TickType_t ) 0 )
[e $ ! > -> _xTicksToWait `ui -> -> -> 0 `i `us `ui 1713  ]
"4900
[; ;Source/FreeRTOS/tasks.c: 4900:                 {
{
"4901
[; ;Source/FreeRTOS/tasks.c: 4901:                     prvAddCurrentTaskToDelayedList( xTicksToWait, ( ( BaseType_t ) 1 ) );
[e ( _prvAddCurrentTaskToDelayedList (2 , _xTicksToWait -> -> 1 `i `c ]
"4908
[; ;Source/FreeRTOS/tasks.c: 4908:                     vPortYield();
[e ( _vPortYield ..  ]
"4909
[; ;Source/FreeRTOS/tasks.c: 4909:                 }
}
[e $U 1714  ]
"4910
[; ;Source/FreeRTOS/tasks.c: 4910:                 else
[e :U 1713 ]
"4911
[; ;Source/FreeRTOS/tasks.c: 4911:                 {
{
"4913
[; ;Source/FreeRTOS/tasks.c: 4913:                 }
}
[e :U 1714 ]
"4914
[; ;Source/FreeRTOS/tasks.c: 4914:             }
}
[e $U 1715  ]
"4915
[; ;Source/FreeRTOS/tasks.c: 4915:             else
[e :U 1712 ]
"4916
[; ;Source/FreeRTOS/tasks.c: 4916:             {
{
"4918
[; ;Source/FreeRTOS/tasks.c: 4918:             }
}
[e :U 1715 ]
"4919
[; ;Source/FreeRTOS/tasks.c: 4919:         }
}
"4920
[; ;Source/FreeRTOS/tasks.c: 4920:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1716  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1716 ]
"4922
[; ;Source/FreeRTOS/tasks.c: 4922:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"4923
[; ;Source/FreeRTOS/tasks.c: 4923:         {
{
"4925
[; ;Source/FreeRTOS/tasks.c: 4925:             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
[e = _ulReturn *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux ]
"4927
[; ;Source/FreeRTOS/tasks.c: 4927:             if( ulReturn != 0UL )
[e $ ! != _ulReturn -> 0 `ul 1717  ]
"4928
[; ;Source/FreeRTOS/tasks.c: 4928:             {
{
"4929
[; ;Source/FreeRTOS/tasks.c: 4929:                 if( xClearCountOnExit != ( ( BaseType_t ) 0 ) )
[e $ ! != -> _xClearCountOnExit `i -> -> -> 0 `i `c `i 1718  ]
"4930
[; ;Source/FreeRTOS/tasks.c: 4930:                 {
{
"4931
[; ;Source/FreeRTOS/tasks.c: 4931:                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
[e = *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux -> 0 `ul ]
"4932
[; ;Source/FreeRTOS/tasks.c: 4932:                 }
}
[e $U 1719  ]
"4933
[; ;Source/FreeRTOS/tasks.c: 4933:                 else
[e :U 1718 ]
"4934
[; ;Source/FreeRTOS/tasks.c: 4934:                 {
{
"4935
[; ;Source/FreeRTOS/tasks.c: 4935:                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
[e = *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux - _ulReturn -> -> 1 `i `ul ]
"4936
[; ;Source/FreeRTOS/tasks.c: 4936:                 }
}
[e :U 1719 ]
"4937
[; ;Source/FreeRTOS/tasks.c: 4937:             }
}
[e $U 1720  ]
"4938
[; ;Source/FreeRTOS/tasks.c: 4938:             else
[e :U 1717 ]
"4939
[; ;Source/FreeRTOS/tasks.c: 4939:             {
{
"4941
[; ;Source/FreeRTOS/tasks.c: 4941:             }
}
[e :U 1720 ]
"4943
[; ;Source/FreeRTOS/tasks.c: 4943:             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = ( ( uint8_t ) 0 );
[e = *U + &U . *U _pxCurrentTCB 10 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 10 `ui `ux -> -> 0 `i `uc ]
"4944
[; ;Source/FreeRTOS/tasks.c: 4944:         }
}
"4945
[; ;Source/FreeRTOS/tasks.c: 4945:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1721  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1721 ]
"4947
[; ;Source/FreeRTOS/tasks.c: 4947:         return ulReturn;
[e ) _ulReturn ]
[e $UE 1710  ]
"4948
[; ;Source/FreeRTOS/tasks.c: 4948:     }
[e :UE 1710 ]
}
"4955
[; ;Source/FreeRTOS/tasks.c: 4955:     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
[v _xTaskGenericNotifyWait `(c ~T0 @X0 1 ef5`uc`ul`ul`*ul`us ]
"4960
[; ;Source/FreeRTOS/tasks.c: 4960:     {
{
[e :U _xTaskGenericNotifyWait ]
"4955
[; ;Source/FreeRTOS/tasks.c: 4955:     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
[v _uxIndexToWait `uc ~T0 @X0 1 r1 ]
"4956
[; ;Source/FreeRTOS/tasks.c: 4956:                                        uint32_t ulBitsToClearOnEntry,
[v _ulBitsToClearOnEntry `ul ~T0 @X0 1 r2 ]
"4957
[; ;Source/FreeRTOS/tasks.c: 4957:                                        uint32_t ulBitsToClearOnExit,
[v _ulBitsToClearOnExit `ul ~T0 @X0 1 r3 ]
"4958
[; ;Source/FreeRTOS/tasks.c: 4958:                                        uint32_t * pulNotificationValue,
[v _pulNotificationValue `*ul ~T0 @X0 1 r4 ]
"4959
[; ;Source/FreeRTOS/tasks.c: 4959:                                        TickType_t xTicksToWait )
[v _xTicksToWait `us ~T0 @X0 1 r5 ]
"4960
[; ;Source/FreeRTOS/tasks.c: 4960:     {
[f ]
"4961
[; ;Source/FreeRTOS/tasks.c: 4961:         BaseType_t xReturn;
[v _xReturn `c ~T0 @X0 1 a ]
"4963
[; ;Source/FreeRTOS/tasks.c: 4963:         if( ( uxIndexToWait < 1 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 4963 );
[e $ ! == -> < -> _uxIndexToWait `i -> 1 `i `i -> 0 `i 1723  ]
[e ( _Xprintf , (. :s 126C -> 4963 `i ]
[e :U 1723 ]
"4965
[; ;Source/FreeRTOS/tasks.c: 4965:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"4966
[; ;Source/FreeRTOS/tasks.c: 4966:         {
{
"4968
[; ;Source/FreeRTOS/tasks.c: 4968:             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != ( ( uint8_t ) 2 ) )
[e $ ! != -> *U + &U . *U _pxCurrentTCB 10 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 10 `ui `ux `i -> -> -> 2 `i `uc `i 1724  ]
"4969
[; ;Source/FreeRTOS/tasks.c: 4969:             {
{
"4973
[; ;Source/FreeRTOS/tasks.c: 4973:                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
[e =& *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux -> ~ _ulBitsToClearOnEntry `ul ]
"4976
[; ;Source/FreeRTOS/tasks.c: 4976:                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = ( ( uint8_t ) 1 );
[e = *U + &U . *U _pxCurrentTCB 10 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 10 `ui `ux -> -> 1 `i `uc ]
"4978
[; ;Source/FreeRTOS/tasks.c: 4978:                 if( xTicksToWait > ( TickType_t ) 0 )
[e $ ! > -> _xTicksToWait `ui -> -> -> 0 `i `us `ui 1725  ]
"4979
[; ;Source/FreeRTOS/tasks.c: 4979:                 {
{
"4980
[; ;Source/FreeRTOS/tasks.c: 4980:                     prvAddCurrentTaskToDelayedList( xTicksToWait, ( ( BaseType_t ) 1 ) );
[e ( _prvAddCurrentTaskToDelayedList (2 , _xTicksToWait -> -> 1 `i `c ]
"4987
[; ;Source/FreeRTOS/tasks.c: 4987:                     vPortYield();
[e ( _vPortYield ..  ]
"4988
[; ;Source/FreeRTOS/tasks.c: 4988:                 }
}
[e $U 1726  ]
"4989
[; ;Source/FreeRTOS/tasks.c: 4989:                 else
[e :U 1725 ]
"4990
[; ;Source/FreeRTOS/tasks.c: 4990:                 {
{
"4992
[; ;Source/FreeRTOS/tasks.c: 4992:                 }
}
[e :U 1726 ]
"4993
[; ;Source/FreeRTOS/tasks.c: 4993:             }
}
[e $U 1727  ]
"4994
[; ;Source/FreeRTOS/tasks.c: 4994:             else
[e :U 1724 ]
"4995
[; ;Source/FreeRTOS/tasks.c: 4995:             {
{
"4997
[; ;Source/FreeRTOS/tasks.c: 4997:             }
}
[e :U 1727 ]
"4998
[; ;Source/FreeRTOS/tasks.c: 4998:         }
}
"4999
[; ;Source/FreeRTOS/tasks.c: 4999:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1728  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1728 ]
"5001
[; ;Source/FreeRTOS/tasks.c: 5001:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"5002
[; ;Source/FreeRTOS/tasks.c: 5002:         {
{
"5005
[; ;Source/FreeRTOS/tasks.c: 5005:             if( pulNotificationValue != ((void*)0) )
[e $ ! != _pulNotificationValue -> -> -> 0 `i `*v `*ul 1729  ]
"5006
[; ;Source/FreeRTOS/tasks.c: 5006:             {
{
"5009
[; ;Source/FreeRTOS/tasks.c: 5009:                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
[e = *U _pulNotificationValue *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux ]
"5010
[; ;Source/FreeRTOS/tasks.c: 5010:             }
}
[e :U 1729 ]
"5016
[; ;Source/FreeRTOS/tasks.c: 5016:             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != ( ( uint8_t ) 2 ) )
[e $ ! != -> *U + &U . *U _pxCurrentTCB 10 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 10 `ui `ux `i -> -> -> 2 `i `uc `i 1730  ]
"5017
[; ;Source/FreeRTOS/tasks.c: 5017:             {
{
"5019
[; ;Source/FreeRTOS/tasks.c: 5019:                 xReturn = ( ( BaseType_t ) 0 );
[e = _xReturn -> -> 0 `i `c ]
"5020
[; ;Source/FreeRTOS/tasks.c: 5020:             }
}
[e $U 1731  ]
"5021
[; ;Source/FreeRTOS/tasks.c: 5021:             else
[e :U 1730 ]
"5022
[; ;Source/FreeRTOS/tasks.c: 5022:             {
{
"5025
[; ;Source/FreeRTOS/tasks.c: 5025:                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
[e =& *U + &U . *U _pxCurrentTCB 9 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 9 `ui `ux -> ~ _ulBitsToClearOnExit `ul ]
"5026
[; ;Source/FreeRTOS/tasks.c: 5026:                 xReturn = ( ( BaseType_t ) 1 );
[e = _xReturn -> -> 1 `i `c ]
"5027
[; ;Source/FreeRTOS/tasks.c: 5027:             }
}
[e :U 1731 ]
"5029
[; ;Source/FreeRTOS/tasks.c: 5029:             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = ( ( uint8_t ) 0 );
[e = *U + &U . *U _pxCurrentTCB 10 * -> _uxIndexToWait `ux -> -> # *U &U . *U _pxCurrentTCB 10 `ui `ux -> -> 0 `i `uc ]
"5030
[; ;Source/FreeRTOS/tasks.c: 5030:         }
}
"5031
[; ;Source/FreeRTOS/tasks.c: 5031:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1732  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1732 ]
"5033
[; ;Source/FreeRTOS/tasks.c: 5033:         return xReturn;
[e ) _xReturn ]
[e $UE 1722  ]
"5034
[; ;Source/FreeRTOS/tasks.c: 5034:     }
[e :UE 1722 ]
}
"5041
[; ;Source/FreeRTOS/tasks.c: 5041:     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
[v _xTaskGenericNotify `(c ~T0 @X0 1 ef5`*S936`uc`ul`E7137`*ul ]
"5046
[; ;Source/FreeRTOS/tasks.c: 5046:     {
{
[e :U _xTaskGenericNotify ]
"5041
[; ;Source/FreeRTOS/tasks.c: 5041:     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
[v _xTaskToNotify `*S936 ~T0 @X0 1 r1 ]
"5042
[; ;Source/FreeRTOS/tasks.c: 5042:                                    UBaseType_t uxIndexToNotify,
[v _uxIndexToNotify `uc ~T0 @X0 1 r2 ]
"5043
[; ;Source/FreeRTOS/tasks.c: 5043:                                    uint32_t ulValue,
[v _ulValue `ul ~T0 @X0 1 r3 ]
"5044
[; ;Source/FreeRTOS/tasks.c: 5044:                                    eNotifyAction eAction,
[v _eAction `E7137 ~T0 @X0 1 r4 ]
"5045
[; ;Source/FreeRTOS/tasks.c: 5045:                                    uint32_t * pulPreviousNotificationValue )
[v _pulPreviousNotificationValue `*ul ~T0 @X0 1 r5 ]
"5046
[; ;Source/FreeRTOS/tasks.c: 5046:     {
[f ]
"5047
[; ;Source/FreeRTOS/tasks.c: 5047:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"5048
[; ;Source/FreeRTOS/tasks.c: 5048:         BaseType_t xReturn = ( ( ( BaseType_t ) 1 ) );
[v _xReturn `c ~T0 @X0 1 a ]
[e = _xReturn -> -> 1 `i `c ]
"5049
[; ;Source/FreeRTOS/tasks.c: 5049:         uint8_t ucOriginalNotifyState;
[v _ucOriginalNotifyState `uc ~T0 @X0 1 a ]
"5051
[; ;Source/FreeRTOS/tasks.c: 5051:         if( ( uxIndexToNotify < 1 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5051 );
[e $ ! == -> < -> _uxIndexToNotify `i -> 1 `i `i -> 0 `i 1734  ]
[e ( _Xprintf , (. :s 127C -> 5051 `i ]
[e :U 1734 ]
"5052
[; ;Source/FreeRTOS/tasks.c: 5052:         if( ( xTaskToNotify ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5052 );
[e $ ! == _xTaskToNotify -> -> 0 `i `*S936 1735  ]
[e ( _Xprintf , (. :s 128C -> 5052 `i ]
[e :U 1735 ]
"5053
[; ;Source/FreeRTOS/tasks.c: 5053:         pxTCB = xTaskToNotify;
[e = _pxTCB _xTaskToNotify ]
"5055
[; ;Source/FreeRTOS/tasks.c: 5055:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"5056
[; ;Source/FreeRTOS/tasks.c: 5056:         {
{
"5057
[; ;Source/FreeRTOS/tasks.c: 5057:             if( pulPreviousNotificationValue != ((void*)0) )
[e $ ! != _pulPreviousNotificationValue -> -> -> 0 `i `*v `*ul 1736  ]
"5058
[; ;Source/FreeRTOS/tasks.c: 5058:             {
{
"5059
[; ;Source/FreeRTOS/tasks.c: 5059:                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
[e = *U _pulPreviousNotificationValue *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux ]
"5060
[; ;Source/FreeRTOS/tasks.c: 5060:             }
}
[e :U 1736 ]
"5062
[; ;Source/FreeRTOS/tasks.c: 5062:             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
[e = _ucOriginalNotifyState *U + &U . *U _pxTCB 10 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux ]
"5064
[; ;Source/FreeRTOS/tasks.c: 5064:             pxTCB->ucNotifyState[ uxIndexToNotify ] = ( ( uint8_t ) 2 );
[e = *U + &U . *U _pxTCB 10 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux -> -> 2 `i `uc ]
"5066
[; ;Source/FreeRTOS/tasks.c: 5066:             switch( eAction )
[e $U 1738  ]
"5067
[; ;Source/FreeRTOS/tasks.c: 5067:             {
{
"5068
[; ;Source/FreeRTOS/tasks.c: 5068:                 case eSetBits:
[e :U 1739 ]
"5069
[; ;Source/FreeRTOS/tasks.c: 5069:                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
[e =| *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux -> _ulValue `ul ]
"5070
[; ;Source/FreeRTOS/tasks.c: 5070:                     break;
[e $U 1737  ]
"5072
[; ;Source/FreeRTOS/tasks.c: 5072:                 case eIncrement:
[e :U 1740 ]
"5073
[; ;Source/FreeRTOS/tasks.c: 5073:                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
[e ++ *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux -> -> 1 `i `ul ]
"5074
[; ;Source/FreeRTOS/tasks.c: 5074:                     break;
[e $U 1737  ]
"5076
[; ;Source/FreeRTOS/tasks.c: 5076:                 case eSetValueWithOverwrite:
[e :U 1741 ]
"5077
[; ;Source/FreeRTOS/tasks.c: 5077:                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
[e = *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux _ulValue ]
"5078
[; ;Source/FreeRTOS/tasks.c: 5078:                     break;
[e $U 1737  ]
"5080
[; ;Source/FreeRTOS/tasks.c: 5080:                 case eSetValueWithoutOverwrite:
[e :U 1742 ]
"5082
[; ;Source/FreeRTOS/tasks.c: 5082:                     if( ucOriginalNotifyState != ( ( uint8_t ) 2 ) )
[e $ ! != -> _ucOriginalNotifyState `i -> -> -> 2 `i `uc `i 1743  ]
"5083
[; ;Source/FreeRTOS/tasks.c: 5083:                     {
{
"5084
[; ;Source/FreeRTOS/tasks.c: 5084:                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
[e = *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux _ulValue ]
"5085
[; ;Source/FreeRTOS/tasks.c: 5085:                     }
}
[e $U 1744  ]
"5086
[; ;Source/FreeRTOS/tasks.c: 5086:                     else
[e :U 1743 ]
"5087
[; ;Source/FreeRTOS/tasks.c: 5087:                     {
{
"5089
[; ;Source/FreeRTOS/tasks.c: 5089:                         xReturn = ( ( ( BaseType_t ) 0 ) );
[e = _xReturn -> -> 0 `i `c ]
"5090
[; ;Source/FreeRTOS/tasks.c: 5090:                     }
}
[e :U 1744 ]
"5092
[; ;Source/FreeRTOS/tasks.c: 5092:                     break;
[e $U 1737  ]
"5094
[; ;Source/FreeRTOS/tasks.c: 5094:                 case eNoAction:
[e :U 1745 ]
"5098
[; ;Source/FreeRTOS/tasks.c: 5098:                     break;
[e $U 1737  ]
"5100
[; ;Source/FreeRTOS/tasks.c: 5100:                 default:
[e :U 1746 ]
"5105
[; ;Source/FreeRTOS/tasks.c: 5105:                     if( ( xTickCount == ( TickType_t ) 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5105 );
[e $ ! == -> == -> _xTickCount `ui -> -> -> 0 `i `us `ui `i -> 0 `i 1747  ]
[e ( _Xprintf , (. :s 129C -> 5105 `i ]
[e :U 1747 ]
"5107
[; ;Source/FreeRTOS/tasks.c: 5107:                     break;
[e $U 1737  ]
"5108
[; ;Source/FreeRTOS/tasks.c: 5108:             }
}
[e $U 1737  ]
[e :U 1738 ]
[e [\ -> _eAction `ui , $ -> . `E7137 1 `ui 1739
 , $ -> . `E7137 2 `ui 1740
 , $ -> . `E7137 3 `ui 1741
 , $ -> . `E7137 4 `ui 1742
 , $ -> . `E7137 0 `ui 1745
 1746 ]
[e :U 1737 ]
"5114
[; ;Source/FreeRTOS/tasks.c: 5114:             if( ucOriginalNotifyState == ( ( uint8_t ) 1 ) )
[e $ ! == -> _ucOriginalNotifyState `i -> -> -> 1 `i `uc `i 1748  ]
"5115
[; ;Source/FreeRTOS/tasks.c: 5115:             {
{
"5116
[; ;Source/FreeRTOS/tasks.c: 5116:                 { List_t * const pxList = ( &( pxTCB->xStateListItem ) )->pvContainer; ( &( pxTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xStateListItem ) )->pxPrevious; ( &( pxTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xStateListItem ) )->pxPrevious; } ( &( pxTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7877 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 1 4 ]
[e = . *U . *U &U . *U _pxTCB 1 1 2 . *U &U . *U _pxTCB 1 2 ]
[e = . *U . *U &U . *U _pxTCB 1 2 1 . *U &U . *U _pxTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 1 1749  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 1 2 ]
}
[e :U 1749 ]
[e = . *U &U . *U _pxTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"5117
[; ;Source/FreeRTOS/tasks.c: 5117:                 ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1750  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1750 ]
}
{
[v F7879 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"5120
[; ;Source/FreeRTOS/tasks.c: 5120:                 if( ( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) == ((void*)0) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5120 );
[e $ ! == -> == . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 `i -> 0 `i 1751  ]
[e ( _Xprintf , (. :s 130C -> 5120 `i ]
[e :U 1751 ]
"5138
[; ;Source/FreeRTOS/tasks.c: 5138:                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
[e $ ! > -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1752  ]
"5139
[; ;Source/FreeRTOS/tasks.c: 5139:                 {
{
"5142
[; ;Source/FreeRTOS/tasks.c: 5142:                     vPortYield();
[e ( _vPortYield ..  ]
"5143
[; ;Source/FreeRTOS/tasks.c: 5143:                 }
}
[e $U 1753  ]
"5144
[; ;Source/FreeRTOS/tasks.c: 5144:                 else
[e :U 1752 ]
"5145
[; ;Source/FreeRTOS/tasks.c: 5145:                 {
{
"5147
[; ;Source/FreeRTOS/tasks.c: 5147:                 }
}
[e :U 1753 ]
"5148
[; ;Source/FreeRTOS/tasks.c: 5148:             }
}
[e $U 1754  ]
"5149
[; ;Source/FreeRTOS/tasks.c: 5149:             else
[e :U 1748 ]
"5150
[; ;Source/FreeRTOS/tasks.c: 5150:             {
{
"5152
[; ;Source/FreeRTOS/tasks.c: 5152:             }
}
[e :U 1754 ]
"5153
[; ;Source/FreeRTOS/tasks.c: 5153:         }
}
"5154
[; ;Source/FreeRTOS/tasks.c: 5154:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1755  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1755 ]
"5156
[; ;Source/FreeRTOS/tasks.c: 5156:         return xReturn;
[e ) _xReturn ]
[e $UE 1733  ]
"5157
[; ;Source/FreeRTOS/tasks.c: 5157:     }
[e :UE 1733 ]
}
"5164
[; ;Source/FreeRTOS/tasks.c: 5164:     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
[v _xTaskGenericNotifyFromISR `(c ~T0 @X0 1 ef6`*S936`uc`ul`E7137`*ul`*c ]
"5170
[; ;Source/FreeRTOS/tasks.c: 5170:     {
{
[e :U _xTaskGenericNotifyFromISR ]
"5164
[; ;Source/FreeRTOS/tasks.c: 5164:     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
[v _xTaskToNotify `*S936 ~T0 @X0 1 r1 ]
"5165
[; ;Source/FreeRTOS/tasks.c: 5165:                                           UBaseType_t uxIndexToNotify,
[v _uxIndexToNotify `uc ~T0 @X0 1 r2 ]
"5166
[; ;Source/FreeRTOS/tasks.c: 5166:                                           uint32_t ulValue,
[v _ulValue `ul ~T0 @X0 1 r3 ]
"5167
[; ;Source/FreeRTOS/tasks.c: 5167:                                           eNotifyAction eAction,
[v _eAction `E7137 ~T0 @X0 1 r4 ]
"5168
[; ;Source/FreeRTOS/tasks.c: 5168:                                           uint32_t * pulPreviousNotificationValue,
[v _pulPreviousNotificationValue `*ul ~T0 @X0 1 r5 ]
"5169
[; ;Source/FreeRTOS/tasks.c: 5169:                                           BaseType_t * pxHigherPriorityTaskWoken )
[v _pxHigherPriorityTaskWoken `*c ~T0 @X0 1 r6 ]
"5170
[; ;Source/FreeRTOS/tasks.c: 5170:     {
[f ]
"5171
[; ;Source/FreeRTOS/tasks.c: 5171:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"5172
[; ;Source/FreeRTOS/tasks.c: 5172:         uint8_t ucOriginalNotifyState;
[v _ucOriginalNotifyState `uc ~T0 @X0 1 a ]
"5173
[; ;Source/FreeRTOS/tasks.c: 5173:         BaseType_t xReturn = ( ( ( BaseType_t ) 1 ) );
[v _xReturn `c ~T0 @X0 1 a ]
[e = _xReturn -> -> 1 `i `c ]
"5174
[; ;Source/FreeRTOS/tasks.c: 5174:         UBaseType_t uxSavedInterruptStatus;
[v _uxSavedInterruptStatus `uc ~T0 @X0 1 a ]
"5176
[; ;Source/FreeRTOS/tasks.c: 5176:         if( ( xTaskToNotify ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5176 );
[e $ ! == _xTaskToNotify -> -> 0 `i `*S936 1757  ]
[e ( _Xprintf , (. :s 131C -> 5176 `i ]
[e :U 1757 ]
"5177
[; ;Source/FreeRTOS/tasks.c: 5177:         if( ( uxIndexToNotify < 1 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5177 );
[e $ ! == -> < -> _uxIndexToNotify `i -> 1 `i `i -> 0 `i 1758  ]
[e ( _Xprintf , (. :s 132C -> 5177 `i ]
[e :U 1758 ]
"5197
[; ;Source/FreeRTOS/tasks.c: 5197:         pxTCB = xTaskToNotify;
[e = _pxTCB _xTaskToNotify ]
"5199
[; ;Source/FreeRTOS/tasks.c: 5199:         uxSavedInterruptStatus = 0;
[e = _uxSavedInterruptStatus -> -> 0 `i `uc ]
"5200
[; ;Source/FreeRTOS/tasks.c: 5200:         {
{
"5201
[; ;Source/FreeRTOS/tasks.c: 5201:             if( pulPreviousNotificationValue != ((void*)0) )
[e $ ! != _pulPreviousNotificationValue -> -> -> 0 `i `*v `*ul 1759  ]
"5202
[; ;Source/FreeRTOS/tasks.c: 5202:             {
{
"5203
[; ;Source/FreeRTOS/tasks.c: 5203:                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
[e = *U _pulPreviousNotificationValue *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux ]
"5204
[; ;Source/FreeRTOS/tasks.c: 5204:             }
}
[e :U 1759 ]
"5206
[; ;Source/FreeRTOS/tasks.c: 5206:             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
[e = _ucOriginalNotifyState *U + &U . *U _pxTCB 10 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux ]
"5207
[; ;Source/FreeRTOS/tasks.c: 5207:             pxTCB->ucNotifyState[ uxIndexToNotify ] = ( ( uint8_t ) 2 );
[e = *U + &U . *U _pxTCB 10 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux -> -> 2 `i `uc ]
"5209
[; ;Source/FreeRTOS/tasks.c: 5209:             switch( eAction )
[e $U 1761  ]
"5210
[; ;Source/FreeRTOS/tasks.c: 5210:             {
{
"5211
[; ;Source/FreeRTOS/tasks.c: 5211:                 case eSetBits:
[e :U 1762 ]
"5212
[; ;Source/FreeRTOS/tasks.c: 5212:                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
[e =| *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux -> _ulValue `ul ]
"5213
[; ;Source/FreeRTOS/tasks.c: 5213:                     break;
[e $U 1760  ]
"5215
[; ;Source/FreeRTOS/tasks.c: 5215:                 case eIncrement:
[e :U 1763 ]
"5216
[; ;Source/FreeRTOS/tasks.c: 5216:                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
[e ++ *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux -> -> 1 `i `ul ]
"5217
[; ;Source/FreeRTOS/tasks.c: 5217:                     break;
[e $U 1760  ]
"5219
[; ;Source/FreeRTOS/tasks.c: 5219:                 case eSetValueWithOverwrite:
[e :U 1764 ]
"5220
[; ;Source/FreeRTOS/tasks.c: 5220:                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
[e = *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux _ulValue ]
"5221
[; ;Source/FreeRTOS/tasks.c: 5221:                     break;
[e $U 1760  ]
"5223
[; ;Source/FreeRTOS/tasks.c: 5223:                 case eSetValueWithoutOverwrite:
[e :U 1765 ]
"5225
[; ;Source/FreeRTOS/tasks.c: 5225:                     if( ucOriginalNotifyState != ( ( uint8_t ) 2 ) )
[e $ ! != -> _ucOriginalNotifyState `i -> -> -> 2 `i `uc `i 1766  ]
"5226
[; ;Source/FreeRTOS/tasks.c: 5226:                     {
{
"5227
[; ;Source/FreeRTOS/tasks.c: 5227:                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
[e = *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux _ulValue ]
"5228
[; ;Source/FreeRTOS/tasks.c: 5228:                     }
}
[e $U 1767  ]
"5229
[; ;Source/FreeRTOS/tasks.c: 5229:                     else
[e :U 1766 ]
"5230
[; ;Source/FreeRTOS/tasks.c: 5230:                     {
{
"5232
[; ;Source/FreeRTOS/tasks.c: 5232:                         xReturn = ( ( ( BaseType_t ) 0 ) );
[e = _xReturn -> -> 0 `i `c ]
"5233
[; ;Source/FreeRTOS/tasks.c: 5233:                     }
}
[e :U 1767 ]
"5235
[; ;Source/FreeRTOS/tasks.c: 5235:                     break;
[e $U 1760  ]
"5237
[; ;Source/FreeRTOS/tasks.c: 5237:                 case eNoAction:
[e :U 1768 ]
"5241
[; ;Source/FreeRTOS/tasks.c: 5241:                     break;
[e $U 1760  ]
"5243
[; ;Source/FreeRTOS/tasks.c: 5243:                 default:
[e :U 1769 ]
"5248
[; ;Source/FreeRTOS/tasks.c: 5248:                     if( ( xTickCount == ( TickType_t ) 0 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5248 );
[e $ ! == -> == -> _xTickCount `ui -> -> -> 0 `i `us `ui `i -> 0 `i 1770  ]
[e ( _Xprintf , (. :s 133C -> 5248 `i ]
[e :U 1770 ]
"5249
[; ;Source/FreeRTOS/tasks.c: 5249:                     break;
[e $U 1760  ]
"5250
[; ;Source/FreeRTOS/tasks.c: 5250:             }
}
[e $U 1760  ]
[e :U 1761 ]
[e [\ -> _eAction `ui , $ -> . `E7137 1 `ui 1762
 , $ -> . `E7137 2 `ui 1763
 , $ -> . `E7137 3 `ui 1764
 , $ -> . `E7137 4 `ui 1765
 , $ -> . `E7137 0 `ui 1768
 1769 ]
[e :U 1760 ]
"5256
[; ;Source/FreeRTOS/tasks.c: 5256:             if( ucOriginalNotifyState == ( ( uint8_t ) 1 ) )
[e $ ! == -> _ucOriginalNotifyState `i -> -> -> 1 `i `uc `i 1771  ]
"5257
[; ;Source/FreeRTOS/tasks.c: 5257:             {
{
"5259
[; ;Source/FreeRTOS/tasks.c: 5259:                 if( ( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) == ((void*)0) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5259 );
[e $ ! == -> == . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 `i -> 0 `i 1772  ]
[e ( _Xprintf , (. :s 134C -> 5259 `i ]
[e :U 1772 ]
"5261
[; ;Source/FreeRTOS/tasks.c: 5261:                 if( uxSchedulerSuspended == ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! == -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1773  ]
"5262
[; ;Source/FreeRTOS/tasks.c: 5262:                 {
{
"5263
[; ;Source/FreeRTOS/tasks.c: 5263:                     { List_t * const pxList = ( &( pxTCB->xStateListItem ) )->pvContainer; ( &( pxTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xStateListItem ) )->pxPrevious; ( &( pxTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xStateListItem ) )->pxPrevious; } ( &( pxTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7892 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 1 4 ]
[e = . *U . *U &U . *U _pxTCB 1 1 2 . *U &U . *U _pxTCB 1 2 ]
[e = . *U . *U &U . *U _pxTCB 1 2 1 . *U &U . *U _pxTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 1 1774  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 1 2 ]
}
[e :U 1774 ]
[e = . *U &U . *U _pxTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"5264
[; ;Source/FreeRTOS/tasks.c: 5264:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1775  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1775 ]
}
{
[v F7894 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"5265
[; ;Source/FreeRTOS/tasks.c: 5265:                 }
}
[e $U 1776  ]
"5266
[; ;Source/FreeRTOS/tasks.c: 5266:                 else
[e :U 1773 ]
"5267
[; ;Source/FreeRTOS/tasks.c: 5267:                 {
{
"5270
[; ;Source/FreeRTOS/tasks.c: 5270:                     { ListItem_t * const pxIndex = ( &( xPendingReadyList ) )->pxIndex; ; ; ( &( pxTCB->xEventListItem ) )->pxNext = pxIndex; ( &( pxTCB->xEventListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( pxTCB->xEventListItem ) ); pxIndex->pxPrevious = ( &( pxTCB->xEventListItem ) ); ( &( pxTCB->xEventListItem ) )->pvContainer = ( &( xPendingReadyList ) ); ( ( &( xPendingReadyList ) )->uxNumberOfItems )++; };
{
[v F7896 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U _xPendingReadyList 1 ]
[e = . *U &U . *U _pxTCB 2 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 2 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 2 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 2 ]
[e = . *U &U . *U _pxTCB 2 4 &U _xPendingReadyList ]
[e ++ . *U &U _xPendingReadyList 0 -> -> 1 `i `Vuc ]
}
"5271
[; ;Source/FreeRTOS/tasks.c: 5271:                 }
}
[e :U 1776 ]
"5273
[; ;Source/FreeRTOS/tasks.c: 5273:                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
[e $ ! > -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1777  ]
"5274
[; ;Source/FreeRTOS/tasks.c: 5274:                 {
{
"5277
[; ;Source/FreeRTOS/tasks.c: 5277:                     if( pxHigherPriorityTaskWoken != ((void*)0) )
[e $ ! != _pxHigherPriorityTaskWoken -> -> -> 0 `i `*v `*c 1778  ]
"5278
[; ;Source/FreeRTOS/tasks.c: 5278:                     {
{
"5279
[; ;Source/FreeRTOS/tasks.c: 5279:                         *pxHigherPriorityTaskWoken = ( ( BaseType_t ) 1 );
[e = *U _pxHigherPriorityTaskWoken -> -> 1 `i `c ]
"5280
[; ;Source/FreeRTOS/tasks.c: 5280:                     }
}
[e :U 1778 ]
"5285
[; ;Source/FreeRTOS/tasks.c: 5285:                     xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"5286
[; ;Source/FreeRTOS/tasks.c: 5286:                 }
}
[e $U 1779  ]
"5287
[; ;Source/FreeRTOS/tasks.c: 5287:                 else
[e :U 1777 ]
"5288
[; ;Source/FreeRTOS/tasks.c: 5288:                 {
{
"5290
[; ;Source/FreeRTOS/tasks.c: 5290:                 }
}
[e :U 1779 ]
"5291
[; ;Source/FreeRTOS/tasks.c: 5291:             }
}
[e :U 1771 ]
"5292
[; ;Source/FreeRTOS/tasks.c: 5292:         }
}
"5293
[; ;Source/FreeRTOS/tasks.c: 5293:         ( void ) ( uxSavedInterruptStatus );
[e _uxSavedInterruptStatus ]
"5295
[; ;Source/FreeRTOS/tasks.c: 5295:         return xReturn;
[e ) _xReturn ]
[e $UE 1756  ]
"5296
[; ;Source/FreeRTOS/tasks.c: 5296:     }
[e :UE 1756 ]
}
"5303
[; ;Source/FreeRTOS/tasks.c: 5303:     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
[v _vTaskGenericNotifyGiveFromISR `(v ~T0 @X0 1 ef3`*S936`uc`*c ]
"5306
[; ;Source/FreeRTOS/tasks.c: 5306:     {
{
[e :U _vTaskGenericNotifyGiveFromISR ]
"5303
[; ;Source/FreeRTOS/tasks.c: 5303:     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
[v _xTaskToNotify `*S936 ~T0 @X0 1 r1 ]
"5304
[; ;Source/FreeRTOS/tasks.c: 5304:                                         UBaseType_t uxIndexToNotify,
[v _uxIndexToNotify `uc ~T0 @X0 1 r2 ]
"5305
[; ;Source/FreeRTOS/tasks.c: 5305:                                         BaseType_t * pxHigherPriorityTaskWoken )
[v _pxHigherPriorityTaskWoken `*c ~T0 @X0 1 r3 ]
"5306
[; ;Source/FreeRTOS/tasks.c: 5306:     {
[f ]
"5307
[; ;Source/FreeRTOS/tasks.c: 5307:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"5308
[; ;Source/FreeRTOS/tasks.c: 5308:         uint8_t ucOriginalNotifyState;
[v _ucOriginalNotifyState `uc ~T0 @X0 1 a ]
"5309
[; ;Source/FreeRTOS/tasks.c: 5309:         UBaseType_t uxSavedInterruptStatus;
[v _uxSavedInterruptStatus `uc ~T0 @X0 1 a ]
"5311
[; ;Source/FreeRTOS/tasks.c: 5311:         if( ( xTaskToNotify ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5311 );
[e $ ! == _xTaskToNotify -> -> 0 `i `*S936 1781  ]
[e ( _Xprintf , (. :s 135C -> 5311 `i ]
[e :U 1781 ]
"5312
[; ;Source/FreeRTOS/tasks.c: 5312:         if( ( uxIndexToNotify < 1 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5312 );
[e $ ! == -> < -> _uxIndexToNotify `i -> 1 `i `i -> 0 `i 1782  ]
[e ( _Xprintf , (. :s 136C -> 5312 `i ]
[e :U 1782 ]
"5332
[; ;Source/FreeRTOS/tasks.c: 5332:         pxTCB = xTaskToNotify;
[e = _pxTCB _xTaskToNotify ]
"5334
[; ;Source/FreeRTOS/tasks.c: 5334:         uxSavedInterruptStatus = 0;
[e = _uxSavedInterruptStatus -> -> 0 `i `uc ]
"5335
[; ;Source/FreeRTOS/tasks.c: 5335:         {
{
"5336
[; ;Source/FreeRTOS/tasks.c: 5336:             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
[e = _ucOriginalNotifyState *U + &U . *U _pxTCB 10 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux ]
"5337
[; ;Source/FreeRTOS/tasks.c: 5337:             pxTCB->ucNotifyState[ uxIndexToNotify ] = ( ( uint8_t ) 2 );
[e = *U + &U . *U _pxTCB 10 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux -> -> 2 `i `uc ]
"5341
[; ;Source/FreeRTOS/tasks.c: 5341:             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
[e ++ *U + &U . *U _pxTCB 9 * -> _uxIndexToNotify `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux -> -> 1 `i `ul ]
"5347
[; ;Source/FreeRTOS/tasks.c: 5347:             if( ucOriginalNotifyState == ( ( uint8_t ) 1 ) )
[e $ ! == -> _ucOriginalNotifyState `i -> -> -> 1 `i `uc `i 1783  ]
"5348
[; ;Source/FreeRTOS/tasks.c: 5348:             {
{
"5350
[; ;Source/FreeRTOS/tasks.c: 5350:                 if( ( ( ( &( pxTCB->xEventListItem ) )->pvContainer ) == ((void*)0) ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5350 );
[e $ ! == -> == . *U &U . *U _pxTCB 2 4 -> -> -> 0 `i `*v `*S931 `i -> 0 `i 1784  ]
[e ( _Xprintf , (. :s 137C -> 5350 `i ]
[e :U 1784 ]
"5352
[; ;Source/FreeRTOS/tasks.c: 5352:                 if( uxSchedulerSuspended == ( UBaseType_t ) ( ( BaseType_t ) 0 ) )
[e $ ! == -> _uxSchedulerSuspended `i -> -> -> -> 0 `i `c `uc `i 1785  ]
"5353
[; ;Source/FreeRTOS/tasks.c: 5353:                 {
{
"5354
[; ;Source/FreeRTOS/tasks.c: 5354:                     { List_t * const pxList = ( &( pxTCB->xStateListItem ) )->pvContainer; ( &( pxTCB->xStateListItem ) )->pxNext->pxPrevious = ( &( pxTCB->xStateListItem ) )->pxPrevious; ( &( pxTCB->xStateListItem ) )->pxPrevious->pxNext = ( &( pxTCB->xStateListItem ) )->pxNext; if( pxList->pxIndex == ( &( pxTCB->xStateListItem ) ) ) { pxList->pxIndex = ( &( pxTCB->xStateListItem ) )->pxPrevious; } ( &( pxTCB->xStateListItem ) )->pvContainer = ((void*)0); ( pxList->uxNumberOfItems )--; };
{
[v F7905 `*S931 ~T0 @X0 1 t ]
[v _pxList `C*S931 ~T0 @X0 1 a ]
[e = _pxList . *U &U . *U _pxTCB 1 4 ]
[e = . *U . *U &U . *U _pxTCB 1 1 2 . *U &U . *U _pxTCB 1 2 ]
[e = . *U . *U &U . *U _pxTCB 1 2 1 . *U &U . *U _pxTCB 1 1 ]
[e $ ! == . *U _pxList 1 &U . *U _pxTCB 1 1786  ]
{
[e = . *U _pxList 1 . *U &U . *U _pxTCB 1 2 ]
}
[e :U 1786 ]
[e = . *U &U . *U _pxTCB 1 4 -> -> -> 0 `i `*v `*S931 ]
[e -- . *U _pxList 0 -> -> 1 `i `Vuc ]
}
"5355
[; ;Source/FreeRTOS/tasks.c: 5355:                     ; { if( ( ( pxTCB )->uxPriority ) > uxTopReadyPriority ) { uxTopReadyPriority = ( ( pxTCB )->uxPriority ); } }; { ListItem_t * const pxIndex = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->pxIndex; ; ; ( &( ( pxTCB )->xStateListItem ) )->pxNext = pxIndex; ( &( ( pxTCB )->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( ( pxTCB )->xStateListItem ) ); pxIndex->pxPrevious = ( &( ( pxTCB )->xStateListItem ) ); ( &( ( pxTCB )->xStateListItem ) )->pvContainer = ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) ); ( ( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ) )->uxNumberOfItems )++; }; ;
{
[e $ ! > -> . *U _pxTCB 3 `i -> _uxTopReadyPriority `i 1787  ]
{
[e = _uxTopReadyPriority . *U _pxTCB 3 ]
}
[e :U 1787 ]
}
{
[v F7907 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 1 ]
[e = . *U &U . *U _pxTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 1 ]
[e = . *U &U . *U _pxTCB 1 4 &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux ]
[e ++ . *U &U *U + &U _pxReadyTasksLists * -> . *U _pxTCB 3 `ux -> -> # *U &U _pxReadyTasksLists `ui `ux 0 -> -> 1 `i `Vuc ]
}
"5356
[; ;Source/FreeRTOS/tasks.c: 5356:                 }
}
[e $U 1788  ]
"5357
[; ;Source/FreeRTOS/tasks.c: 5357:                 else
[e :U 1785 ]
"5358
[; ;Source/FreeRTOS/tasks.c: 5358:                 {
{
"5361
[; ;Source/FreeRTOS/tasks.c: 5361:                     { ListItem_t * const pxIndex = ( &( xPendingReadyList ) )->pxIndex; ; ; ( &( pxTCB->xEventListItem ) )->pxNext = pxIndex; ( &( pxTCB->xEventListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( pxTCB->xEventListItem ) ); pxIndex->pxPrevious = ( &( pxTCB->xEventListItem ) ); ( &( pxTCB->xEventListItem ) )->pvContainer = ( &( xPendingReadyList ) ); ( ( &( xPendingReadyList ) )->uxNumberOfItems )++; };
{
[v F7909 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U _xPendingReadyList 1 ]
[e = . *U &U . *U _pxTCB 2 1 _pxIndex ]
[e = . *U &U . *U _pxTCB 2 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxTCB 2 ]
[e = . *U _pxIndex 2 &U . *U _pxTCB 2 ]
[e = . *U &U . *U _pxTCB 2 4 &U _xPendingReadyList ]
[e ++ . *U &U _xPendingReadyList 0 -> -> 1 `i `Vuc ]
}
"5362
[; ;Source/FreeRTOS/tasks.c: 5362:                 }
}
[e :U 1788 ]
"5364
[; ;Source/FreeRTOS/tasks.c: 5364:                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
[e $ ! > -> . *U _pxTCB 3 `i -> . *U _pxCurrentTCB 3 `i 1789  ]
"5365
[; ;Source/FreeRTOS/tasks.c: 5365:                 {
{
"5368
[; ;Source/FreeRTOS/tasks.c: 5368:                     if( pxHigherPriorityTaskWoken != ((void*)0) )
[e $ ! != _pxHigherPriorityTaskWoken -> -> -> 0 `i `*v `*c 1790  ]
"5369
[; ;Source/FreeRTOS/tasks.c: 5369:                     {
{
"5370
[; ;Source/FreeRTOS/tasks.c: 5370:                         *pxHigherPriorityTaskWoken = ( ( BaseType_t ) 1 );
[e = *U _pxHigherPriorityTaskWoken -> -> 1 `i `c ]
"5371
[; ;Source/FreeRTOS/tasks.c: 5371:                     }
}
[e :U 1790 ]
"5376
[; ;Source/FreeRTOS/tasks.c: 5376:                     xYieldPending = ( ( BaseType_t ) 1 );
[e = _xYieldPending -> -> 1 `i `c ]
"5377
[; ;Source/FreeRTOS/tasks.c: 5377:                 }
}
[e $U 1791  ]
"5378
[; ;Source/FreeRTOS/tasks.c: 5378:                 else
[e :U 1789 ]
"5379
[; ;Source/FreeRTOS/tasks.c: 5379:                 {
{
"5381
[; ;Source/FreeRTOS/tasks.c: 5381:                 }
}
[e :U 1791 ]
"5382
[; ;Source/FreeRTOS/tasks.c: 5382:             }
}
[e :U 1783 ]
"5383
[; ;Source/FreeRTOS/tasks.c: 5383:         }
}
"5384
[; ;Source/FreeRTOS/tasks.c: 5384:         ( void ) ( uxSavedInterruptStatus );
[e _uxSavedInterruptStatus ]
"5385
[; ;Source/FreeRTOS/tasks.c: 5385:     }
[e :UE 1780 ]
}
"5392
[; ;Source/FreeRTOS/tasks.c: 5392:     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
[v _xTaskGenericNotifyStateClear `(c ~T0 @X0 1 ef2`*S936`uc ]
"5394
[; ;Source/FreeRTOS/tasks.c: 5394:     {
{
[e :U _xTaskGenericNotifyStateClear ]
"5392
[; ;Source/FreeRTOS/tasks.c: 5392:     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"5393
[; ;Source/FreeRTOS/tasks.c: 5393:                                              UBaseType_t uxIndexToClear )
[v _uxIndexToClear `uc ~T0 @X0 1 r2 ]
"5394
[; ;Source/FreeRTOS/tasks.c: 5394:     {
[f ]
"5395
[; ;Source/FreeRTOS/tasks.c: 5395:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"5396
[; ;Source/FreeRTOS/tasks.c: 5396:         BaseType_t xReturn;
[v _xReturn `c ~T0 @X0 1 a ]
"5398
[; ;Source/FreeRTOS/tasks.c: 5398:         if( ( uxIndexToClear < 1 ) == 0 ) Xprintf("ASSERT:%s:%d\r\n" "Source/FreeRTOS/tasks.c", 5398 );
[e $ ! == -> < -> _uxIndexToClear `i -> 1 `i `i -> 0 `i 1793  ]
[e ( _Xprintf , (. :s 138C -> 5398 `i ]
[e :U 1793 ]
"5402
[; ;Source/FreeRTOS/tasks.c: 5402:         pxTCB = ( ( ( xTask ) == ((void*)0) ) ? pxCurrentTCB : ( xTask ) );
[e = _pxTCB ? == _xTask -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTask ]
"5404
[; ;Source/FreeRTOS/tasks.c: 5404:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"5405
[; ;Source/FreeRTOS/tasks.c: 5405:         {
{
"5406
[; ;Source/FreeRTOS/tasks.c: 5406:             if( pxTCB->ucNotifyState[ uxIndexToClear ] == ( ( uint8_t ) 2 ) )
[e $ ! == -> *U + &U . *U _pxTCB 10 * -> _uxIndexToClear `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux `i -> -> -> 2 `i `uc `i 1794  ]
"5407
[; ;Source/FreeRTOS/tasks.c: 5407:             {
{
"5408
[; ;Source/FreeRTOS/tasks.c: 5408:                 pxTCB->ucNotifyState[ uxIndexToClear ] = ( ( uint8_t ) 0 );
[e = *U + &U . *U _pxTCB 10 * -> _uxIndexToClear `ux -> -> # *U &U . *U _pxTCB 10 `ui `ux -> -> 0 `i `uc ]
"5409
[; ;Source/FreeRTOS/tasks.c: 5409:                 xReturn = ( ( ( BaseType_t ) 1 ) );
[e = _xReturn -> -> 1 `i `c ]
"5410
[; ;Source/FreeRTOS/tasks.c: 5410:             }
}
[e $U 1795  ]
"5411
[; ;Source/FreeRTOS/tasks.c: 5411:             else
[e :U 1794 ]
"5412
[; ;Source/FreeRTOS/tasks.c: 5412:             {
{
"5413
[; ;Source/FreeRTOS/tasks.c: 5413:                 xReturn = ( ( ( BaseType_t ) 0 ) );
[e = _xReturn -> -> 0 `i `c ]
"5414
[; ;Source/FreeRTOS/tasks.c: 5414:             }
}
[e :U 1795 ]
"5415
[; ;Source/FreeRTOS/tasks.c: 5415:         }
}
"5416
[; ;Source/FreeRTOS/tasks.c: 5416:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1796  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1796 ]
"5418
[; ;Source/FreeRTOS/tasks.c: 5418:         return xReturn;
[e ) _xReturn ]
[e $UE 1792  ]
"5419
[; ;Source/FreeRTOS/tasks.c: 5419:     }
[e :UE 1792 ]
}
"5426
[; ;Source/FreeRTOS/tasks.c: 5426:     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
[v _ulTaskGenericNotifyValueClear `(ul ~T0 @X0 1 ef3`*S936`uc`ul ]
"5429
[; ;Source/FreeRTOS/tasks.c: 5429:     {
{
[e :U _ulTaskGenericNotifyValueClear ]
"5426
[; ;Source/FreeRTOS/tasks.c: 5426:     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
[v _xTask `*S936 ~T0 @X0 1 r1 ]
"5427
[; ;Source/FreeRTOS/tasks.c: 5427:                                             UBaseType_t uxIndexToClear,
[v _uxIndexToClear `uc ~T0 @X0 1 r2 ]
"5428
[; ;Source/FreeRTOS/tasks.c: 5428:                                             uint32_t ulBitsToClear )
[v _ulBitsToClear `ul ~T0 @X0 1 r3 ]
"5429
[; ;Source/FreeRTOS/tasks.c: 5429:     {
[f ]
"5430
[; ;Source/FreeRTOS/tasks.c: 5430:         TCB_t * pxTCB;
[v _pxTCB `*S936 ~T0 @X0 1 a ]
"5431
[; ;Source/FreeRTOS/tasks.c: 5431:         uint32_t ulReturn;
[v _ulReturn `ul ~T0 @X0 1 a ]
"5435
[; ;Source/FreeRTOS/tasks.c: 5435:         pxTCB = ( ( ( xTask ) == ((void*)0) ) ? pxCurrentTCB : ( xTask ) );
[e = _pxTCB ? == _xTask -> -> -> 0 `i `*v `*S936 : _pxCurrentTCB _xTask ]
"5437
[; ;Source/FreeRTOS/tasks.c: 5437:         POSTINC1 = INTCON; INTCONbits.GIE_GIEH = 0;;
[e = _POSTINC1 _INTCON ]
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"5438
[; ;Source/FreeRTOS/tasks.c: 5438:         {
{
"5441
[; ;Source/FreeRTOS/tasks.c: 5441:             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
[e = _ulReturn *U + &U . *U _pxTCB 9 * -> _uxIndexToClear `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux ]
"5442
[; ;Source/FreeRTOS/tasks.c: 5442:             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
[e =& *U + &U . *U _pxTCB 9 * -> _uxIndexToClear `ux -> -> # *U &U . *U _pxTCB 9 `ui `ux -> ~ _ulBitsToClear `ul ]
"5443
[; ;Source/FreeRTOS/tasks.c: 5443:         }
}
"5444
[; ;Source/FreeRTOS/tasks.c: 5444:         __asm("MOVF	POSTDEC1, 1, 0"); if( INDF1 & 0x80 ) { INTCONbits.GIE_GIEH = 1;; };
[; <" MOVF	POSTDEC1, 1, 0 ;# ">
[e $ ! != & -> _INDF1 `i -> 128 `i -> 0 `i 1798  ]
{
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
}
[e :U 1798 ]
"5446
[; ;Source/FreeRTOS/tasks.c: 5446:         return ulReturn;
[e ) _ulReturn ]
[e $UE 1797  ]
"5447
[; ;Source/FreeRTOS/tasks.c: 5447:     }
[e :UE 1797 ]
}
"5489
[; ;Source/FreeRTOS/tasks.c: 5489: static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
[v _prvAddCurrentTaskToDelayedList `(v ~T0 @X0 1 sf2`us`Cc ]
"5491
[; ;Source/FreeRTOS/tasks.c: 5491: {
{
[e :U _prvAddCurrentTaskToDelayedList ]
"5489
[; ;Source/FreeRTOS/tasks.c: 5489: static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
[v _xTicksToWait `us ~T0 @X0 1 r1 ]
"5490
[; ;Source/FreeRTOS/tasks.c: 5490:                                             const BaseType_t xCanBlockIndefinitely )
[v _xCanBlockIndefinitely `Cc ~T0 @X0 1 r2 ]
"5491
[; ;Source/FreeRTOS/tasks.c: 5491: {
[f ]
"5492
[; ;Source/FreeRTOS/tasks.c: 5492:     TickType_t xTimeToWake;
[v _xTimeToWake `us ~T0 @X0 1 a ]
"5493
[; ;Source/FreeRTOS/tasks.c: 5493:     const TickType_t xConstTickCount = xTickCount;
[v _xConstTickCount `Cus ~T0 @X0 1 a ]
[e = _xConstTickCount _xTickCount ]
"5506
[; ;Source/FreeRTOS/tasks.c: 5506:     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
[e $ ! == -> ( _uxListRemove (1 &U . *U _pxCurrentTCB 1 `i -> -> -> 0 `i `uc `i 1800  ]
"5507
[; ;Source/FreeRTOS/tasks.c: 5507:     {
{
"5511
[; ;Source/FreeRTOS/tasks.c: 5511:     }
}
[e $U 1801  ]
"5512
[; ;Source/FreeRTOS/tasks.c: 5512:     else
[e :U 1800 ]
"5513
[; ;Source/FreeRTOS/tasks.c: 5513:     {
{
"5515
[; ;Source/FreeRTOS/tasks.c: 5515:     }
}
[e :U 1801 ]
"5518
[; ;Source/FreeRTOS/tasks.c: 5518:     {
{
"5519
[; ;Source/FreeRTOS/tasks.c: 5519:         if( ( xTicksToWait == ( TickType_t ) 0xffff ) && ( xCanBlockIndefinitely != ( ( BaseType_t ) 0 ) ) )
[e $ ! && == -> _xTicksToWait `ui -> -> -> 65535 `ui `us `ui != -> _xCanBlockIndefinitely `i -> -> -> 0 `i `c `i 1802  ]
"5520
[; ;Source/FreeRTOS/tasks.c: 5520:         {
{
"5524
[; ;Source/FreeRTOS/tasks.c: 5524:             { ListItem_t * const pxIndex = ( &xSuspendedTaskList )->pxIndex; ; ; ( &( pxCurrentTCB->xStateListItem ) )->pxNext = pxIndex; ( &( pxCurrentTCB->xStateListItem ) )->pxPrevious = pxIndex->pxPrevious; pxIndex->pxPrevious->pxNext = ( &( pxCurrentTCB->xStateListItem ) ); pxIndex->pxPrevious = ( &( pxCurrentTCB->xStateListItem ) ); ( &( pxCurrentTCB->xStateListItem ) )->pvContainer = ( &xSuspendedTaskList ); ( ( &xSuspendedTaskList )->uxNumberOfItems )++; };
{
[v F7927 `*S930 ~T0 @X0 1 t ]
[v _pxIndex `C*S930 ~T0 @X0 1 a ]
[e = _pxIndex . *U &U _xSuspendedTaskList 1 ]
[e = . *U &U . *U _pxCurrentTCB 1 1 _pxIndex ]
[e = . *U &U . *U _pxCurrentTCB 1 2 . *U _pxIndex 2 ]
[e = . *U . *U _pxIndex 2 1 &U . *U _pxCurrentTCB 1 ]
[e = . *U _pxIndex 2 &U . *U _pxCurrentTCB 1 ]
[e = . *U &U . *U _pxCurrentTCB 1 4 &U _xSuspendedTaskList ]
[e ++ . *U &U _xSuspendedTaskList 0 -> -> 1 `i `Vuc ]
}
"5525
[; ;Source/FreeRTOS/tasks.c: 5525:         }
}
[e $U 1803  ]
"5526
[; ;Source/FreeRTOS/tasks.c: 5526:         else
[e :U 1802 ]
"5527
[; ;Source/FreeRTOS/tasks.c: 5527:         {
{
"5531
[; ;Source/FreeRTOS/tasks.c: 5531:             xTimeToWake = xConstTickCount + xTicksToWait;
[e = _xTimeToWake -> + -> _xConstTickCount `ui -> _xTicksToWait `ui `us ]
"5534
[; ;Source/FreeRTOS/tasks.c: 5534:             ( ( &( pxCurrentTCB->xStateListItem ) )->xItemValue = ( xTimeToWake ) );
[e = . *U &U . *U _pxCurrentTCB 1 0 _xTimeToWake ]
"5536
[; ;Source/FreeRTOS/tasks.c: 5536:             if( xTimeToWake < xConstTickCount )
[e $ ! < -> _xTimeToWake `ui -> _xConstTickCount `ui 1804  ]
"5537
[; ;Source/FreeRTOS/tasks.c: 5537:             {
{
"5540
[; ;Source/FreeRTOS/tasks.c: 5540:                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
[e ( _vListInsert (2 , _pxOverflowDelayedTaskList &U . *U _pxCurrentTCB 1 ]
"5541
[; ;Source/FreeRTOS/tasks.c: 5541:             }
}
[e $U 1805  ]
"5542
[; ;Source/FreeRTOS/tasks.c: 5542:             else
[e :U 1804 ]
"5543
[; ;Source/FreeRTOS/tasks.c: 5543:             {
{
"5546
[; ;Source/FreeRTOS/tasks.c: 5546:                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
[e ( _vListInsert (2 , _pxDelayedTaskList &U . *U _pxCurrentTCB 1 ]
"5551
[; ;Source/FreeRTOS/tasks.c: 5551:                 if( xTimeToWake < xNextTaskUnblockTime )
[e $ ! < -> _xTimeToWake `ui -> _xNextTaskUnblockTime `ui 1806  ]
"5552
[; ;Source/FreeRTOS/tasks.c: 5552:                 {
{
"5553
[; ;Source/FreeRTOS/tasks.c: 5553:                     xNextTaskUnblockTime = xTimeToWake;
[e = _xNextTaskUnblockTime _xTimeToWake ]
"5554
[; ;Source/FreeRTOS/tasks.c: 5554:                 }
}
[e $U 1807  ]
"5555
[; ;Source/FreeRTOS/tasks.c: 5555:                 else
[e :U 1806 ]
"5556
[; ;Source/FreeRTOS/tasks.c: 5556:                 {
{
"5558
[; ;Source/FreeRTOS/tasks.c: 5558:                 }
}
[e :U 1807 ]
"5559
[; ;Source/FreeRTOS/tasks.c: 5559:             }
}
[e :U 1805 ]
"5560
[; ;Source/FreeRTOS/tasks.c: 5560:         }
}
[e :U 1803 ]
"5561
[; ;Source/FreeRTOS/tasks.c: 5561:     }
}
"5599
[; ;Source/FreeRTOS/tasks.c: 5599: }
[e :UE 1799 ]
}
[a 122C 37 115 0 ]
[a 7C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 9C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 66C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 67C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 68C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 69C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 70C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 71C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 72C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 73C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 74C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 75C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 76C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 85C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 87C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 88C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 89C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 93C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 108C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 110C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 111C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 112C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 113C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 114C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 115C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 116C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 117C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 118C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 125C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 126C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 127C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 128C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 129C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 130C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 131C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 132C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 133C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 134C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 135C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 136C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 137C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 138C 65 83 83 69 82 84 58 37 115 58 37 100 13 10 83 111 117 114 99 101 47 70 114 101 101 82 84 79 83 47 116 97 115 107 115 46 99 0 ]
[a 79C 73 68 76 69 0 ]
[a 95C 120 78 101 120 61 0 ]
[a 94C 120 67 111 110 61 0 ]
[a 10C 112 73 84 61 0 ]
[a 90C 84 73 84 61 0 ]
[a 91C 84 73 84 61 0 ]
[a 92C 84 73 84 61 0 ]
[a 96C 84 73 84 61 0 ]
[a 97C 84 73 84 61 0 ]
[a 98C 84 73 84 61 0 ]
[a 99C 84 73 84 61 0 ]
[a 100C 84 73 84 61 0 ]
[a 101C 84 73 84 61 0 ]
[a 102C 84 73 84 61 0 ]
[a 103C 84 73 84 61 0 ]
[a 104C 84 73 84 61 0 ]
[a 105C 84 73 84 61 0 ]
[a 106C 84 73 84 61 0 ]
[a 107C 84 83 67 61 0 ]
[a 109C 84 83 67 61 0 ]
[a 32C 32 120 73 116 101 109 86 97 108 117 101 32 32 32 32 61 32 37 120 13 10 0 ]
[a 26C 32 120 73 116 101 109 86 97 108 117 101 32 32 18446744073709551587 18446744073709551488 18446744073709551488 61 32 37 120 13 10 0 ]
[a 16C 112 99 84 97 115 107 78 97 109 101 32 32 32 32 32 61 32 37 115 13 10 0 ]
[a 5C 112 114 118 73 110 105 116 105 97 108 105 115 101 78 101 119 84 97 115 107 32 48 48 50 32 112 120 83 116 97 99 107 61 37 112 13 10 0 ]
[a 2C 120 84 97 115 107 67 114 101 97 116 101 32 48 48 50 32 112 120 83 116 97 99 107 61 37 112 13 10 0 ]
[a 4C 112 114 118 73 110 105 116 105 97 108 105 115 101 78 101 119 84 97 115 107 32 48 48 49 32 112 120 78 101 119 84 67 66 61 37 112 13 10 0 ]
[a 1C 120 84 97 115 107 67 114 101 97 116 101 32 48 48 49 32 112 120 78 101 119 84 67 66 61 37 112 13 10 0 ]
[a 55C 32 32 43 45 45 32 112 120 67 111 110 116 97 105 110 101 114 32 61 37 112 13 10 0 ]
[a 62C 32 32 43 45 45 32 112 120 67 111 110 116 97 105 110 101 114 32 61 37 112 13 10 0 ]
[a 42C 32 32 43 45 45 32 112 120 80 114 101 118 105 111 117 115 32 32 61 37 112 13 10 0 ]
[a 47C 32 32 43 45 45 32 112 120 80 114 101 118 105 111 117 115 32 32 61 37 112 13 10 0 ]
[a 53C 32 32 43 45 45 32 112 120 80 114 101 118 105 111 117 115 32 32 61 37 112 13 10 0 ]
[a 60C 32 32 43 45 45 32 112 120 80 114 101 118 105 111 117 115 32 32 61 37 112 13 10 0 ]
[a 48C 32 32 43 45 45 32 112 118 79 119 110 101 114 32 32 32 32 32 61 37 112 13 10 0 ]
[a 54C 32 32 43 45 45 32 112 118 79 119 110 101 114 32 32 32 32 32 61 37 112 13 10 0 ]
[a 61C 32 32 43 45 45 32 112 118 79 119 110 101 114 32 32 32 32 32 61 37 112 13 10 0 ]
[a 41C 32 32 43 45 45 32 112 120 78 101 120 116 32 32 32 32 32 32 61 37 112 13 10 0 ]
[a 46C 32 32 43 45 45 32 112 120 78 101 120 116 32 32 32 32 32 32 61 37 112 13 10 0 ]
[a 52C 32 32 43 45 45 32 112 120 78 101 120 116 32 32 32 32 32 32 61 37 112 13 10 0 ]
[a 59C 32 32 43 45 45 32 112 120 78 101 120 116 32 32 32 32 32 32 61 37 112 13 10 0 ]
[a 39C 120 76 105 115 116 69 110 100 32 32 32 32 32 32 32 32 32 32 61 37 112 13 10 0 ]
[a 44C 112 120 73 110 100 101 120 32 32 32 32 32 32 32 32 32 32 32 61 37 112 13 10 0 ]
[a 27C 120 69 118 101 110 116 76 105 115 116 73 116 101 109 32 61 32 37 112 13 10 0 ]
[a 21C 120 83 116 97 116 101 76 105 115 116 73 116 101 109 32 61 32 37 112 13 10 0 ]
[a 19C 32 112 120 84 111 112 79 102 83 116 97 99 107 32 32 61 32 37 112 13 10 0 ]
[a 20C 32 112 120 69 110 100 79 102 83 116 97 99 107 32 32 61 32 37 112 13 10 0 ]
[a 22C 32 112 118 67 111 110 116 97 105 110 101 114 32 32 32 61 32 37 112 13 10 0 ]
[a 25C 32 112 120 80 114 101 118 105 111 117 115 32 32 32 32 61 32 37 112 13 10 0 ]
[a 23C 32 112 118 79 119 110 101 114 32 32 32 32 32 32 32 61 32 37 112 13 10 0 ]
[a 18C 32 112 120 83 116 97 99 107 32 32 32 32 32 32 32 61 32 37 112 13 10 0 ]
[a 15C 112 120 78 101 119 84 67 66 32 32 32 32 32 32 32 61 32 37 112 13 10 0 ]
[a 24C 32 112 120 78 101 120 116 32 32 32 32 32 32 32 32 61 32 37 112 13 10 0 ]
[a 30C 32 112 120 78 101 120 116 32 32 32 32 32 18446744073709551587 18446744073709551488 18446744073709551488 32 61 32 37 112 13 10 0 ]
[a 28C 32 112 118 67 111 110 116 97 105 110 101 114 32 18446744073709551587 18446744073709551488 18446744073709551488 61 32 37 112 13 10 0 ]
[a 31C 32 112 120 80 114 101 118 105 111 117 115 32 32 18446744073709551587 18446744073709551488 18446744073709551488 61 32 37 112 13 10 0 ]
[a 29C 32 112 118 79 119 110 101 114 32 32 32 32 32 18446744073709551587 18446744073709551488 18446744073709551488 61 32 37 112 13 10 0 ]
[a 50C 120 76 105 115 116 69 110 100 46 112 120 78 101 120 116 40 37 100 41 32 37 112 13 10 0 ]
[a 57C 120 76 105 115 116 69 110 100 46 112 120 78 101 120 116 40 37 100 41 32 37 112 13 10 0 ]
[a 120C 78 97 109 101 9 83 116 97 116 101 9 80 114 105 111 9 83 116 97 99 107 9 78 117 109 13 10 0 ]
[a 63C 117 120 67 117 114 114 101 110 116 78 117 109 98 101 114 79 102 84 97 115 107 115 61 37 100 13 10 0 ]
[a 40C 32 32 43 45 45 32 120 73 116 101 109 86 97 108 117 101 32 32 61 37 100 13 10 0 ]
[a 45C 32 32 43 45 45 32 120 73 116 101 109 86 97 108 117 101 32 32 61 37 100 13 10 0 ]
[a 51C 32 32 43 45 45 32 120 73 116 101 109 86 97 108 117 101 32 32 61 37 100 13 10 0 ]
[a 58C 32 32 43 45 45 32 120 73 116 101 109 86 97 108 117 101 32 32 61 37 100 13 10 0 ]
[a 38C 84 65 83 75 32 78 85 77 32 61 32 37 100 13 10 0 ]
[a 17C 32 117 120 80 114 105 111 114 105 116 121 32 32 32 32 61 32 37 100 13 10 0 ]
[a 123C 9 37 99 9 37 100 9 37 100 9 37 100 13 10 0 ]
[a 8C 112 114 118 73 110 105 116 105 97 108 105 115 101 78 101 119 84 97 115 107 32 48 48 51 13 10 0 ]
[a 3C 120 84 97 115 107 67 114 101 97 116 101 32 48 48 51 13 10 0 ]
[a 65C 112 114 118 65 100 100 78 101 119 84 97 115 107 84 111 82 101 97 100 121 76 105 115 116 18446744073709551587 18446744073709551488 18446744073709551488 48 51 13 10 0 ]
[a 6C 112 114 118 73 110 105 116 105 97 108 105 115 101 78 101 119 84 97 115 107 32 48 48 50 13 10 0 ]
[a 64C 112 114 118 65 100 100 78 101 119 84 97 115 107 84 111 82 101 97 100 121 76 105 115 116 18446744073709551587 18446744073709551488 18446744073709551488 48 50 13 10 0 ]
[a 119C 13 10 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 121C 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 124C 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 37C 80 82 73 79 82 73 84 89 32 61 32 37 100 32 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 45 13 10 0 ]
[a 34C 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 13 10 0 ]
[a 36C 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 13 10 0 ]
[a 12C 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 13 10 0 ]
[a 14C 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 13 10 0 ]
[a 35C 42 42 42 32 112 120 82 101 97 100 121 84 97 115 107 115 76 105 115 116 115 91 93 32 42 42 42 13 10 0 ]
[a 13C 42 42 42 32 32 116 97 115 107 73 110 102 111 32 32 42 42 42 13 10 0 ]
[a 78C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 50 41 13 10 0 ]
[a 77C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 49 41 13 10 0 ]
[a 80C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 50 41 120 82 101 116 117 114 110 61 37 100 32 13 10 0 ]
[a 86C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 57 41 32 13 10 0 ]
[a 84C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 56 41 32 13 10 0 ]
[a 83C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 55 41 32 13 10 0 ]
[a 82C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 53 41 32 13 10 0 ]
[a 81C 118 84 97 115 107 83 116 97 114 116 83 99 104 101 100 117 108 101 114 40 48 48 51 41 32 13 10 0 ]
[a 11C 13 10 0 ]
[a 33C 13 10 0 ]
[a 43C 13 10 0 ]
[a 49C 13 10 0 ]
[a 56C 13 10 0 ]
