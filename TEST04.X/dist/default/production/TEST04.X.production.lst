

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Sep 11 15:04:41 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F47J53 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataBANK0
    97   012ACA                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _CharConv
   101   012ACA  30                 	db	48
   102   012ACB  31                 	db	49
   103   012ACC  32                 	db	50
   104   012ACD  33                 	db	51
   105   012ACE  34                 	db	52
   106   012ACF  35                 	db	53
   107   012AD0  36                 	db	54
   108   012AD1  37                 	db	55
   109   012AD2  38                 	db	56
   110   012AD3  39                 	db	57
   111   012AD4  61                 	db	97
   112   012AD5  62                 	db	98
   113   012AD6  63                 	db	99
   114   012AD7  64                 	db	100
   115   012AD8  65                 	db	101
   116   012AD9  66                 	db	102
   117                           
   118                           ;initializer for stoa@F1156
   119   012ADA  28                 	db	40
   120   012ADB  6E                 	db	110
   121   012ADC  75                 	db	117
   122   012ADD  6C                 	db	108
   123   012ADE  6C                 	db	108
   124   012ADF  29                 	db	41
   125   012AE0  00                 	db	0
   126                           
   127                           	psect	mediumconst
   128   00F8EA                     __pmediumconst:
   129                           	callstack 0
   130   00F8EA  00                 	db	0
   131   00F8EB                     _ConvC:
   132                           	callstack 0
   133   00F8EB  30                 	db	48
   134   00F8EC  31                 	db	49
   135   00F8ED  32                 	db	50
   136   00F8EE  33                 	db	51
   137   00F8EF  34                 	db	52
   138   00F8F0  35                 	db	53
   139   00F8F1  36                 	db	54
   140   00F8F2  37                 	db	55
   141   00F8F3  38                 	db	56
   142   00F8F4  39                 	db	57
   143   00F8F5  61                 	db	97
   144   00F8F6  62                 	db	98
   145   00F8F7  63                 	db	99
   146   00F8F8  64                 	db	100
   147   00F8F9  65                 	db	101
   148   00F8FA  66                 	db	102
   149   00F8FB                     __end_of_ConvC:
   150                           	callstack 0
   151   00F8FB                     _MenueList:
   152                           	callstack 0
   153   00F8FB  04                 	db	low _Deb_menue00
   154   00F8FC  F9                 	db	high _Deb_menue00
   155   00F8FD  09                 	db	9
   156   00F8FE  12                 	db	low _Deb_menue01
   157   00F8FF  FA                 	db	high _Deb_menue01
   158   00F900  05                 	db	5
   159   00F901  21                 	db	low _Deb_menue02
   160   00F902  FB                 	db	high _Deb_menue02
   161   00F903  01                 	db	1
   162   00F904                     __end_of_MenueList:
   163                           	callstack 0
   164   00F904                     _Deb_menue00:
   165                           	callstack 0
   166   00F904  0D                 	db	13
   167   00F905  0A                 	db	10
   168   00F906  56                 	db	86
   169   00F907  4C                 	db	76
   170   00F908  35                 	db	53
   171   00F909  33                 	db	51
   172   00F90A  20                 	db	32
   173   00F90B  4D                 	db	77
   174   00F90C  45                 	db	69
   175   00F90D  4E                 	db	78
   176   00F90E  55                 	db	85
   177   00F90F  45                 	db	69
   178   00F910  00                 	db	0
   179   00F911  00                 	db	0
   180   00F912  00                 	db	0
   181   00F913  00                 	db	0
   182   00F914  00                 	db	0
   183   00F915  00                 	db	0
   184   00F916  00                 	db	0
   185   00F917  00                 	db	0
   186   00F918  00                 	db	0
   187   00F919  00                 	db	0
   188   00F91A  00                 	db	0
   189   00F91B  00                 	db	0
   190   00F91C  00                 	db	0
   191   00F91D  00                 	db	0
   192   00F91E  00                 	db	0
   193   00F91F  00                 	db	0
   194   00F920  00                 	db	0
   195   00F921  00                 	db	0
   196   00F922  20                 	db	32
   197   00F923  31                 	db	49
   198   00F924  2E                 	db	46
   199   00F925  56                 	db	86
   200   00F926  4C                 	db	76
   201   00F927  35                 	db	53
   202   00F928  33                 	db	51
   203   00F929  5F                 	db	95
   204   00F92A  49                 	db	73
   205   00F92B  4E                 	db	78
   206   00F92C  49                 	db	73
   207   00F92D  54                 	db	84
   208   00F92E  00                 	db	0
   209   00F92F  00                 	db	0
   210   00F930  00                 	db	0
   211   00F931  00                 	db	0
   212   00F932  00                 	db	0
   213   00F933  00                 	db	0
   214   00F934  00                 	db	0
   215   00F935  00                 	db	0
   216   00F936  00                 	db	0
   217   00F937  00                 	db	0
   218   00F938  00                 	db	0
   219   00F939  00                 	db	0
   220   00F93A  00                 	db	0
   221   00F93B  00                 	db	0
   222   00F93C  00                 	db	0
   223   00F93D  00                 	db	0
   224   00F93E  00                 	db	0
   225   00F93F  00                 	db	0
   226   00F940  20                 	db	32
   227   00F941  32                 	db	50
   228   00F942  2E                 	db	46
   229   00F943  43                 	db	67
   230   00F944  4F                 	db	79
   231   00F945  4E                 	db	78
   232   00F946  54                 	db	84
   233   00F947  49                 	db	73
   234   00F948  49                 	db	73
   235   00F949  4F                 	db	79
   236   00F94A  55                 	db	85
   237   00F94B  53                 	db	83
   238   00F94C  20                 	db	32
   239   00F94D  52                 	db	82
   240   00F94E  41                 	db	65
   241   00F94F  4E                 	db	78
   242   00F950  47                 	db	71
   243   00F951  49                 	db	73
   244   00F952  4E                 	db	78
   245   00F953  47                 	db	71
   246   00F954  00                 	db	0
   247   00F955  00                 	db	0
   248   00F956  00                 	db	0
   249   00F957  00                 	db	0
   250   00F958  00                 	db	0
   251   00F959  00                 	db	0
   252   00F95A  00                 	db	0
   253   00F95B  00                 	db	0
   254   00F95C  00                 	db	0
   255   00F95D  00                 	db	0
   256   00F95E  20                 	db	32
   257   00F95F  33                 	db	51
   258   00F960  2E                 	db	46
   259   00F961  53                 	db	83
   260   00F962  49                 	db	73
   261   00F963  4E                 	db	78
   262   00F964  47                 	db	71
   263   00F965  4C                 	db	76
   264   00F966  45                 	db	69
   265   00F967  20                 	db	32
   266   00F968  52                 	db	82
   267   00F969  41                 	db	65
   268   00F96A  4E                 	db	78
   269   00F96B  47                 	db	71
   270   00F96C  49                 	db	73
   271   00F96D  4E                 	db	78
   272   00F96E  47                 	db	71
   273   00F96F  00                 	db	0
   274   00F970  00                 	db	0
   275   00F971  00                 	db	0
   276   00F972  00                 	db	0
   277   00F973  00                 	db	0
   278   00F974  00                 	db	0
   279   00F975  00                 	db	0
   280   00F976  00                 	db	0
   281   00F977  00                 	db	0
   282   00F978  00                 	db	0
   283   00F979  00                 	db	0
   284   00F97A  00                 	db	0
   285   00F97B  00                 	db	0
   286   00F97C  20                 	db	32
   287   00F97D  34                 	db	52
   288   00F97E  2E                 	db	46
   289   00F97F  53                 	db	83
   290   00F980  49                 	db	73
   291   00F981  4E                 	db	78
   292   00F982  47                 	db	71
   293   00F983  4C                 	db	76
   294   00F984  45                 	db	69
   295   00F985  20                 	db	32
   296   00F986  52                 	db	82
   297   00F987  41                 	db	65
   298   00F988  4E                 	db	78
   299   00F989  47                 	db	71
   300   00F98A  49                 	db	73
   301   00F98B  4E                 	db	78
   302   00F98C  47                 	db	71
   303   00F98D  20                 	db	32
   304   00F98E  48                 	db	72
   305   00F98F  41                 	db	65
   306   00F990  00                 	db	0
   307   00F991  00                 	db	0
   308   00F992  00                 	db	0
   309   00F993  00                 	db	0
   310   00F994  00                 	db	0
   311   00F995  00                 	db	0
   312   00F996  00                 	db	0
   313   00F997  00                 	db	0
   314   00F998  00                 	db	0
   315   00F999  00                 	db	0
   316   00F99A  20                 	db	32
   317   00F99B  35                 	db	53
   318   00F99C  2E                 	db	46
   319   00F99D  53                 	db	83
   320   00F99E  49                 	db	73
   321   00F99F  4E                 	db	78
   322   00F9A0  47                 	db	71
   323   00F9A1  4C                 	db	76
   324   00F9A2  45                 	db	69
   325   00F9A3  20                 	db	32
   326   00F9A4  52                 	db	82
   327   00F9A5  41                 	db	65
   328   00F9A6  4E                 	db	78
   329   00F9A7  47                 	db	71
   330   00F9A8  49                 	db	73
   331   00F9A9  4E                 	db	78
   332   00F9AA  47                 	db	71
   333   00F9AB  20                 	db	32
   334   00F9AC  48                 	db	72
   335   00F9AD  53                 	db	83
   336   00F9AE  00                 	db	0
   337   00F9AF  00                 	db	0
   338   00F9B0  00                 	db	0
   339   00F9B1  00                 	db	0
   340   00F9B2  00                 	db	0
   341   00F9B3  00                 	db	0
   342   00F9B4  00                 	db	0
   343   00F9B5  00                 	db	0
   344   00F9B6  00                 	db	0
   345   00F9B7  00                 	db	0
   346   00F9B8  20                 	db	32
   347   00F9B9  36                 	db	54
   348   00F9BA  2E                 	db	46
   349   00F9BB  53                 	db	83
   350   00F9BC  49                 	db	73
   351   00F9BD  4E                 	db	78
   352   00F9BE  47                 	db	71
   353   00F9BF  4C                 	db	76
   354   00F9C0  45                 	db	69
   355   00F9C1  20                 	db	32
   356   00F9C2  52                 	db	82
   357   00F9C3  41                 	db	65
   358   00F9C4  4E                 	db	78
   359   00F9C5  47                 	db	71
   360   00F9C6  49                 	db	73
   361   00F9C7  4E                 	db	78
   362   00F9C8  47                 	db	71
   363   00F9C9  20                 	db	32
   364   00F9CA  4C                 	db	76
   365   00F9CB  52                 	db	82
   366   00F9CC  00                 	db	0
   367   00F9CD  00                 	db	0
   368   00F9CE  00                 	db	0
   369   00F9CF  00                 	db	0
   370   00F9D0  00                 	db	0
   371   00F9D1  00                 	db	0
   372   00F9D2  00                 	db	0
   373   00F9D3  00                 	db	0
   374   00F9D4  00                 	db	0
   375   00F9D5  00                 	db	0
   376   00F9D6  20                 	db	32
   377   00F9D7  37                 	db	55
   378   00F9D8  2E                 	db	46
   379   00F9D9  56                 	db	86
   380   00F9DA  4C                 	db	76
   381   00F9DB  35                 	db	53
   382   00F9DC  33                 	db	51
   383   00F9DD  20                 	db	32
   384   00F9DE  44                 	db	68
   385   00F9DF  61                 	db	97
   386   00F9E0  74                 	db	116
   387   00F9E1  61                 	db	97
   388   00F9E2  20                 	db	32
   389   00F9E3  44                 	db	68
   390   00F9E4  49                 	db	73
   391   00F9E5  53                 	db	83
   392   00F9E6  50                 	db	80
   393   00F9E7  4C                 	db	76
   394   00F9E8  41                 	db	65
   395   00F9E9  59                 	db	89
   396   00F9EA  00                 	db	0
   397   00F9EB  00                 	db	0
   398   00F9EC  00                 	db	0
   399   00F9ED  00                 	db	0
   400   00F9EE  00                 	db	0
   401   00F9EF  00                 	db	0
   402   00F9F0  00                 	db	0
   403   00F9F1  00                 	db	0
   404   00F9F2  00                 	db	0
   405   00F9F3  00                 	db	0
   406   00F9F4  20                 	db	32
   407   00F9F5  72                 	db	114
   408   00F9F6  2E                 	db	46
   409   00F9F7  45                 	db	69
   410   00F9F8  58                 	db	88
   411   00F9F9  49                 	db	73
   412   00F9FA  54                 	db	84
   413   00F9FB  00                 	db	0
   414   00F9FC  00                 	db	0
   415   00F9FD  00                 	db	0
   416   00F9FE  00                 	db	0
   417   00F9FF  00                 	db	0
   418   00FA00  00                 	db	0
   419   00FA01  00                 	db	0
   420   00FA02  00                 	db	0
   421   00FA03  00                 	db	0
   422   00FA04  00                 	db	0
   423   00FA05  00                 	db	0
   424   00FA06  00                 	db	0
   425   00FA07  00                 	db	0
   426   00FA08  00                 	db	0
   427   00FA09  00                 	db	0
   428   00FA0A  00                 	db	0
   429   00FA0B  00                 	db	0
   430   00FA0C  00                 	db	0
   431   00FA0D  00                 	db	0
   432   00FA0E  00                 	db	0
   433   00FA0F  00                 	db	0
   434   00FA10  00                 	db	0
   435   00FA11  00                 	db	0
   436   00FA12                     __end_of_Deb_menue00:
   437                           	callstack 0
   438   00FA12                     _Deb_menue01:
   439                           	callstack 0
   440   00FA12  0D                 	db	13
   441   00FA13  0A                 	db	10
   442   00FA14  52                 	db	82
   443   00FA15  53                 	db	83
   444   00FA16  34                 	db	52
   445   00FA17  38                 	db	56
   446   00FA18  35                 	db	53
   447   00FA19  20                 	db	32
   448   00FA1A  4D                 	db	77
   449   00FA1B  45                 	db	69
   450   00FA1C  4E                 	db	78
   451   00FA1D  55                 	db	85
   452   00FA1E  45                 	db	69
   453   00FA1F  00                 	db	0
   454   00FA20  00                 	db	0
   455   00FA21  00                 	db	0
   456   00FA22  00                 	db	0
   457   00FA23  00                 	db	0
   458   00FA24  00                 	db	0
   459   00FA25  00                 	db	0
   460   00FA26  00                 	db	0
   461   00FA27  00                 	db	0
   462   00FA28  00                 	db	0
   463   00FA29  00                 	db	0
   464   00FA2A  00                 	db	0
   465   00FA2B  00                 	db	0
   466   00FA2C  00                 	db	0
   467   00FA2D  00                 	db	0
   468   00FA2E  00                 	db	0
   469   00FA2F  00                 	db	0
   470   00FA30  20                 	db	32
   471   00FA31  31                 	db	49
   472   00FA32  2E                 	db	46
   473   00FA33  52                 	db	82
   474   00FA34  58                 	db	88
   475   00FA35  20                 	db	32
   476   00FA36  4D                 	db	77
   477   00FA37  4F                 	db	79
   478   00FA38  44                 	db	68
   479   00FA39  45                 	db	69
   480   00FA3A  00                 	db	0
   481   00FA3B  00                 	db	0
   482   00FA3C  00                 	db	0
   483   00FA3D  00                 	db	0
   484   00FA3E  00                 	db	0
   485   00FA3F  00                 	db	0
   486   00FA40  00                 	db	0
   487   00FA41  00                 	db	0
   488   00FA42  00                 	db	0
   489   00FA43  00                 	db	0
   490   00FA44  00                 	db	0
   491   00FA45  00                 	db	0
   492   00FA46  00                 	db	0
   493   00FA47  00                 	db	0
   494   00FA48  00                 	db	0
   495   00FA49  00                 	db	0
   496   00FA4A  00                 	db	0
   497   00FA4B  00                 	db	0
   498   00FA4C  00                 	db	0
   499   00FA4D  00                 	db	0
   500   00FA4E  20                 	db	32
   501   00FA4F  32                 	db	50
   502   00FA50  2E                 	db	46
   503   00FA51  54                 	db	84
   504   00FA52  58                 	db	88
   505   00FA53  20                 	db	32
   506   00FA54  4D                 	db	77
   507   00FA55  4F                 	db	79
   508   00FA56  44                 	db	68
   509   00FA57  45                 	db	69
   510   00FA58  00                 	db	0
   511   00FA59  00                 	db	0
   512   00FA5A  00                 	db	0
   513   00FA5B  00                 	db	0
   514   00FA5C  00                 	db	0
   515   00FA5D  00                 	db	0
   516   00FA5E  00                 	db	0
   517   00FA5F  00                 	db	0
   518   00FA60  00                 	db	0
   519   00FA61  00                 	db	0
   520   00FA62  00                 	db	0
   521   00FA63  00                 	db	0
   522   00FA64  00                 	db	0
   523   00FA65  00                 	db	0
   524   00FA66  00                 	db	0
   525   00FA67  00                 	db	0
   526   00FA68  00                 	db	0
   527   00FA69  00                 	db	0
   528   00FA6A  00                 	db	0
   529   00FA6B  00                 	db	0
   530   00FA6C  20                 	db	32
   531   00FA6D  33                 	db	51
   532   00FA6E  2E                 	db	46
   533   00FA6F  4F                 	db	79
   534   00FA70  56                 	db	86
   535   00FA71  45                 	db	69
   536   00FA72  52                 	db	82
   537   00FA73  20                 	db	32
   538   00FA74  52                 	db	82
   539   00FA75  55                 	db	85
   540   00FA76  4E                 	db	78
   541   00FA77  20                 	db	32
   542   00FA78  45                 	db	69
   543   00FA79  52                 	db	82
   544   00FA7A  52                 	db	82
   545   00FA7B  4F                 	db	79
   546   00FA7C  52                 	db	82
   547   00FA7D  20                 	db	32
   548   00FA7E  43                 	db	67
   549   00FA7F  4C                 	db	76
   550   00FA80  52                 	db	82
   551   00FA81  00                 	db	0
   552   00FA82  00                 	db	0
   553   00FA83  00                 	db	0
   554   00FA84  00                 	db	0
   555   00FA85  00                 	db	0
   556   00FA86  00                 	db	0
   557   00FA87  00                 	db	0
   558   00FA88  00                 	db	0
   559   00FA89  00                 	db	0
   560   00FA8A  20                 	db	32
   561   00FA8B  72                 	db	114
   562   00FA8C  2E                 	db	46
   563   00FA8D  45                 	db	69
   564   00FA8E  58                 	db	88
   565   00FA8F  49                 	db	73
   566   00FA90  54                 	db	84
   567   00FA91  00                 	db	0
   568   00FA92  00                 	db	0
   569   00FA93  00                 	db	0
   570   00FA94  00                 	db	0
   571   00FA95  00                 	db	0
   572   00FA96  00                 	db	0
   573   00FA97  00                 	db	0
   574   00FA98  00                 	db	0
   575   00FA99  00                 	db	0
   576   00FA9A  00                 	db	0
   577   00FA9B  00                 	db	0
   578   00FA9C  00                 	db	0
   579   00FA9D  00                 	db	0
   580   00FA9E  00                 	db	0
   581   00FA9F  00                 	db	0
   582   00FAA0  00                 	db	0
   583   00FAA1  00                 	db	0
   584   00FAA2  00                 	db	0
   585   00FAA3  00                 	db	0
   586   00FAA4  00                 	db	0
   587   00FAA5  00                 	db	0
   588   00FAA6  00                 	db	0
   589   00FAA7  00                 	db	0
   590   00FAA8                     __end_of_Deb_menue01:
   591                           	callstack 0
   592   00FAA8                     _com_list:
   593                           	callstack 0
   594   00FAA8  00                 	db	0
   595   00FAA9  72                 	db	114
   596   00FAAA  74                 	db	116
   597   00FAAB  63                 	db	99
   598   00FAAC  00                 	db	0
   599   00FAAD  00                 	db	0
   600   00FAAE  00                 	db	0
   601   00FAAF  00                 	db	0
   602   00FAB0  00                 	db	0
   603   00FAB1  00                 	db	0
   604   00FAB2  00                 	db	0
   605   00FAB3  01                 	db	1
   606   00FAB4  72                 	db	114
   607   00FAB5  65                 	db	101
   608   00FAB6  67                 	db	103
   609   00FAB7  00                 	db	0
   610   00FAB8  00                 	db	0
   611   00FAB9  00                 	db	0
   612   00FABA  00                 	db	0
   613   00FABB  00                 	db	0
   614   00FABC  00                 	db	0
   615   00FABD  00                 	db	0
   616   00FABE  02                 	db	2
   617   00FABF  69                 	db	105
   618   00FAC0  32                 	db	50
   619   00FAC1  63                 	db	99
   620   00FAC2  00                 	db	0
   621   00FAC3  00                 	db	0
   622   00FAC4  00                 	db	0
   623   00FAC5  00                 	db	0
   624   00FAC6  00                 	db	0
   625   00FAC7  00                 	db	0
   626   00FAC8  00                 	db	0
   627   00FAC9  03                 	db	3
   628   00FACA  76                 	db	118
   629   00FACB  6C                 	db	108
   630   00FACC  35                 	db	53
   631   00FACD  33                 	db	51
   632   00FACE  00                 	db	0
   633   00FACF  00                 	db	0
   634   00FAD0  00                 	db	0
   635   00FAD1  00                 	db	0
   636   00FAD2  00                 	db	0
   637   00FAD3  00                 	db	0
   638   00FAD4  04                 	db	4
   639   00FAD5  70                 	db	112
   640   00FAD6  62                 	db	98
   641   00FAD7  32                 	db	50
   642   00FAD8  00                 	db	0
   643   00FAD9  00                 	db	0
   644   00FADA  00                 	db	0
   645   00FADB  00                 	db	0
   646   00FADC  00                 	db	0
   647   00FADD  00                 	db	0
   648   00FADE  00                 	db	0
   649   00FADF  05                 	db	5
   650   00FAE0  6C                 	db	108
   651   00FAE1  6F                 	db	111
   652   00FAE2  67                 	db	103
   653   00FAE3  00                 	db	0
   654   00FAE4  00                 	db	0
   655   00FAE5  00                 	db	0
   656   00FAE6  00                 	db	0
   657   00FAE7  00                 	db	0
   658   00FAE8  00                 	db	0
   659   00FAE9  00                 	db	0
   660   00FAEA  06                 	db	6
   661   00FAEB  6C                 	db	108
   662   00FAEC  6F                 	db	111
   663   00FAED  67                 	db	103
   664   00FAEE  6F                 	db	111
   665   00FAEF  66                 	db	102
   666   00FAF0  66                 	db	102
   667   00FAF1  00                 	db	0
   668   00FAF2  00                 	db	0
   669   00FAF3  00                 	db	0
   670   00FAF4  00                 	db	0
   671   00FAF5  07                 	db	7
   672   00FAF6  6C                 	db	108
   673   00FAF7  6F                 	db	111
   674   00FAF8  67                 	db	103
   675   00FAF9  6F                 	db	111
   676   00FAFA  6E                 	db	110
   677   00FAFB  00                 	db	0
   678   00FAFC  00                 	db	0
   679   00FAFD  00                 	db	0
   680   00FAFE  00                 	db	0
   681   00FAFF  00                 	db	0
   682   00FB00  08                 	db	8
   683   00FB01  6C                 	db	108
   684   00FB02  6F                 	db	111
   685   00FB03  67                 	db	103
   686   00FB04  63                 	db	99
   687   00FB05  6C                 	db	108
   688   00FB06  72                 	db	114
   689   00FB07  00                 	db	0
   690   00FB08  00                 	db	0
   691   00FB09  00                 	db	0
   692   00FB0A  00                 	db	0
   693   00FB0B  09                 	db	9
   694   00FB0C  72                 	db	114
   695   00FB0D  73                 	db	115
   696   00FB0E  34                 	db	52
   697   00FB0F  38                 	db	56
   698   00FB10  35                 	db	53
   699   00FB11  00                 	db	0
   700   00FB12  00                 	db	0
   701   00FB13  00                 	db	0
   702   00FB14  00                 	db	0
   703   00FB15  00                 	db	0
   704   00FB16  0A                 	db	10
   705   00FB17  6E                 	db	110
   706   00FB18  6F                 	db	111
   707   00FB19  6E                 	db	110
   708   00FB1A  65                 	db	101
   709   00FB1B  00                 	db	0
   710   00FB1C  00                 	db	0
   711   00FB1D  00                 	db	0
   712   00FB1E  00                 	db	0
   713   00FB1F  00                 	db	0
   714   00FB20  00                 	db	0
   715   00FB21                     __end_of_com_list:
   716                           	callstack 0
   717   00FB21                     _Deb_menue02:
   718                           	callstack 0
   719   00FB21  0D                 	db	13
   720   00FB22  0A                 	db	10
   721   00FB23  52                 	db	82
   722   00FB24  53                 	db	83
   723   00FB25  34                 	db	52
   724   00FB26  38                 	db	56
   725   00FB27  35                 	db	53
   726   00FB28  20                 	db	32
   727   00FB29  54                 	db	84
   728   00FB2A  58                 	db	88
   729   00FB2B  20                 	db	32
   730   00FB2C  3D                 	db	61
   731   00FB2D  20                 	db	32
   732   00FB2E  00                 	db	0
   733   00FB2F  00                 	db	0
   734   00FB30  00                 	db	0
   735   00FB31  00                 	db	0
   736   00FB32  00                 	db	0
   737   00FB33  00                 	db	0
   738   00FB34  00                 	db	0
   739   00FB35  00                 	db	0
   740   00FB36  00                 	db	0
   741   00FB37  00                 	db	0
   742   00FB38  00                 	db	0
   743   00FB39  00                 	db	0
   744   00FB3A  00                 	db	0
   745   00FB3B  00                 	db	0
   746   00FB3C  00                 	db	0
   747   00FB3D  00                 	db	0
   748   00FB3E  00                 	db	0
   749   00FB3F                     __end_of_Deb_menue02:
   750                           	callstack 0
   751   000000                     _RCREG2	set	4010
   752   000000                     _TXREG2	set	4009
   753   000000                     _SPBRG2	set	4011
   754   000000                     _SPBRGH2	set	3965
   755   000000                     _RCSTA2	set	3996
   756   000000                     _IPR4	set	3984
   757   000000                     _IPR2	set	4002
   758   000000                     _IPR1	set	3999
   759   000000                     _PIE5	set	3985
   760   000000                     _PIE3	set	4003
   761   000000                     _PIE2	set	4000
   762   000000                     _PIE1	set	3997
   763   000000                     _PIR3	set	4004
   764   000000                     _PIR2	set	4001
   765   000000                     _PIR1	set	3998
   766   000000                     _BAUDCON2bits	set	3964
   767   000000                     _RCSTA2bits	set	3996
   768   000000                     _PIR3bits	set	4004
   769   000000                     _TXSTA2bits	set	4008
   770   000000                     _TRISDbits	set	3989
   771   000000                     _TRISBbits	set	3987
   772   000000                     _TRISAbits	set	3986
   773   000000                     _RCSTA1	set	4012
   774   000000                     _RBPU	set	32655
   775   000000                     _PLLEN	set	31966
   776   000000                     _PPSCONbits	set	3775
   777   000000                     _SSP2CON2	set	3953
   778   000000                     _SSP2CON1	set	3954
   779   000000                     _SSP2STAT	set	3955
   780   000000                     _LATBbits	set	3978
   781   000000                     _RCSTA1bits	set	4012
   782   000000                     _FSEN	set	31178
   783   000000                     _SPBRG1	set	4016
   784   000000                     _TXSTA1	set	4013
   785   000000                     _SSP1CON2	set	4037
   786   000000                     _SSP1CON1	set	4038
   787   000000                     _SSP1STAT	set	4039
   788   000000                     _PIE4	set	3982
   789   000000                     _PIR4	set	3983
   790   000000                     _TRISA	set	3986
   791   000000                     _RCON	set	4048
   792   000000                     _OSCCON	set	4051
   793   000000                     _SSP1ADD	set	4040
   794   000000                     _BAUDCON2	set	3964
   795   000000                     _BAUDCON1	set	3966
   796   000000                     _OSCCON2	set	3975
   797   000000                     _SSP2ADD	set	3956
   798   000000                     _PIR5	set	3992
   799   000000                     _OSCTUNE	set	3995
   800   000000                     _TRISE	set	3990
   801   000000                     _TRISD	set	3989
   802   000000                     _TRISC	set	3988
   803   000000                     _TRISB	set	3987
   804   000000                     _INTCON3	set	4080
   805   000000                     _INTCON2	set	4081
   806   000000                     _INTCON	set	4082
   807   000000                     _LATAbits	set	3977
   808   000000                     _EECON2	set	4007
   809   000000                     _TXSTA2	set	4008
   810   000000                     _IPR3	set	4005
   811   000000                     _IPR5	set	3993
   812   000000                     _PORTD	set	3971
   813   000000                     _PORTC	set	3970
   814   000000                     _PORTB	set	3969
   815   000000                     _PORTA	set	3968
   816   000000                     _SPBRGH1	set	3967
   817   000000                     _ANCON0	set	3912
   818   000000                     _ANCON1	set	3913
   819   000000                     _RPOR23	set	3799
   820   000000                     _RPINR16	set	3831
   821   00FB3F  20                 	db	32
   822   00FB40  50                 	db	80	;'P'
   823   00FB41  49                 	db	73	;'I'
   824   00FB42  45                 	db	69	;'E'
   825   00FB43  20                 	db	32
   826   00FB44  20                 	db	32
   827   00FB45  20                 	db	32
   828   00FB46  20                 	db	32
   829   00FB47  20                 	db	32
   830   00FB48  3D                 	db	61	;'='
   831   00FB49  20                 	db	32
   832   00FB4A  30                 	db	48	;'0'
   833   00FB4B  78                 	db	120	;'x'
   834   00FB4C  25                 	db	37
   835   00FB4D  30                 	db	48	;'0'
   836   00FB4E  32                 	db	50	;'2'
   837   00FB4F  78                 	db	120	;'x'
   838   00FB50  2C                 	db	44
   839   00FB51  20                 	db	32
   840   00FB52  30                 	db	48	;'0'
   841   00FB53  78                 	db	120	;'x'
   842   00FB54  25                 	db	37
   843   00FB55  30                 	db	48	;'0'
   844   00FB56  32                 	db	50	;'2'
   845   00FB57  78                 	db	120	;'x'
   846   00FB58  2C                 	db	44
   847   00FB59  20                 	db	32
   848   00FB5A  30                 	db	48	;'0'
   849   00FB5B  78                 	db	120	;'x'
   850   00FB5C  25                 	db	37
   851   00FB5D  30                 	db	48	;'0'
   852   00FB5E  32                 	db	50	;'2'
   853   00FB5F  78                 	db	120	;'x'
   854   00FB60  2C                 	db	44
   855   00FB61  20                 	db	32
   856   00FB62  30                 	db	48	;'0'
   857   00FB63  78                 	db	120	;'x'
   858   00FB64  25                 	db	37
   859   00FB65  30                 	db	48	;'0'
   860   00FB66  32                 	db	50	;'2'
   861   00FB67  78                 	db	120	;'x'
   862   00FB68  2C                 	db	44
   863   00FB69  20                 	db	32
   864   00FB6A  30                 	db	48	;'0'
   865   00FB6B  78                 	db	120	;'x'
   866   00FB6C  25                 	db	37
   867   00FB6D  30                 	db	48	;'0'
   868   00FB6E  32                 	db	50	;'2'
   869   00FB6F  78                 	db	120	;'x'
   870   00FB70  0D                 	db	13
   871   00FB71  0A                 	db	10
   872   00FB72  00                 	db	0
   873   00FB73  20                 	db	32
   874   00FB74  50                 	db	80	;'P'
   875   00FB75  49                 	db	73	;'I'
   876   00FB76  52                 	db	82	;'R'
   877   00FB77  20                 	db	32
   878   00FB78  20                 	db	32
   879   00FB79  20                 	db	32
   880   00FB7A  20                 	db	32
   881   00FB7B  20                 	db	32
   882   00FB7C  3D                 	db	61	;'='
   883   00FB7D  20                 	db	32
   884   00FB7E  30                 	db	48	;'0'
   885   00FB7F  78                 	db	120	;'x'
   886   00FB80  25                 	db	37
   887   00FB81  30                 	db	48	;'0'
   888   00FB82  32                 	db	50	;'2'
   889   00FB83  78                 	db	120	;'x'
   890   00FB84  2C                 	db	44
   891   00FB85  20                 	db	32
   892   00FB86  30                 	db	48	;'0'
   893   00FB87  78                 	db	120	;'x'
   894   00FB88  25                 	db	37
   895   00FB89  30                 	db	48	;'0'
   896   00FB8A  32                 	db	50	;'2'
   897   00FB8B  78                 	db	120	;'x'
   898   00FB8C  2C                 	db	44
   899   00FB8D  20                 	db	32
   900   00FB8E  30                 	db	48	;'0'
   901   00FB8F  78                 	db	120	;'x'
   902   00FB90  25                 	db	37
   903   00FB91  30                 	db	48	;'0'
   904   00FB92  32                 	db	50	;'2'
   905   00FB93  78                 	db	120	;'x'
   906   00FB94  2C                 	db	44
   907   00FB95  20                 	db	32
   908   00FB96  30                 	db	48	;'0'
   909   00FB97  78                 	db	120	;'x'
   910   00FB98  25                 	db	37
   911   00FB99  30                 	db	48	;'0'
   912   00FB9A  32                 	db	50	;'2'
   913   00FB9B  78                 	db	120	;'x'
   914   00FB9C  2C                 	db	44
   915   00FB9D  20                 	db	32
   916   00FB9E  30                 	db	48	;'0'
   917   00FB9F  78                 	db	120	;'x'
   918   00FBA0  25                 	db	37
   919   00FBA1  30                 	db	48	;'0'
   920   00FBA2  32                 	db	50	;'2'
   921   00FBA3  78                 	db	120	;'x'
   922   00FBA4  0D                 	db	13
   923   00FBA5  0A                 	db	10
   924   00FBA6  00                 	db	0
   925   00FBA7  20                 	db	32
   926   00FBA8  49                 	db	73	;'I'
   927   00FBA9  50                 	db	80	;'P'
   928   00FBAA  52                 	db	82	;'R'
   929   00FBAB  20                 	db	32
   930   00FBAC  20                 	db	32
   931   00FBAD  20                 	db	32
   932   00FBAE  20                 	db	32
   933   00FBAF  20                 	db	32
   934   00FBB0  3D                 	db	61	;'='
   935   00FBB1  20                 	db	32
   936   00FBB2  30                 	db	48	;'0'
   937   00FBB3  78                 	db	120	;'x'
   938   00FBB4  25                 	db	37
   939   00FBB5  30                 	db	48	;'0'
   940   00FBB6  32                 	db	50	;'2'
   941   00FBB7  78                 	db	120	;'x'
   942   00FBB8  2C                 	db	44
   943   00FBB9  20                 	db	32
   944   00FBBA  30                 	db	48	;'0'
   945   00FBBB  78                 	db	120	;'x'
   946   00FBBC  25                 	db	37
   947   00FBBD  30                 	db	48	;'0'
   948   00FBBE  32                 	db	50	;'2'
   949   00FBBF  78                 	db	120	;'x'
   950   00FBC0  2C                 	db	44
   951   00FBC1  20                 	db	32
   952   00FBC2  30                 	db	48	;'0'
   953   00FBC3  78                 	db	120	;'x'
   954   00FBC4  25                 	db	37
   955   00FBC5  30                 	db	48	;'0'
   956   00FBC6  32                 	db	50	;'2'
   957   00FBC7  78                 	db	120	;'x'
   958   00FBC8  2C                 	db	44
   959   00FBC9  20                 	db	32
   960   00FBCA  30                 	db	48	;'0'
   961   00FBCB  78                 	db	120	;'x'
   962   00FBCC  25                 	db	37
   963   00FBCD  30                 	db	48	;'0'
   964   00FBCE  32                 	db	50	;'2'
   965   00FBCF  78                 	db	120	;'x'
   966   00FBD0  2C                 	db	44
   967   00FBD1  20                 	db	32
   968   00FBD2  30                 	db	48	;'0'
   969   00FBD3  78                 	db	120	;'x'
   970   00FBD4  25                 	db	37
   971   00FBD5  30                 	db	48	;'0'
   972   00FBD6  32                 	db	50	;'2'
   973   00FBD7  78                 	db	120	;'x'
   974   00FBD8  0D                 	db	13
   975   00FBD9  0A                 	db	10
   976   00FBDA  00                 	db	0
   977   00FBDB  53                 	db	83	;'S'
   978   00FBDC  3D                 	db	61	;'='
   979   00FBDD  25                 	db	37
   980   00FBDE  30                 	db	48	;'0'
   981   00FBDF  32                 	db	50	;'2'
   982   00FBE0  78                 	db	120	;'x'
   983   00FBE1  2C                 	db	44
   984   00FBE2  43                 	db	67	;'C'
   985   00FBE3  31                 	db	49	;'1'
   986   00FBE4  3D                 	db	61	;'='
   987   00FBE5  25                 	db	37
   988   00FBE6  30                 	db	48	;'0'
   989   00FBE7  32                 	db	50	;'2'
   990   00FBE8  78                 	db	120	;'x'
   991   00FBE9  2C                 	db	44
   992   00FBEA  43                 	db	67	;'C'
   993   00FBEB  32                 	db	50	;'2'
   994   00FBEC  3D                 	db	61	;'='
   995   00FBED  25                 	db	37
   996   00FBEE  30                 	db	48	;'0'
   997   00FBEF  32                 	db	50	;'2'
   998   00FBF0  78                 	db	120	;'x'
   999   00FBF1  2C                 	db	44
  1000   00FBF2  42                 	db	66	;'B'
  1001   00FBF3  46                 	db	70	;'F'
  1002   00FBF4  3D                 	db	61	;'='
  1003   00FBF5  25                 	db	37
  1004   00FBF6  30                 	db	48	;'0'
  1005   00FBF7  32                 	db	50	;'2'
  1006   00FBF8  78                 	db	120	;'x'
  1007   00FBF9  20                 	db	32
  1008   00FBFA  00                 	db	0
  1009   00FBFB  2A                 	db	42
  1010   00FBFC  2A                 	db	42
  1011   00FBFD  2A                 	db	42
  1012   00FBFE  20                 	db	32
  1013   00FBFF  4F                 	db	79	;'O'
  1014   00FC00  53                 	db	83	;'S'
  1015   00FC01  43                 	db	67	;'C'
  1016   00FC02  49                 	db	73	;'I'
  1017   00FC03  4C                 	db	76	;'L'
  1018   00FC04  4C                 	db	76	;'L'
  1019   00FC05  41                 	db	65	;'A'
  1020   00FC06  54                 	db	84	;'T'
  1021   00FC07  4F                 	db	79	;'O'
  1022   00FC08  52                 	db	82	;'R'
  1023   00FC09  20                 	db	32
  1024   00FC0A  2A                 	db	42
  1025   00FC0B  2A                 	db	42
  1026   00FC0C  2A                 	db	42
  1027   00FC0D  2A                 	db	42
  1028   00FC0E  2A                 	db	42
  1029   00FC0F  2A                 	db	42
  1030   00FC10  2A                 	db	42
  1031   00FC11  2A                 	db	42
  1032   00FC12  2A                 	db	42
  1033   00FC13  2A                 	db	42
  1034   00FC14  2A                 	db	42
  1035   00FC15  2A                 	db	42
  1036   00FC16  0D                 	db	13
  1037   00FC17  0A                 	db	10
  1038   00FC18  00                 	db	0
  1039   00FC19  2A                 	db	42
  1040   00FC1A  2A                 	db	42
  1041   00FC1B  2A                 	db	42
  1042   00FC1C  20                 	db	32
  1043   00FC1D  49                 	db	73	;'I'
  1044   00FC1E  4E                 	db	78	;'N'
  1045   00FC1F  54                 	db	84	;'T'
  1046   00FC20  45                 	db	69	;'E'
  1047   00FC21  52                 	db	82	;'R'
  1048   00FC22  52                 	db	82	;'R'
  1049   00FC23  55                 	db	85	;'U'
  1050   00FC24  50                 	db	80	;'P'
  1051   00FC25  54                 	db	84	;'T'
  1052   00FC26  20                 	db	32
  1053   00FC27  2A                 	db	42
  1054   00FC28  2A                 	db	42
  1055   00FC29  2A                 	db	42
  1056   00FC2A  2A                 	db	42
  1057   00FC2B  2A                 	db	42
  1058   00FC2C  2A                 	db	42
  1059   00FC2D  2A                 	db	42
  1060   00FC2E  2A                 	db	42
  1061   00FC2F  2A                 	db	42
  1062   00FC30  2A                 	db	42
  1063   00FC31  2A                 	db	42
  1064   00FC32  2A                 	db	42
  1065   00FC33  0D                 	db	13
  1066   00FC34  0A                 	db	10
  1067   00FC35  00                 	db	0
  1068   00FC36  0A                 	db	10
  1069   00FC37  2A                 	db	42
  1070   00FC38  2A                 	db	42
  1071   00FC39  2A                 	db	42
  1072   00FC3A  20                 	db	32
  1073   00FC3B  55                 	db	85	;'U'
  1074   00FC3C  41                 	db	65	;'A'
  1075   00FC3D  52                 	db	82	;'R'
  1076   00FC3E  54                 	db	84	;'T'
  1077   00FC3F  31                 	db	49	;'1'
  1078   00FC40  20                 	db	32
  1079   00FC41  2A                 	db	42
  1080   00FC42  2A                 	db	42
  1081   00FC43  2A                 	db	42
  1082   00FC44  2A                 	db	42
  1083   00FC45  2A                 	db	42
  1084   00FC46  2A                 	db	42
  1085   00FC47  2A                 	db	42
  1086   00FC48  2A                 	db	42
  1087   00FC49  2A                 	db	42
  1088   00FC4A  2A                 	db	42
  1089   00FC4B  2A                 	db	42
  1090   00FC4C  2A                 	db	42
  1091   00FC4D  0D                 	db	13
  1092   00FC4E  0A                 	db	10
  1093   00FC4F  00                 	db	0
  1094   00FC50  0A                 	db	10
  1095   00FC51  2A                 	db	42
  1096   00FC52  2A                 	db	42
  1097   00FC53  2A                 	db	42
  1098   00FC54  20                 	db	32
  1099   00FC55  55                 	db	85	;'U'
  1100   00FC56  41                 	db	65	;'A'
  1101   00FC57  52                 	db	82	;'R'
  1102   00FC58  54                 	db	84	;'T'
  1103   00FC59  32                 	db	50	;'2'
  1104   00FC5A  20                 	db	32
  1105   00FC5B  2A                 	db	42
  1106   00FC5C  2A                 	db	42
  1107   00FC5D  2A                 	db	42
  1108   00FC5E  2A                 	db	42
  1109   00FC5F  2A                 	db	42
  1110   00FC60  2A                 	db	42
  1111   00FC61  2A                 	db	42
  1112   00FC62  2A                 	db	42
  1113   00FC63  2A                 	db	42
  1114   00FC64  2A                 	db	42
  1115   00FC65  2A                 	db	42
  1116   00FC66  2A                 	db	42
  1117   00FC67  0D                 	db	13
  1118   00FC68  0A                 	db	10
  1119   00FC69  00                 	db	0
  1120   00FC6A  20                 	db	32
  1121   00FC6B  53                 	db	83	;'S'
  1122   00FC6C  50                 	db	80	;'P'
  1123   00FC6D  42                 	db	66	;'B'
  1124   00FC6E  52                 	db	82	;'R'
  1125   00FC6F  47                 	db	71	;'G'
  1126   00FC70  31                 	db	49	;'1'
  1127   00FC71  20                 	db	32
  1128   00FC72  20                 	db	32
  1129   00FC73  20                 	db	32
  1130   00FC74  20                 	db	32
  1131   00FC75  3D                 	db	61	;'='
  1132   00FC76  20                 	db	32
  1133   00FC77  30                 	db	48	;'0'
  1134   00FC78  78                 	db	120	;'x'
  1135   00FC79  25                 	db	37
  1136   00FC7A  30                 	db	48	;'0'
  1137   00FC7B  32                 	db	50	;'2'
  1138   00FC7C  78                 	db	120	;'x'
  1139   00FC7D  25                 	db	37
  1140   00FC7E  30                 	db	48	;'0'
  1141   00FC7F  32                 	db	50	;'2'
  1142   00FC80  78                 	db	120	;'x'
  1143   00FC81  0D                 	db	13
  1144   00FC82  0A                 	db	10
  1145   00FC83  00                 	db	0
  1146   00FC84  20                 	db	32
  1147   00FC85  53                 	db	83	;'S'
  1148   00FC86  50                 	db	80	;'P'
  1149   00FC87  42                 	db	66	;'B'
  1150   00FC88  52                 	db	82	;'R'
  1151   00FC89  47                 	db	71	;'G'
  1152   00FC8A  32                 	db	50	;'2'
  1153   00FC8B  20                 	db	32
  1154   00FC8C  20                 	db	32
  1155   00FC8D  20                 	db	32
  1156   00FC8E  20                 	db	32
  1157   00FC8F  3D                 	db	61	;'='
  1158   00FC90  20                 	db	32
  1159   00FC91  30                 	db	48	;'0'
  1160   00FC92  78                 	db	120	;'x'
  1161   00FC93  25                 	db	37
  1162   00FC94  30                 	db	48	;'0'
  1163   00FC95  32                 	db	50	;'2'
  1164   00FC96  78                 	db	120	;'x'
  1165   00FC97  25                 	db	37
  1166   00FC98  30                 	db	48	;'0'
  1167   00FC99  32                 	db	50	;'2'
  1168   00FC9A  78                 	db	120	;'x'
  1169   00FC9B  0D                 	db	13
  1170   00FC9C  0A                 	db	10
  1171   00FC9D  00                 	db	0
  1172   00FC9E  2A                 	db	42
  1173   00FC9F  2A                 	db	42
  1174   00FCA0  2A                 	db	42
  1175   00FCA1  20                 	db	32
  1176   00FCA2  50                 	db	80	;'P'
  1177   00FCA3  4F                 	db	79	;'O'
  1178   00FCA4  52                 	db	82	;'R'
  1179   00FCA5  54                 	db	84	;'T'
  1180   00FCA6  20                 	db	32
  1181   00FCA7  2A                 	db	42
  1182   00FCA8  2A                 	db	42
  1183   00FCA9  2A                 	db	42
  1184   00FCAA  2A                 	db	42
  1185   00FCAB  2A                 	db	42
  1186   00FCAC  2A                 	db	42
  1187   00FCAD  2A                 	db	42
  1188   00FCAE  2A                 	db	42
  1189   00FCAF  2A                 	db	42
  1190   00FCB0  2A                 	db	42
  1191   00FCB1  2A                 	db	42
  1192   00FCB2  2A                 	db	42
  1193   00FCB3  0D                 	db	13
  1194   00FCB4  0A                 	db	10
  1195   00FCB5  00                 	db	0
  1196   00FCB6  2A                 	db	42
  1197   00FCB7  2A                 	db	42
  1198   00FCB8  2A                 	db	42
  1199   00FCB9  20                 	db	32
  1200   00FCBA  49                 	db	73	;'I'
  1201   00FCBB  32                 	db	50	;'2'
  1202   00FCBC  43                 	db	67	;'C'
  1203   00FCBD  20                 	db	32
  1204   00FCBE  2A                 	db	42
  1205   00FCBF  2A                 	db	42
  1206   00FCC0  2A                 	db	42
  1207   00FCC1  2A                 	db	42
  1208   00FCC2  2A                 	db	42
  1209   00FCC3  2A                 	db	42
  1210   00FCC4  2A                 	db	42
  1211   00FCC5  2A                 	db	42
  1212   00FCC6  2A                 	db	42
  1213   00FCC7  2A                 	db	42
  1214   00FCC8  2A                 	db	42
  1215   00FCC9  2A                 	db	42
  1216   00FCCA  0D                 	db	13
  1217   00FCCB  0A                 	db	10
  1218   00FCCC  00                 	db	0
  1219   00FCCD  20                 	db	32
  1220   00FCCE  53                 	db	83	;'S'
  1221   00FCCF  53                 	db	83	;'S'
  1222   00FCD0  50                 	db	80	;'P'
  1223   00FCD1  31                 	db	49	;'1'
  1224   00FCD2  41                 	db	65	;'A'
  1225   00FCD3  44                 	db	68	;'D'
  1226   00FCD4  44                 	db	68	;'D'
  1227   00FCD5  20                 	db	32
  1228   00FCD6  20                 	db	32
  1229   00FCD7  3D                 	db	61	;'='
  1230   00FCD8  20                 	db	32
  1231   00FCD9  30                 	db	48	;'0'
  1232   00FCDA  78                 	db	120	;'x'
  1233   00FCDB  25                 	db	37
  1234   00FCDC  30                 	db	48	;'0'
  1235   00FCDD  32                 	db	50	;'2'
  1236   00FCDE  78                 	db	120	;'x'
  1237   00FCDF  0D                 	db	13
  1238   00FCE0  0A                 	db	10
  1239   00FCE1  0A                 	db	10
  1240   00FCE2  00                 	db	0
  1241   00FCE3  20                 	db	32
  1242   00FCE4  53                 	db	83	;'S'
  1243   00FCE5  53                 	db	83	;'S'
  1244   00FCE6  50                 	db	80	;'P'
  1245   00FCE7  32                 	db	50	;'2'
  1246   00FCE8  41                 	db	65	;'A'
  1247   00FCE9  44                 	db	68	;'D'
  1248   00FCEA  44                 	db	68	;'D'
  1249   00FCEB  20                 	db	32
  1250   00FCEC  20                 	db	32
  1251   00FCED  3D                 	db	61	;'='
  1252   00FCEE  20                 	db	32
  1253   00FCEF  30                 	db	48	;'0'
  1254   00FCF0  78                 	db	120	;'x'
  1255   00FCF1  25                 	db	37
  1256   00FCF2  30                 	db	48	;'0'
  1257   00FCF3  32                 	db	50	;'2'
  1258   00FCF4  78                 	db	120	;'x'
  1259   00FCF5  0D                 	db	13
  1260   00FCF6  0A                 	db	10
  1261   00FCF7  0A                 	db	10
  1262   00FCF8  00                 	db	0
  1263   00FCF9                     STR_21:
  1264   00FCF9  43                 	db	67	;'C'
  1265   00FCFA  6F                 	db	111	;'o'
  1266   00FCFB  6D                 	db	109	;'m'
  1267   00FCFC  6D                 	db	109	;'m'
  1268   00FCFD  61                 	db	97	;'a'
  1269   00FCFE  6E                 	db	110	;'n'
  1270   00FCFF  64                 	db	100	;'d'
  1271   00FD00  20                 	db	32
  1272   00FD01  6E                 	db	110	;'n'
  1273   00FD02  6F                 	db	111	;'o'
  1274   00FD03  74                 	db	116	;'t'
  1275   00FD04  20                 	db	32
  1276   00FD05  66                 	db	102	;'f'
  1277   00FD06  6F                 	db	111	;'o'
  1278   00FD07  75                 	db	117	;'u'
  1279   00FD08  6E                 	db	110	;'n'
  1280   00FD09  64                 	db	100	;'d'
  1281   00FD0A  2E                 	db	46
  1282   00FD0B  20                 	db	32
  1283   00FD0C  0D                 	db	13
  1284   00FD0D  0A                 	db	10
  1285   00FD0E  00                 	db	0
  1286   00FD0F  2A                 	db	42
  1287   00FD10  2A                 	db	42
  1288   00FD11  2A                 	db	42
  1289   00FD12  20                 	db	32
  1290   00FD13  55                 	db	85	;'U'
  1291   00FD14  53                 	db	83	;'S'
  1292   00FD15  41                 	db	65	;'A'
  1293   00FD16  52                 	db	82	;'R'
  1294   00FD17  54                 	db	84	;'T'
  1295   00FD18  20                 	db	32
  1296   00FD19  53                 	db	83	;'S'
  1297   00FD1A  65                 	db	101	;'e'
  1298   00FD1B  74                 	db	116	;'t'
  1299   00FD1C  75                 	db	117	;'u'
  1300   00FD1D  70                 	db	112	;'p'
  1301   00FD1E  20                 	db	32
  1302   00FD1F  2A                 	db	42
  1303   00FD20  2A                 	db	42
  1304   00FD21  2A                 	db	42
  1305   00FD22  0D                 	db	13
  1306   00FD23  0A                 	db	10
  1307   00FD24  00                 	db	0
  1308   00FD25  20                 	db	32
  1309   00FD26  52                 	db	82	;'R'
  1310   00FD27  43                 	db	67	;'C'
  1311   00FD28  53                 	db	83	;'S'
  1312   00FD29  54                 	db	84	;'T'
  1313   00FD2A  41                 	db	65	;'A'
  1314   00FD2B  31                 	db	49	;'1'
  1315   00FD2C  20                 	db	32
  1316   00FD2D  20                 	db	32
  1317   00FD2E  20                 	db	32
  1318   00FD2F  20                 	db	32
  1319   00FD30  3D                 	db	61	;'='
  1320   00FD31  20                 	db	32
  1321   00FD32  30                 	db	48	;'0'
  1322   00FD33  78                 	db	120	;'x'
  1323   00FD34  25                 	db	37
  1324   00FD35  30                 	db	48	;'0'
  1325   00FD36  32                 	db	50	;'2'
  1326   00FD37  78                 	db	120	;'x'
  1327   00FD38  0D                 	db	13
  1328   00FD39  0A                 	db	10
  1329   00FD3A  00                 	db	0
  1330   00FD3B  20                 	db	32
  1331   00FD3C  54                 	db	84	;'T'
  1332   00FD3D  58                 	db	88	;'X'
  1333   00FD3E  53                 	db	83	;'S'
  1334   00FD3F  54                 	db	84	;'T'
  1335   00FD40  41                 	db	65	;'A'
  1336   00FD41  31                 	db	49	;'1'
  1337   00FD42  20                 	db	32
  1338   00FD43  20                 	db	32
  1339   00FD44  20                 	db	32
  1340   00FD45  20                 	db	32
  1341   00FD46  3D                 	db	61	;'='
  1342   00FD47  20                 	db	32
  1343   00FD48  30                 	db	48	;'0'
  1344   00FD49  78                 	db	120	;'x'
  1345   00FD4A  25                 	db	37
  1346   00FD4B  30                 	db	48	;'0'
  1347   00FD4C  32                 	db	50	;'2'
  1348   00FD4D  78                 	db	120	;'x'
  1349   00FD4E  0D                 	db	13
  1350   00FD4F  0A                 	db	10
  1351   00FD50  00                 	db	0
  1352   00FD51  20                 	db	32
  1353   00FD52  54                 	db	84	;'T'
  1354   00FD53  58                 	db	88	;'X'
  1355   00FD54  53                 	db	83	;'S'
  1356   00FD55  54                 	db	84	;'T'
  1357   00FD56  41                 	db	65	;'A'
  1358   00FD57  32                 	db	50	;'2'
  1359   00FD58  20                 	db	32
  1360   00FD59  20                 	db	32
  1361   00FD5A  20                 	db	32
  1362   00FD5B  20                 	db	32
  1363   00FD5C  3D                 	db	61	;'='
  1364   00FD5D  20                 	db	32
  1365   00FD5E  30                 	db	48	;'0'
  1366   00FD5F  78                 	db	120	;'x'
  1367   00FD60  25                 	db	37
  1368   00FD61  30                 	db	48	;'0'
  1369   00FD62  32                 	db	50	;'2'
  1370   00FD63  78                 	db	120	;'x'
  1371   00FD64  0D                 	db	13
  1372   00FD65  0A                 	db	10
  1373   00FD66  00                 	db	0
  1374   00FD67  20                 	db	32
  1375   00FD68  52                 	db	82	;'R'
  1376   00FD69  43                 	db	67	;'C'
  1377   00FD6A  53                 	db	83	;'S'
  1378   00FD6B  54                 	db	84	;'T'
  1379   00FD6C  41                 	db	65	;'A'
  1380   00FD6D  33                 	db	51	;'3'
  1381   00FD6E  20                 	db	32
  1382   00FD6F  20                 	db	32
  1383   00FD70  20                 	db	32
  1384   00FD71  20                 	db	32
  1385   00FD72  3D                 	db	61	;'='
  1386   00FD73  20                 	db	32
  1387   00FD74  30                 	db	48	;'0'
  1388   00FD75  78                 	db	120	;'x'
  1389   00FD76  25                 	db	37
  1390   00FD77  30                 	db	48	;'0'
  1391   00FD78  32                 	db	50	;'2'
  1392   00FD79  78                 	db	120	;'x'
  1393   00FD7A  0D                 	db	13
  1394   00FD7B  0A                 	db	10
  1395   00FD7C  00                 	db	0
  1396   00FD7D  20                 	db	32
  1397   00FD7E  42                 	db	66	;'B'
  1398   00FD7F  41                 	db	65	;'A'
  1399   00FD80  55                 	db	85	;'U'
  1400   00FD81  44                 	db	68	;'D'
  1401   00FD82  43                 	db	67	;'C'
  1402   00FD83  4F                 	db	79	;'O'
  1403   00FD84  4E                 	db	78	;'N'
  1404   00FD85  31                 	db	49	;'1'
  1405   00FD86  20                 	db	32
  1406   00FD87  20                 	db	32
  1407   00FD88  3D                 	db	61	;'='
  1408   00FD89  20                 	db	32
  1409   00FD8A  30                 	db	48	;'0'
  1410   00FD8B  78                 	db	120	;'x'
  1411   00FD8C  25                 	db	37
  1412   00FD8D  30                 	db	48	;'0'
  1413   00FD8E  32                 	db	50	;'2'
  1414   00FD8F  78                 	db	120	;'x'
  1415   00FD90  0D                 	db	13
  1416   00FD91  0A                 	db	10
  1417   00FD92  00                 	db	0
  1418   00FD93  20                 	db	32
  1419   00FD94  42                 	db	66	;'B'
  1420   00FD95  41                 	db	65	;'A'
  1421   00FD96  55                 	db	85	;'U'
  1422   00FD97  44                 	db	68	;'D'
  1423   00FD98  43                 	db	67	;'C'
  1424   00FD99  4F                 	db	79	;'O'
  1425   00FD9A  4E                 	db	78	;'N'
  1426   00FD9B  32                 	db	50	;'2'
  1427   00FD9C  20                 	db	32
  1428   00FD9D  20                 	db	32
  1429   00FD9E  3D                 	db	61	;'='
  1430   00FD9F  20                 	db	32
  1431   00FDA0  30                 	db	48	;'0'
  1432   00FDA1  78                 	db	120	;'x'
  1433   00FDA2  25                 	db	37
  1434   00FDA3  30                 	db	48	;'0'
  1435   00FDA4  32                 	db	50	;'2'
  1436   00FDA5  78                 	db	120	;'x'
  1437   00FDA6  0D                 	db	13
  1438   00FDA7  0A                 	db	10
  1439   00FDA8  00                 	db	0
  1440   00FDA9  43                 	db	67	;'C'
  1441   00FDAA  3D                 	db	61	;'='
  1442   00FDAB  25                 	db	37
  1443   00FDAC  64                 	db	100	;'d'
  1444   00FDAD  2C                 	db	44
  1445   00FDAE  69                 	db	105	;'i'
  1446   00FDAF  6E                 	db	110	;'n'
  1447   00FDB0  64                 	db	100	;'d'
  1448   00FDB1  65                 	db	101	;'e'
  1449   00FDB2  78                 	db	120	;'x'
  1450   00FDB3  3D                 	db	61	;'='
  1451   00FDB4  25                 	db	37
  1452   00FDB5  64                 	db	100	;'d'
  1453   00FDB6  2C                 	db	44
  1454   00FDB7  66                 	db	102	;'f'
  1455   00FDB8  6C                 	db	108	;'l'
  1456   00FDB9  67                 	db	103	;'g'
  1457   00FDBA  3D                 	db	61	;'='
  1458   00FDBB  25                 	db	37
  1459   00FDBC  64                 	db	100	;'d'
  1460   00FDBD  20                 	db	32
  1461   00FDBE  00                 	db	0
  1462   00FDBF  20                 	db	32
  1463   00FDC0  4F                 	db	79	;'O'
  1464   00FDC1  53                 	db	83	;'S'
  1465   00FDC2  43                 	db	67	;'C'
  1466   00FDC3  54                 	db	84	;'T'
  1467   00FDC4  55                 	db	85	;'U'
  1468   00FDC5  4E                 	db	78	;'N'
  1469   00FDC6  45                 	db	69	;'E'
  1470   00FDC7  20                 	db	32
  1471   00FDC8  3D                 	db	61	;'='
  1472   00FDC9  20                 	db	32
  1473   00FDCA  30                 	db	48	;'0'
  1474   00FDCB  78                 	db	120	;'x'
  1475   00FDCC  25                 	db	37
  1476   00FDCD  30                 	db	48	;'0'
  1477   00FDCE  32                 	db	50	;'2'
  1478   00FDCF  78                 	db	120	;'x'
  1479   00FDD0  0D                 	db	13
  1480   00FDD1  0A                 	db	10
  1481   00FDD2  0A                 	db	10
  1482   00FDD3  00                 	db	0
  1483   00FDD4  20                 	db	32
  1484   00FDD5  53                 	db	83	;'S'
  1485   00FDD6  53                 	db	83	;'S'
  1486   00FDD7  50                 	db	80	;'P'
  1487   00FDD8  31                 	db	49	;'1'
  1488   00FDD9  43                 	db	67	;'C'
  1489   00FDDA  4F                 	db	79	;'O'
  1490   00FDDB  4E                 	db	78	;'N'
  1491   00FDDC  31                 	db	49	;'1'
  1492   00FDDD  20                 	db	32
  1493   00FDDE  3D                 	db	61	;'='
  1494   00FDDF  20                 	db	32
  1495   00FDE0  30                 	db	48	;'0'
  1496   00FDE1  78                 	db	120	;'x'
  1497   00FDE2  25                 	db	37
  1498   00FDE3  30                 	db	48	;'0'
  1499   00FDE4  32                 	db	50	;'2'
  1500   00FDE5  78                 	db	120	;'x'
  1501   00FDE6  0D                 	db	13
  1502   00FDE7  0A                 	db	10
  1503   00FDE8  00                 	db	0
  1504   00FDE9  20                 	db	32
  1505   00FDEA  53                 	db	83	;'S'
  1506   00FDEB  53                 	db	83	;'S'
  1507   00FDEC  50                 	db	80	;'P'
  1508   00FDED  32                 	db	50	;'2'
  1509   00FDEE  43                 	db	67	;'C'
  1510   00FDEF  4F                 	db	79	;'O'
  1511   00FDF0  4E                 	db	78	;'N'
  1512   00FDF1  31                 	db	49	;'1'
  1513   00FDF2  20                 	db	32
  1514   00FDF3  3D                 	db	61	;'='
  1515   00FDF4  20                 	db	32
  1516   00FDF5  30                 	db	48	;'0'
  1517   00FDF6  78                 	db	120	;'x'
  1518   00FDF7  25                 	db	37
  1519   00FDF8  30                 	db	48	;'0'
  1520   00FDF9  32                 	db	50	;'2'
  1521   00FDFA  78                 	db	120	;'x'
  1522   00FDFB  0D                 	db	13
  1523   00FDFC  0A                 	db	10
  1524   00FDFD  00                 	db	0
  1525   00FDFE  20                 	db	32
  1526   00FDFF  53                 	db	83	;'S'
  1527   00FE00  53                 	db	83	;'S'
  1528   00FE01  50                 	db	80	;'P'
  1529   00FE02  31                 	db	49	;'1'
  1530   00FE03  43                 	db	67	;'C'
  1531   00FE04  4F                 	db	79	;'O'
  1532   00FE05  4E                 	db	78	;'N'
  1533   00FE06  32                 	db	50	;'2'
  1534   00FE07  20                 	db	32
  1535   00FE08  3D                 	db	61	;'='
  1536   00FE09  20                 	db	32
  1537   00FE0A  30                 	db	48	;'0'
  1538   00FE0B  78                 	db	120	;'x'
  1539   00FE0C  25                 	db	37
  1540   00FE0D  30                 	db	48	;'0'
  1541   00FE0E  32                 	db	50	;'2'
  1542   00FE0F  78                 	db	120	;'x'
  1543   00FE10  0D                 	db	13
  1544   00FE11  0A                 	db	10
  1545   00FE12  00                 	db	0
  1546   00FE13  20                 	db	32
  1547   00FE14  53                 	db	83	;'S'
  1548   00FE15  53                 	db	83	;'S'
  1549   00FE16  50                 	db	80	;'P'
  1550   00FE17  32                 	db	50	;'2'
  1551   00FE18  43                 	db	67	;'C'
  1552   00FE19  4F                 	db	79	;'O'
  1553   00FE1A  4E                 	db	78	;'N'
  1554   00FE1B  32                 	db	50	;'2'
  1555   00FE1C  20                 	db	32
  1556   00FE1D  3D                 	db	61	;'='
  1557   00FE1E  20                 	db	32
  1558   00FE1F  30                 	db	48	;'0'
  1559   00FE20  78                 	db	120	;'x'
  1560   00FE21  25                 	db	37
  1561   00FE22  30                 	db	48	;'0'
  1562   00FE23  32                 	db	50	;'2'
  1563   00FE24  78                 	db	120	;'x'
  1564   00FE25  0D                 	db	13
  1565   00FE26  0A                 	db	10
  1566   00FE27  00                 	db	0
  1567   00FE28  20                 	db	32
  1568   00FE29  53                 	db	83	;'S'
  1569   00FE2A  53                 	db	83	;'S'
  1570   00FE2B  50                 	db	80	;'P'
  1571   00FE2C  31                 	db	49	;'1'
  1572   00FE2D  53                 	db	83	;'S'
  1573   00FE2E  54                 	db	84	;'T'
  1574   00FE2F  41                 	db	65	;'A'
  1575   00FE30  54                 	db	84	;'T'
  1576   00FE31  20                 	db	32
  1577   00FE32  3D                 	db	61	;'='
  1578   00FE33  20                 	db	32
  1579   00FE34  30                 	db	48	;'0'
  1580   00FE35  78                 	db	120	;'x'
  1581   00FE36  25                 	db	37
  1582   00FE37  30                 	db	48	;'0'
  1583   00FE38  32                 	db	50	;'2'
  1584   00FE39  78                 	db	120	;'x'
  1585   00FE3A  0D                 	db	13
  1586   00FE3B  0A                 	db	10
  1587   00FE3C  00                 	db	0
  1588   00FE3D  20                 	db	32
  1589   00FE3E  53                 	db	83	;'S'
  1590   00FE3F  53                 	db	83	;'S'
  1591   00FE40  50                 	db	80	;'P'
  1592   00FE41  32                 	db	50	;'2'
  1593   00FE42  53                 	db	83	;'S'
  1594   00FE43  54                 	db	84	;'T'
  1595   00FE44  41                 	db	65	;'A'
  1596   00FE45  54                 	db	84	;'T'
  1597   00FE46  20                 	db	32
  1598   00FE47  3D                 	db	61	;'='
  1599   00FE48  20                 	db	32
  1600   00FE49  30                 	db	48	;'0'
  1601   00FE4A  78                 	db	120	;'x'
  1602   00FE4B  25                 	db	37
  1603   00FE4C  30                 	db	48	;'0'
  1604   00FE4D  32                 	db	50	;'2'
  1605   00FE4E  78                 	db	120	;'x'
  1606   00FE4F  0D                 	db	13
  1607   00FE50  0A                 	db	10
  1608   00FE51  00                 	db	0
  1609   00FE52  20                 	db	32
  1610   00FE53  54                 	db	84	;'T'
  1611   00FE54  52                 	db	82	;'R'
  1612   00FE55  49                 	db	73	;'I'
  1613   00FE56  53                 	db	83	;'S'
  1614   00FE57  45                 	db	69	;'E'
  1615   00FE58  20                 	db	32
  1616   00FE59  20                 	db	32
  1617   00FE5A  3D                 	db	61	;'='
  1618   00FE5B  20                 	db	32
  1619   00FE5C  30                 	db	48	;'0'
  1620   00FE5D  78                 	db	120	;'x'
  1621   00FE5E  25                 	db	37
  1622   00FE5F  30                 	db	48	;'0'
  1623   00FE60  32                 	db	50	;'2'
  1624   00FE61  78                 	db	120	;'x'
  1625   00FE62  0D                 	db	13
  1626   00FE63  0A                 	db	10
  1627   00FE64  0A                 	db	10
  1628   00FE65  00                 	db	0
  1629   00FE66  20                 	db	32
  1630   00FE67  52                 	db	82	;'R'
  1631   00FE68  43                 	db	67	;'C'
  1632   00FE69  4F                 	db	79	;'O'
  1633   00FE6A  4E                 	db	78	;'N'
  1634   00FE6B  20                 	db	32
  1635   00FE6C  20                 	db	32
  1636   00FE6D  20                 	db	32
  1637   00FE6E  20                 	db	32
  1638   00FE6F  3D                 	db	61	;'='
  1639   00FE70  20                 	db	32
  1640   00FE71  30                 	db	48	;'0'
  1641   00FE72  78                 	db	120	;'x'
  1642   00FE73  25                 	db	37
  1643   00FE74  30                 	db	48	;'0'
  1644   00FE75  32                 	db	50	;'2'
  1645   00FE76  78                 	db	120	;'x'
  1646   00FE77  0D                 	db	13
  1647   00FE78  0A                 	db	10
  1648   00FE79  00                 	db	0
  1649   00FE7A  20                 	db	32
  1650   00FE7B  4F                 	db	79	;'O'
  1651   00FE7C  53                 	db	83	;'S'
  1652   00FE7D  43                 	db	67	;'C'
  1653   00FE7E  43                 	db	67	;'C'
  1654   00FE7F  4F                 	db	79	;'O'
  1655   00FE80  4E                 	db	78	;'N'
  1656   00FE81  20                 	db	32
  1657   00FE82  20                 	db	32
  1658   00FE83  3D                 	db	61	;'='
  1659   00FE84  20                 	db	32
  1660   00FE85  30                 	db	48	;'0'
  1661   00FE86  78                 	db	120	;'x'
  1662   00FE87  25                 	db	37
  1663   00FE88  30                 	db	48	;'0'
  1664   00FE89  32                 	db	50	;'2'
  1665   00FE8A  78                 	db	120	;'x'
  1666   00FE8B  0D                 	db	13
  1667   00FE8C  0A                 	db	10
  1668   00FE8D  00                 	db	0
  1669   00FE8E  20                 	db	32
  1670   00FE8F  49                 	db	73	;'I'
  1671   00FE90  4E                 	db	78	;'N'
  1672   00FE91  54                 	db	84	;'T'
  1673   00FE92  43                 	db	67	;'C'
  1674   00FE93  4F                 	db	79	;'O'
  1675   00FE94  4E                 	db	78	;'N'
  1676   00FE95  20                 	db	32
  1677   00FE96  20                 	db	32
  1678   00FE97  3D                 	db	61	;'='
  1679   00FE98  20                 	db	32
  1680   00FE99  30                 	db	48	;'0'
  1681   00FE9A  78                 	db	120	;'x'
  1682   00FE9B  25                 	db	37
  1683   00FE9C  30                 	db	48	;'0'
  1684   00FE9D  32                 	db	50	;'2'
  1685   00FE9E  78                 	db	120	;'x'
  1686   00FE9F  0D                 	db	13
  1687   00FEA0  0A                 	db	10
  1688   00FEA1  00                 	db	0
  1689   00FEA2  20                 	db	32
  1690   00FEA3  4F                 	db	79	;'O'
  1691   00FEA4  53                 	db	83	;'S'
  1692   00FEA5  43                 	db	67	;'C'
  1693   00FEA6  43                 	db	67	;'C'
  1694   00FEA7  4F                 	db	79	;'O'
  1695   00FEA8  4E                 	db	78	;'N'
  1696   00FEA9  32                 	db	50	;'2'
  1697   00FEAA  20                 	db	32
  1698   00FEAB  3D                 	db	61	;'='
  1699   00FEAC  20                 	db	32
  1700   00FEAD  30                 	db	48	;'0'
  1701   00FEAE  78                 	db	120	;'x'
  1702   00FEAF  25                 	db	37
  1703   00FEB0  30                 	db	48	;'0'
  1704   00FEB1  32                 	db	50	;'2'
  1705   00FEB2  78                 	db	120	;'x'
  1706   00FEB3  0D                 	db	13
  1707   00FEB4  0A                 	db	10
  1708   00FEB5  00                 	db	0
  1709   00FEB6  20                 	db	32
  1710   00FEB7  49                 	db	73	;'I'
  1711   00FEB8  4E                 	db	78	;'N'
  1712   00FEB9  54                 	db	84	;'T'
  1713   00FEBA  43                 	db	67	;'C'
  1714   00FEBB  4F                 	db	79	;'O'
  1715   00FEBC  4E                 	db	78	;'N'
  1716   00FEBD  32                 	db	50	;'2'
  1717   00FEBE  20                 	db	32
  1718   00FEBF  3D                 	db	61	;'='
  1719   00FEC0  20                 	db	32
  1720   00FEC1  30                 	db	48	;'0'
  1721   00FEC2  78                 	db	120	;'x'
  1722   00FEC3  25                 	db	37
  1723   00FEC4  30                 	db	48	;'0'
  1724   00FEC5  32                 	db	50	;'2'
  1725   00FEC6  78                 	db	120	;'x'
  1726   00FEC7  0D                 	db	13
  1727   00FEC8  0A                 	db	10
  1728   00FEC9  00                 	db	0
  1729   00FECA  20                 	db	32
  1730   00FECB  49                 	db	73	;'I'
  1731   00FECC  4E                 	db	78	;'N'
  1732   00FECD  54                 	db	84	;'T'
  1733   00FECE  43                 	db	67	;'C'
  1734   00FECF  4F                 	db	79	;'O'
  1735   00FED0  4E                 	db	78	;'N'
  1736   00FED1  33                 	db	51	;'3'
  1737   00FED2  20                 	db	32
  1738   00FED3  3D                 	db	61	;'='
  1739   00FED4  20                 	db	32
  1740   00FED5  30                 	db	48	;'0'
  1741   00FED6  78                 	db	120	;'x'
  1742   00FED7  25                 	db	37
  1743   00FED8  30                 	db	48	;'0'
  1744   00FED9  32                 	db	50	;'2'
  1745   00FEDA  78                 	db	120	;'x'
  1746   00FEDB  0D                 	db	13
  1747   00FEDC  0A                 	db	10
  1748   00FEDD  00                 	db	0
  1749   00FEDE                     STR_64:
  1750   00FEDE  6C                 	db	108	;'l'
  1751   00FEDF  6F                 	db	111	;'o'
  1752   00FEE0  67                 	db	103	;'g'
  1753   00FEE1  69                 	db	105	;'i'
  1754   00FEE2  6E                 	db	110	;'n'
  1755   00FEE3  66                 	db	102	;'f'
  1756   00FEE4  6F                 	db	111	;'o'
  1757   00FEE5  5F                 	db	95	;'_'
  1758   00FEE6  62                 	db	98	;'b'
  1759   00FEE7  75                 	db	117	;'u'
  1760   00FEE8  66                 	db	102	;'f'
  1761   00FEE9  20                 	db	32
  1762   00FEEA  3D                 	db	61	;'='
  1763   00FEEB  20                 	db	32
  1764   00FEEC  25                 	db	37
  1765   00FEED  70                 	db	112	;'p'
  1766   00FEEE  0D                 	db	13
  1767   00FEEF  0A                 	db	10
  1768   00FEF0  00                 	db	0
  1769   00FEF1  20                 	db	32
  1770   00FEF2  54                 	db	84	;'T'
  1771   00FEF3  52                 	db	82	;'R'
  1772   00FEF4  49                 	db	73	;'I'
  1773   00FEF5  53                 	db	83	;'S'
  1774   00FEF6  41                 	db	65	;'A'
  1775   00FEF7  20                 	db	32
  1776   00FEF8  20                 	db	32
  1777   00FEF9  3D                 	db	61	;'='
  1778   00FEFA  20                 	db	32
  1779   00FEFB  30                 	db	48	;'0'
  1780   00FEFC  78                 	db	120	;'x'
  1781   00FEFD  25                 	db	37
  1782   00FEFE  30                 	db	48	;'0'
  1783   00FEFF  32                 	db	50	;'2'
  1784   00FF00  78                 	db	120	;'x'
  1785   00FF01  0D                 	db	13
  1786   00FF02  0A                 	db	10
  1787   00FF03  00                 	db	0
  1788   00FF04  20                 	db	32
  1789   00FF05  54                 	db	84	;'T'
  1790   00FF06  52                 	db	82	;'R'
  1791   00FF07  49                 	db	73	;'I'
  1792   00FF08  53                 	db	83	;'S'
  1793   00FF09  42                 	db	66	;'B'
  1794   00FF0A  20                 	db	32
  1795   00FF0B  20                 	db	32
  1796   00FF0C  3D                 	db	61	;'='
  1797   00FF0D  20                 	db	32
  1798   00FF0E  30                 	db	48	;'0'
  1799   00FF0F  78                 	db	120	;'x'
  1800   00FF10  25                 	db	37
  1801   00FF11  30                 	db	48	;'0'
  1802   00FF12  32                 	db	50	;'2'
  1803   00FF13  78                 	db	120	;'x'
  1804   00FF14  0D                 	db	13
  1805   00FF15  0A                 	db	10
  1806   00FF16  00                 	db	0
  1807   00FF17  20                 	db	32
  1808   00FF18  54                 	db	84	;'T'
  1809   00FF19  52                 	db	82	;'R'
  1810   00FF1A  49                 	db	73	;'I'
  1811   00FF1B  53                 	db	83	;'S'
  1812   00FF1C  43                 	db	67	;'C'
  1813   00FF1D  20                 	db	32
  1814   00FF1E  20                 	db	32
  1815   00FF1F  3D                 	db	61	;'='
  1816   00FF20  20                 	db	32
  1817   00FF21  30                 	db	48	;'0'
  1818   00FF22  78                 	db	120	;'x'
  1819   00FF23  25                 	db	37
  1820   00FF24  30                 	db	48	;'0'
  1821   00FF25  32                 	db	50	;'2'
  1822   00FF26  78                 	db	120	;'x'
  1823   00FF27  0D                 	db	13
  1824   00FF28  0A                 	db	10
  1825   00FF29  00                 	db	0
  1826   00FF2A  20                 	db	32
  1827   00FF2B  54                 	db	84	;'T'
  1828   00FF2C  52                 	db	82	;'R'
  1829   00FF2D  49                 	db	73	;'I'
  1830   00FF2E  53                 	db	83	;'S'
  1831   00FF2F  44                 	db	68	;'D'
  1832   00FF30  20                 	db	32
  1833   00FF31  20                 	db	32
  1834   00FF32  3D                 	db	61	;'='
  1835   00FF33  20                 	db	32
  1836   00FF34  30                 	db	48	;'0'
  1837   00FF35  78                 	db	120	;'x'
  1838   00FF36  25                 	db	37
  1839   00FF37  30                 	db	48	;'0'
  1840   00FF38  32                 	db	50	;'2'
  1841   00FF39  78                 	db	120	;'x'
  1842   00FF3A  0D                 	db	13
  1843   00FF3B  0A                 	db	10
  1844   00FF3C  00                 	db	0
  1845   00FF3D                     STR_66:
  1846   00FF3D  75                 	db	117	;'u'
  1847   00FF3E  69                 	db	105	;'i'
  1848   00FF3F  6E                 	db	110	;'n'
  1849   00FF40  74                 	db	116	;'t'
  1850   00FF41  76                 	db	118	;'v'
  1851   00FF42  61                 	db	97	;'a'
  1852   00FF43  6C                 	db	108	;'l'
  1853   00FF44  75                 	db	117	;'u'
  1854   00FF45  65                 	db	101	;'e'
  1855   00FF46  3D                 	db	61	;'='
  1856   00FF47  25                 	db	37
  1857   00FF48  6C                 	db	108	;'l'
  1858   00FF49  78                 	db	120	;'x'
  1859   00FF4A  0D                 	db	13
  1860   00FF4B  0A                 	db	10
  1861   00FF4C  00                 	db	0
  1862   00FF4D  57                 	db	87	;'W'
  1863   00FF4E  50                 	db	80	;'P'
  1864   00FF4F  54                 	db	84	;'T'
  1865   00FF50  3D                 	db	61	;'='
  1866   00FF51  25                 	db	37
  1867   00FF52  64                 	db	100	;'d'
  1868   00FF53  2C                 	db	44
  1869   00FF54  52                 	db	82	;'R'
  1870   00FF55  50                 	db	80	;'P'
  1871   00FF56  54                 	db	84	;'T'
  1872   00FF57  3D                 	db	61	;'='
  1873   00FF58  25                 	db	37
  1874   00FF59  64                 	db	100	;'d'
  1875   00FF5A  0D                 	db	13
  1876   00FF5B  0A                 	db	10
  1877   00FF5C  00                 	db	0
  1878   00FF5D                     STR_60:
  1879   00FF5D  61                 	db	97	;'a'
  1880   00FF5E  62                 	db	98	;'b'
  1881   00FF5F  63                 	db	99	;'c'
  1882   00FF60  64                 	db	100	;'d'
  1883   00FF61  65                 	db	101	;'e'
  1884   00FF62  66                 	db	102	;'f'
  1885   00FF63  67                 	db	103	;'g'
  1886   00FF64  2E                 	db	46
  1887   00FF65  2E                 	db	46
  1888   00FF66  2E                 	db	46
  1889   00FF67  2E                 	db	46
  1890   00FF68  2E                 	db	46
  1891   00FF69  0D                 	db	13
  1892   00FF6A  0A                 	db	10
  1893   00FF6B  00                 	db	0
  1894   00FF6C                     STR_61:
  1895   00FF6C  44                 	db	68	;'D'
  1896   00FF6D  61                 	db	97	;'a'
  1897   00FF6E  74                 	db	116	;'t'
  1898   00FF6F  61                 	db	97	;'a'
  1899   00FF70  20                 	db	32
  1900   00FF71  69                 	db	105	;'i'
  1901   00FF72  6E                 	db	110	;'n'
  1902   00FF73  2E                 	db	46
  1903   00FF74  2E                 	db	46
  1904   00FF75  2E                 	db	46
  1905   00FF76  2E                 	db	46
  1906   00FF77  2E                 	db	46
  1907   00FF78  0D                 	db	13
  1908   00FF79  0A                 	db	10
  1909   00FF7A  00                 	db	0
  1910   00FF7B  4C                 	db	76	;'L'
  1911   00FF7C  4F                 	db	79	;'O'
  1912   00FF7D  47                 	db	71	;'G'
  1913   00FF7E  20                 	db	32
  1914   00FF7F  4F                 	db	79	;'O'
  1915   00FF80  46                 	db	70	;'F'
  1916   00FF81  46                 	db	70	;'F'
  1917   00FF82  20                 	db	32
  1918   00FF83  3D                 	db	61	;'='
  1919   00FF84  20                 	db	32
  1920   00FF85  25                 	db	37
  1921   00FF86  64                 	db	100	;'d'
  1922   00FF87  0D                 	db	13
  1923   00FF88  0A                 	db	10
  1924   00FF89  00                 	db	0
  1925   00FF8A                     STR_8:
  1926   00FF8A  44                 	db	68	;'D'
  1927   00FF8B  3D                 	db	61	;'='
  1928   00FF8C  25                 	db	37
  1929   00FF8D  64                 	db	100	;'d'
  1930   00FF8E  2C                 	db	44
  1931   00FF8F  69                 	db	105	;'i'
  1932   00FF90  6E                 	db	110	;'n'
  1933   00FF91  64                 	db	100	;'d'
  1934   00FF92  65                 	db	101	;'e'
  1935   00FF93  78                 	db	120	;'x'
  1936   00FF94  3D                 	db	61	;'='
  1937   00FF95  25                 	db	37
  1938   00FF96  64                 	db	100	;'d'
  1939   00FF97  20                 	db	32
  1940   00FF98  00                 	db	0
  1941   00FF99                     STR_62:
  1942   00FF99  75                 	db	117	;'u'
  1943   00FF9A  69                 	db	105	;'i'
  1944   00FF9B  6E                 	db	110	;'n'
  1945   00FF9C  74                 	db	116	;'t'
  1946   00FF9D  33                 	db	51	;'3'
  1947   00FF9E  32                 	db	50	;'2'
  1948   00FF9F  20                 	db	32
  1949   00FFA0  3D                 	db	61	;'='
  1950   00FFA1  20                 	db	32
  1951   00FFA2  25                 	db	37
  1952   00FFA3  70                 	db	112	;'p'
  1953   00FFA4  0D                 	db	13
  1954   00FFA5  0A                 	db	10
  1955   00FFA6  00                 	db	0
  1956   00FFA7  4C                 	db	76	;'L'
  1957   00FFA8  4F                 	db	79	;'O'
  1958   00FFA9  47                 	db	71	;'G'
  1959   00FFAA  20                 	db	32
  1960   00FFAB  4F                 	db	79	;'O'
  1961   00FFAC  4E                 	db	78	;'N'
  1962   00FFAD  20                 	db	32
  1963   00FFAE  3D                 	db	61	;'='
  1964   00FFAF  20                 	db	32
  1965   00FFB0  25                 	db	37
  1966   00FFB1  64                 	db	100	;'d'
  1967   00FFB2  0D                 	db	13
  1968   00FFB3  0A                 	db	10
  1969   00FFB4  00                 	db	0
  1970   00FFB5  25                 	db	37
  1971   00FFB6  30                 	db	48	;'0'
  1972   00FFB7  32                 	db	50	;'2'
  1973   00FFB8  64                 	db	100	;'d'
  1974   00FFB9  2E                 	db	46
  1975   00FFBA  25                 	db	37
  1976   00FFBB  30                 	db	48	;'0'
  1977   00FFBC  33                 	db	51	;'3'
  1978   00FFBD  64                 	db	100	;'d'
  1979   00FFBE  2E                 	db	46
  1980   00FFBF  25                 	db	37
  1981   00FFC0  64                 	db	100	;'d'
  1982   00FFC1  20                 	db	32
  1983   00FFC2  00                 	db	0
  1984   00FFC3  43                 	db	67	;'C'
  1985   00FFC4  52                 	db	82	;'R'
  1986   00FFC5  45                 	db	69	;'E'
  1987   00FFC6  4E                 	db	78	;'N'
  1988   00FFC7  20                 	db	32
  1989   00FFC8  52                 	db	82	;'R'
  1990   00FFC9  45                 	db	69	;'E'
  1991   00FFCA  53                 	db	83	;'S'
  1992   00FFCB  45                 	db	69	;'E'
  1993   00FFCC  54                 	db	84	;'T'
  1994   00FFCD  0D                 	db	13
  1995   00FFCE  0A                 	db	10
  1996   00FFCF  00                 	db	0
  1997   00FFD0  4C                 	db	76	;'L'
  1998   00FFD1  4F                 	db	79	;'O'
  1999   00FFD2  47                 	db	71	;'G'
  2000   00FFD3  20                 	db	32
  2001   00FFD4  43                 	db	67	;'C'
  2002   00FFD5  4C                 	db	76	;'L'
  2003   00FFD6  45                 	db	69	;'E'
  2004   00FFD7  41                 	db	65	;'A'
  2005   00FFD8  52                 	db	82	;'R'
  2006   00FFD9  0D                 	db	13
  2007   00FFDA  0A                 	db	10
  2008   00FFDB  00                 	db	0
  2009   00FFDC  4C                 	db	76	;'L'
  2010   00FFDD  4F                 	db	79	;'O'
  2011   00FFDE  47                 	db	71	;'G'
  2012   00FFDF  20                 	db	32
  2013   00FFE0  53                 	db	83	;'S'
  2014   00FFE1  54                 	db	84	;'T'
  2015   00FFE2  4F                 	db	79	;'O'
  2016   00FFE3  50                 	db	80	;'P'
  2017   00FFE4  00                 	db	0
  2018   00FFE5  55                 	db	85	;'U'
  2019   00FFE6  41                 	db	65	;'A'
  2020   00FFE7  52                 	db	82	;'R'
  2021   00FFE8  54                 	db	84	;'T'
  2022   00FFE9  3E                 	db	62	;'>'
  2023   00FFEA  20                 	db	32
  2024   00FFEB  00                 	db	0
  2025   00FFEC  53                 	db	83	;'S'
  2026   00FFED  3D                 	db	61	;'='
  2027   00FFEE  25                 	db	37
  2028   00FFEF  64                 	db	100	;'d'
  2029   00FFF0  20                 	db	32
  2030   00FFF1  00                 	db	0
  2031   00FFF2                     STR_10:
  2032   00FFF2  25                 	db	37
  2033   00FFF3  73                 	db	115	;'s'
  2034   00FFF4  0D                 	db	13
  2035   00FFF5  0A                 	db	10
  2036   00FFF6  00                 	db	0
  2037   00FFF7                     STR_67:
  2038   00FFF7  6C                 	db	108	;'l'
  2039   00FFF8  6C                 	db	108	;'l'
  2040   00FFF9  73                 	db	115	;'s'
  2041   00FFFA  00                 	db	0
  2042   00FFFB                     STR_14:
  2043   00FFFB  08                 	db	8
  2044   00FFFC  20                 	db	32
  2045   00FFFD  08                 	db	8
  2046   00FFFE  00                 	db	0
  2047   00FFFF  00                 	db	0	; dummy byte at the end
  2048   000000                     
  2049                           ; #config settings
  2050                           
  2051                           	psect	cinit
  2052   01278A                     __pcinit:
  2053                           	callstack 0
  2054   01278A                     start_initialization:
  2055                           	callstack 0
  2056   01278A                     __initialization:
  2057                           	callstack 0
  2058                           
  2059                           ; Initialize objects allocated to BANK0 (23 bytes)
  2060                           ; load TBLPTR registers with __pidataBANK0
  2061   01278A  0ECA               	movlw	low __pidataBANK0
  2062   01278C  6EF6               	movwf	tblptrl,c
  2063   01278E  0E2A               	movlw	high __pidataBANK0
  2064   012790  6EF7               	movwf	tblptrh,c
  2065   012792  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2066   012794  6EF8               	movwf	tblptru,c
  2067   012796  EE00  F0CF         	lfsr	0,__pdataBANK0
  2068   01279A  EE10 F017          	lfsr	1,23
  2069   01279E                     copy_data0:
  2070   01279E  0009               	tblrd		*+
  2071   0127A0  CFF5 FFEE          	movff	tablat,postinc0
  2072   0127A4  50E5               	movf	postdec1,w,c
  2073   0127A6  50E1               	movf	fsr1l,w,c
  2074   0127A8  E1FA               	bnz	copy_data0
  2075                           
  2076                           ; Clear objects allocated to BIGRAM (584 bytes)
  2077   0127AA  EE01  F040         	lfsr	0,__pbssBIGRAM
  2078   0127AE  EE12 F048          	lfsr	1,584
  2079   0127B2                     clear_0:
  2080   0127B2  6AEE               	clrf	postinc0,c
  2081   0127B4  50E5               	movf	postdec1,w,c
  2082   0127B6  50E1               	movf	fsr1l,w,c
  2083   0127B8  E1FC               	bnz	clear_0
  2084   0127BA  50E2               	movf	fsr1h,w,c
  2085   0127BC  E1FA               	bnz	clear_0
  2086                           
  2087                           ; Clear objects allocated to BANK1 (64 bytes)
  2088   0127BE  EE01  F000         	lfsr	0,__pbssBANK1
  2089   0127C2  0E40               	movlw	64
  2090   0127C4                     clear_1:
  2091   0127C4  6AEE               	clrf	postinc0,c
  2092   0127C6  06E8               	decf	wreg,f,c
  2093   0127C8  E1FD               	bnz	clear_1
  2094                           
  2095                           ; Clear objects allocated to BANK0 (83 bytes)
  2096   0127CA  EE00  F060         	lfsr	0,__pbssBANK0
  2097   0127CE  0E53               	movlw	83
  2098   0127D0                     clear_2:
  2099   0127D0  6AEE               	clrf	postinc0,c
  2100   0127D2  06E8               	decf	wreg,f,c
  2101   0127D4  E1FD               	bnz	clear_2
  2102                           
  2103                           ; Clear objects allocated to COMRAM (1 bytes)
  2104   0127D6  6A5C               	clrf	__pbssCOMRAM& (0+255),c
  2105   0127D8                     end_of_initialization:
  2106                           	callstack 0
  2107   0127D8                     __end_of__initialization:
  2108                           	callstack 0
  2109   0127D8  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2110   0127DA  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2111   0127DC  0100               	movlb	0
  2112   0127DE  EF50  F090         	goto	_main	;jump to C main() function
  2113                           
  2114                           	psect	bssCOMRAM
  2115   00005C                     __pbssCOMRAM:
  2116                           	callstack 0
  2117   00005C                     _flags:
  2118                           	callstack 0
  2119   00005C                     	ds	1
  2120                           
  2121                           	psect	bssBANK0
  2122   000060                     __pbssBANK0:
  2123                           	callstack 0
  2124   000060                     _width:
  2125                           	callstack 0
  2126   000060                     	ds	2
  2127   000062                     _prec:
  2128                           	callstack 0
  2129   000062                     	ds	2
  2130   000064                     _input_pos:
  2131                           	callstack 0
  2132   000064                     	ds	2
  2133   000066                     _i2c_sens_cnt:
  2134                           	callstack 0
  2135   000066                     	ds	2
  2136   000068                     _dev_menue_type:
  2137                           	callstack 0
  2138   000068                     	ds	1
  2139   000069                     _input_char_step:
  2140                           	callstack 0
  2141   000069                     	ds	1
  2142   00006A                     _log_stop:
  2143                           	callstack 0
  2144   00006A                     	ds	1
  2145   00006B                     _log_onoff:
  2146                           	callstack 0
  2147   00006B                     	ds	1
  2148   00006C                     _log_sem:
  2149                           	callstack 0
  2150   00006C                     	ds	1
  2151   00006D                     _input_string:
  2152                           	callstack 0
  2153   00006D                     	ds	36
  2154   000091                     _dbuf:
  2155                           	callstack 0
  2156   000091                     	ds	32
  2157   0000B1                     _intbuf:
  2158                           	callstack 0
  2159   0000B1                     	ds	2
  2160                           
  2161                           	psect	dataBANK0
  2162   0000CF                     __pdataBANK0:
  2163                           	callstack 0
  2164   0000CF                     _CharConv:
  2165                           	callstack 0
  2166   0000CF                     	ds	16
  2167   0000DF                     stoa@F1156:
  2168                           	callstack 0
  2169   0000DF                     	ds	7
  2170                           
  2171                           	psect	bssBANK1
  2172   000100                     __pbssBANK1:
  2173                           	callstack 0
  2174   000100                     _loginfo_buf:
  2175                           	callstack 0
  2176   000100                     	ds	64
  2177                           
  2178                           	psect	bssBIGRAM
  2179   000140                     __pbssBIGRAM:
  2180                           	callstack 0
  2181   000140                     _log_dt:
  2182                           	callstack 0
  2183   000140                     	ds	584
  2184                           
  2185                           	psect	cstackBANK0
  2186   0000B3                     __pcstackBANK0:
  2187                           	callstack 0
  2188   0000B3                     ?_Xprintf:
  2189                           	callstack 0
  2190   0000B3                     Xprintf@string:
  2191                           	callstack 0
  2192                           
  2193                           ; 2 bytes @ 0x0
  2194   0000B3                     	ds	6
  2195   0000B9                     ??_Xprintf:
  2196                           
  2197                           ; 1 bytes @ 0x6
  2198   0000B9                     	ds	2
  2199   0000BB                     Xprintf@floatvalue:
  2200                           	callstack 0
  2201                           
  2202                           ; 4 bytes @ 0x8
  2203   0000BB                     	ds	4
  2204   0000BF                     Xprintf@intvalue:
  2205                           	callstack 0
  2206                           
  2207                           ; 2 bytes @ 0xC
  2208   0000BF                     	ds	2
  2209   0000C1                     Xprintf@charvalue:
  2210                           	callstack 0
  2211                           
  2212                           ; 2 bytes @ 0xE
  2213   0000C1                     	ds	2
  2214   0000C3                     Xprintf@uintvalue:
  2215                           	callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x10
  2218   0000C3                     	ds	2
  2219   0000C5                     Xprintf@uint32value:
  2220                           	callstack 0
  2221                           
  2222                           ; 4 bytes @ 0x12
  2223   0000C5                     	ds	4
  2224   0000C9                     Xprintf@ap:
  2225                           	callstack 0
  2226                           
  2227                           ; 2 bytes @ 0x16
  2228   0000C9                     	ds	2
  2229   0000CB                     Xprintf@buffer:
  2230                           	callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x18
  2233   0000CB                     	ds	2
  2234   0000CD                     main@ch:
  2235                           	callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x1A
  2238   0000CD                     	ds	2
  2239                           
  2240                           	psect	cstackCOMRAM
  2241   000001                     __pcstackCOMRAM:
  2242                           	callstack 0
  2243   000001                     ??_low_isr:
  2244                           
  2245                           ; 1 bytes @ 0x0
  2246   000001                     	ds	1
  2247   000002                     ?_getch:
  2248                           	callstack 0
  2249   000002                     ?_my_putchar:
  2250                           	callstack 0
  2251   000002                     ?_my_putshex:
  2252                           	callstack 0
  2253   000002                     ?_my_putshex32:
  2254                           	callstack 0
  2255   000002                     ?_strlen:
  2256                           	callstack 0
  2257   000002                     ?_strncmp:
  2258                           	callstack 0
  2259   000002                     ?___wmul:
  2260                           	callstack 0
  2261   000002                     ?___awdiv:
  2262                           	callstack 0
  2263   000002                     ?___fladd:
  2264                           	callstack 0
  2265   000002                     ?___flmul:
  2266                           	callstack 0
  2267   000002                     ?___aldiv:
  2268                           	callstack 0
  2269   000002                     ?___almod:
  2270                           	callstack 0
  2271   000002                     ?___flneg:
  2272                           	callstack 0
  2273   000002                     ?___fltol:
  2274                           	callstack 0
  2275   000002                     ?___xxtofl:
  2276                           	callstack 0
  2277   000002                     putch@c:
  2278                           	callstack 0
  2279   000002                     Wait@num:
  2280                           	callstack 0
  2281   000002                     Set_UasrtBauRaite@dt:
  2282                           	callstack 0
  2283   000002                     my_putchar@buf:
  2284                           	callstack 0
  2285   000002                     my_putshex@dt:
  2286                           	callstack 0
  2287   000002                     ___wmul@multiplier:
  2288                           	callstack 0
  2289   000002                     ___awdiv@dividend:
  2290                           	callstack 0
  2291   000002                     strlen@s:
  2292                           	callstack 0
  2293   000002                     strncmp@_l:
  2294                           	callstack 0
  2295   000002                     my_putshex32@dt:
  2296                           	callstack 0
  2297   000002                     ___aldiv@dividend:
  2298                           	callstack 0
  2299   000002                     ___almod@dividend:
  2300                           	callstack 0
  2301   000002                     ___flneg@f1:
  2302                           	callstack 0
  2303   000002                     ___fltol@f1:
  2304                           	callstack 0
  2305   000002                     ___fladd@b:
  2306                           	callstack 0
  2307   000002                     ___flmul@b:
  2308                           	callstack 0
  2309   000002                     ___xxtofl@val:
  2310                           	callstack 0
  2311                           
  2312                           ; 4 bytes @ 0x1
  2313   000002                     	ds	1
  2314   000003                     putstring@c:
  2315                           	callstack 0
  2316   000003                     fputc@c:
  2317                           	callstack 0
  2318                           
  2319                           ; 2 bytes @ 0x2
  2320   000003                     	ds	1
  2321   000004                     ??_Wait:
  2322   000004                     my_putchar@c:
  2323                           	callstack 0
  2324   000004                     my_putshex@flg:
  2325                           	callstack 0
  2326   000004                     ___wmul@multiplicand:
  2327                           	callstack 0
  2328   000004                     ___awdiv@divisor:
  2329                           	callstack 0
  2330   000004                     strlen@a:
  2331                           	callstack 0
  2332   000004                     strncmp@_r:
  2333                           	callstack 0
  2334   000004                     uart_init@dt:
  2335                           	callstack 0
  2336                           
  2337                           ; 3 bytes @ 0x3
  2338   000004                     	ds	1
  2339   000005                     ??_putstring:
  2340   000005                     ?_my_puts:
  2341                           	callstack 0
  2342   000005                     Wait@i:
  2343                           	callstack 0
  2344   000005                     my_puts@str:
  2345                           	callstack 0
  2346   000005                     my_putshex@buf:
  2347                           	callstack 0
  2348   000005                     fputc@fp:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x4
  2352   000005                     	ds	1
  2353   000006                     ??___fltol:
  2354   000006                     ??___xxtofl:
  2355   000006                     ___awdiv@counter:
  2356                           	callstack 0
  2357   000006                     my_putshex32@buf:
  2358                           	callstack 0
  2359   000006                     ___wmul@product:
  2360                           	callstack 0
  2361   000006                     strncmp@n:
  2362                           	callstack 0
  2363   000006                     ___aldiv@divisor:
  2364                           	callstack 0
  2365   000006                     ___almod@divisor:
  2366                           	callstack 0
  2367   000006                     ___fladd@a:
  2368                           	callstack 0
  2369   000006                     ___flmul@a:
  2370                           	callstack 0
  2371                           
  2372                           ; 4 bytes @ 0x5
  2373   000006                     	ds	1
  2374   000007                     ??_my_putshex:
  2375   000007                     ??_fputc:
  2376   000007                     ___awdiv@sign:
  2377                           	callstack 0
  2378   000007                     putstring@i:
  2379                           	callstack 0
  2380   000007                     my_puts@buf:
  2381                           	callstack 0
  2382                           
  2383                           ; 2 bytes @ 0x6
  2384   000007                     	ds	1
  2385   000008                     ??_my_putshex32:
  2386   000008                     ??_strncmp:
  2387   000008                     ?_read_prec_or_width:
  2388                           	callstack 0
  2389   000008                     ___awdiv@quotient:
  2390                           	callstack 0
  2391   000008                     read_prec_or_width@fmt:
  2392                           	callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x7
  2395   000008                     	ds	1
  2396   000009                     strncmp@l:
  2397                           	callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x8
  2400   000009                     	ds	1
  2401   00000A                     ??___fladd:
  2402   00000A                     ??___flmul:
  2403   00000A                     ?_my_putint:
  2404                           	callstack 0
  2405   00000A                     my_putshex@sw:
  2406                           	callstack 0
  2407   00000A                     ___aldiv@counter:
  2408                           	callstack 0
  2409   00000A                     ___almod@counter:
  2410                           	callstack 0
  2411   00000A                     ___fltol@sign1:
  2412                           	callstack 0
  2413   00000A                     ___xxtofl@sign:
  2414                           	callstack 0
  2415   00000A                     my_putint@num:
  2416                           	callstack 0
  2417   00000A                     read_prec_or_width@ap:
  2418                           	callstack 0
  2419                           
  2420                           ; 2 bytes @ 0x9
  2421   00000A                     	ds	1
  2422   00000B                     ___aldiv@sign:
  2423                           	callstack 0
  2424   00000B                     ___almod@sign:
  2425                           	callstack 0
  2426   00000B                     ___fltol@exp1:
  2427                           	callstack 0
  2428   00000B                     ___xxtofl@exp:
  2429                           	callstack 0
  2430   00000B                     strncmp@r:
  2431                           	callstack 0
  2432                           
  2433                           ; 2 bytes @ 0xA
  2434   00000B                     	ds	1
  2435   00000C                     ??_read_prec_or_width:
  2436   00000C                     ?_abs:
  2437                           	callstack 0
  2438   00000C                     my_putint@buf:
  2439                           	callstack 0
  2440   00000C                     stoa@fp:
  2441                           	callstack 0
  2442   00000C                     abs@a:
  2443                           	callstack 0
  2444   00000C                     fputs@s:
  2445                           	callstack 0
  2446   00000C                     ___aldiv@quotient:
  2447                           	callstack 0
  2448   00000C                     ___xxtofl@arg:
  2449                           	callstack 0
  2450                           
  2451                           ; 4 bytes @ 0xB
  2452   00000C                     	ds	2
  2453   00000E                     ??_abs:
  2454   00000E                     ___fladd@signs:
  2455                           	callstack 0
  2456   00000E                     ___flmul@sign:
  2457                           	callstack 0
  2458   00000E                     read_prec_or_width@c:
  2459                           	callstack 0
  2460   00000E                     my_putint@temp:
  2461                           	callstack 0
  2462   00000E                     stoa@s:
  2463                           	callstack 0
  2464   00000E                     fputs@fp:
  2465                           	callstack 0
  2466                           
  2467                           ; 2 bytes @ 0xD
  2468   00000E                     	ds	1
  2469   00000F                     ___fladd@aexp:
  2470                           	callstack 0
  2471   00000F                     read_prec_or_width@n:
  2472                           	callstack 0
  2473   00000F                     ___flmul@grs:
  2474                           	callstack 0
  2475                           
  2476                           ; 4 bytes @ 0xE
  2477   00000F                     	ds	1
  2478   000010                     ??_stoa:
  2479   000010                     ___fladd@bexp:
  2480                           	callstack 0
  2481   000010                     fputs@c:
  2482                           	callstack 0
  2483   000010                     my_putint@keta:
  2484                           	callstack 0
  2485                           
  2486                           ; 2 bytes @ 0xF
  2487   000010                     	ds	1
  2488   000011                     my_putshex32@sw:
  2489                           	callstack 0
  2490   000011                     ___fladd@grs:
  2491                           	callstack 0
  2492   000011                     fputs@i:
  2493                           	callstack 0
  2494   000011                     stoa@nuls:
  2495                           	callstack 0
  2496                           
  2497                           ; 7 bytes @ 0x10
  2498   000011                     	ds	1
  2499   000012                     ?___flsub:
  2500                           	callstack 0
  2501   000012                     my_putshex32@i:
  2502                           	callstack 0
  2503   000012                     ___flsub@b:
  2504                           	callstack 0
  2505                           
  2506                           ; 4 bytes @ 0x11
  2507   000012                     	ds	1
  2508   000013                     ___flmul@aexp:
  2509                           	callstack 0
  2510   000013                     pad@fp:
  2511                           	callstack 0
  2512                           
  2513                           ; 2 bytes @ 0x12
  2514   000013                     	ds	1
  2515   000014                     ___flmul@bexp:
  2516                           	callstack 0
  2517                           
  2518                           ; 1 bytes @ 0x13
  2519   000014                     	ds	1
  2520   000015                     pad@buf:
  2521                           	callstack 0
  2522   000015                     ___flmul@prod:
  2523                           	callstack 0
  2524                           
  2525                           ; 4 bytes @ 0x14
  2526   000015                     	ds	1
  2527   000016                     ___flsub@a:
  2528                           	callstack 0
  2529                           
  2530                           ; 4 bytes @ 0x15
  2531   000016                     	ds	1
  2532   000017                     pad@p:
  2533                           	callstack 0
  2534                           
  2535                           ; 2 bytes @ 0x16
  2536   000017                     	ds	1
  2537   000018                     stoa@i:
  2538                           	callstack 0
  2539                           
  2540                           ; 2 bytes @ 0x17
  2541   000018                     	ds	1
  2542   000019                     ??_pad:
  2543   000019                     ___flmul@temp:
  2544                           	callstack 0
  2545                           
  2546                           ; 2 bytes @ 0x18
  2547   000019                     	ds	1
  2548   00001A                     pad@i:
  2549                           	callstack 0
  2550   00001A                     stoa@w:
  2551                           	callstack 0
  2552                           
  2553                           ; 2 bytes @ 0x19
  2554   00001A                     	ds	1
  2555   00001B                     ?_my_putfloat:
  2556                           	callstack 0
  2557   00001B                     my_putfloat@num:
  2558                           	callstack 0
  2559                           
  2560                           ; 4 bytes @ 0x1A
  2561   00001B                     	ds	1
  2562   00001C                     pad@w:
  2563                           	callstack 0
  2564   00001C                     stoa@cp:
  2565                           	callstack 0
  2566                           
  2567                           ; 2 bytes @ 0x1B
  2568   00001C                     	ds	2
  2569   00001E                     dtoa@fp:
  2570                           	callstack 0
  2571   00001E                     stoa@p:
  2572                           	callstack 0
  2573   00001E                     xtoa@fp:
  2574                           	callstack 0
  2575                           
  2576                           ; 2 bytes @ 0x1D
  2577   00001E                     	ds	1
  2578   00001F                     my_putfloat@precision:
  2579                           	callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x1E
  2582   00001F                     	ds	1
  2583   000020                     stoa@l:
  2584                           	callstack 0
  2585   000020                     dtoa@d:
  2586                           	callstack 0
  2587   000020                     xtoa@d:
  2588                           	callstack 0
  2589                           
  2590                           ; 4 bytes @ 0x1F
  2591   000020                     	ds	1
  2592   000021                     my_putfloat@buf:
  2593                           	callstack 0
  2594                           
  2595                           ; 2 bytes @ 0x20
  2596   000021                     	ds	2
  2597   000023                     ??_my_putfloat:
  2598                           
  2599                           ; 1 bytes @ 0x22
  2600   000023                     	ds	1
  2601   000024                     ??_xtoa:
  2602   000024                     my_putfloat@count:
  2603                           	callstack 0
  2604   000024                     _dtoa$1519:
  2605                           	callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x23
  2608   000024                     	ds	2
  2609   000026                     my_putfloat@intPart:
  2610                           	callstack 0
  2611   000026                     dtoa@p:
  2612                           	callstack 0
  2613                           
  2614                           ; 2 bytes @ 0x25
  2615   000026                     	ds	2
  2616   000028                     my_putfloat@digit_950:
  2617                           	callstack 0
  2618   000028                     dtoa@w:
  2619                           	callstack 0
  2620   000028                     _xtoa$1538:
  2621                           	callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x27
  2624   000028                     	ds	2
  2625   00002A                     dtoa@i:
  2626                           	callstack 0
  2627   00002A                     xtoa@p:
  2628                           	callstack 0
  2629   00002A                     my_putfloat@fracPart:
  2630                           	callstack 0
  2631                           
  2632                           ; 4 bytes @ 0x29
  2633   00002A                     	ds	2
  2634   00002C                     dtoa@s:
  2635                           	callstack 0
  2636   00002C                     xtoa@w:
  2637                           	callstack 0
  2638                           
  2639                           ; 2 bytes @ 0x2B
  2640   00002C                     	ds	2
  2641   00002E                     xtoa@i:
  2642                           	callstack 0
  2643                           
  2644                           ; 2 bytes @ 0x2D
  2645   00002E                     	ds	2
  2646   000030                     xtoa@c:
  2647                           	callstack 0
  2648                           
  2649                           ; 1 bytes @ 0x2F
  2650   000030                     	ds	1
  2651   000031                     vfpfcnvrt@fp:
  2652                           	callstack 0
  2653                           
  2654                           ; 2 bytes @ 0x30
  2655   000031                     	ds	2
  2656   000033                     vfpfcnvrt@fmt:
  2657                           	callstack 0
  2658                           
  2659                           ; 2 bytes @ 0x32
  2660   000033                     	ds	2
  2661   000035                     vfpfcnvrt@ap:
  2662                           	callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x34
  2665   000035                     	ds	2
  2666   000037                     ??_vfpfcnvrt:
  2667                           
  2668                           ; 1 bytes @ 0x36
  2669   000037                     	ds	4
  2670   00003B                     vfpfcnvrt@done:
  2671                           	callstack 0
  2672                           
  2673                           ; 2 bytes @ 0x3A
  2674   00003B                     	ds	2
  2675   00003D                     _vfpfcnvrt$1565:
  2676                           	callstack 0
  2677                           
  2678                           ; 2 bytes @ 0x3C
  2679   00003D                     	ds	2
  2680   00003F                     vfpfcnvrt@convarg:
  2681                           	callstack 0
  2682                           
  2683                           ; 4 bytes @ 0x3E
  2684   00003F                     	ds	4
  2685   000043                     vfpfcnvrt@c:
  2686                           	callstack 0
  2687                           
  2688                           ; 1 bytes @ 0x42
  2689   000043                     	ds	1
  2690   000044                     vfpfcnvrt@cp:
  2691                           	callstack 0
  2692                           
  2693                           ; 2 bytes @ 0x43
  2694   000044                     	ds	2
  2695   000046                     ?_vfprintf:
  2696                           	callstack 0
  2697   000046                     vfprintf@fp:
  2698                           	callstack 0
  2699                           
  2700                           ; 2 bytes @ 0x45
  2701   000046                     	ds	2
  2702   000048                     vfprintf@fmt:
  2703                           	callstack 0
  2704                           
  2705                           ; 2 bytes @ 0x47
  2706   000048                     	ds	2
  2707   00004A                     vfprintf@ap:
  2708                           	callstack 0
  2709                           
  2710                           ; 2 bytes @ 0x49
  2711   00004A                     	ds	2
  2712   00004C                     vfprintf@cfmt:
  2713                           	callstack 0
  2714                           
  2715                           ; 2 bytes @ 0x4B
  2716   00004C                     	ds	2
  2717   00004E                     ?_printf:
  2718                           	callstack 0
  2719   00004E                     printf@fmt:
  2720                           	callstack 0
  2721                           
  2722                           ; 2 bytes @ 0x4D
  2723   00004E                     	ds	12
  2724   00005A                     printf@ap:
  2725                           	callstack 0
  2726                           
  2727                           ; 2 bytes @ 0x59
  2728   00005A                     	ds	2
  2729   00005C                     
  2730                           ; 1 bytes @ 0x5B
  2731 ;;
  2732 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2733 ;;
  2734 ;; *************** function _main *****************
  2735 ;; Defined at:
  2736 ;;		line 245 in file "main.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  dtf             4    0        float 
  2741 ;;  ch              2   26[BANK0 ] int 
  2742 ;;  dt              4    0        unsigned long 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;Total ram usage:        2 bytes
  2757 ;; Hardware stack levels required when called: 11
  2758 ;; This function calls:
  2759 ;;		_Wait
  2760 ;;		_Xprintf
  2761 ;;		_getch
  2762 ;;		_putstring
  2763 ;;		_uart_init
  2764 ;; This function is called by:
  2765 ;;		Startup code after reset
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text0
  2770   0120A0                     __ptext0:
  2771                           	callstack 0
  2772   0120A0                     _main:
  2773                           	callstack 20
  2774   0120A0                     
  2775                           ;main.c: 247:     uint32_t dt;;main.c: 249:     PLLEN = 1 ;
  2776   0120A0  8C9B               	bsf	3995,6,c	;volatile
  2777                           
  2778                           ;main.c: 250:     FSEN = 1 ;
  2779   0120A2  010F               	movlb	15	; () banked
  2780   0120A4  8539               	bsf	57,2,b	;volatile
  2781                           
  2782                           ;main.c: 251:     RBPU = 0 ;
  2783   0120A6  9EF1               	bcf	4081,7,c	;volatile
  2784   0120A8                     
  2785                           ; BSR set to: 15
  2786                           ;main.c: 252:     OSCCON = 0b01110000 ;
  2787   0120A8  0E70               	movlw	112
  2788   0120AA  6ED3               	movwf	211,c	;volatile
  2789                           
  2790                           ;main.c: 253:     ANCON0 = 0b00011111 ;
  2791   0120AC  0E1F               	movlw	31
  2792   0120AE  6F48               	movwf	72,b	;volatile
  2793                           
  2794                           ;main.c: 254:     ANCON1 = 0b00011111 ;
  2795   0120B0  0E1F               	movlw	31
  2796   0120B2  6F49               	movwf	73,b	;volatile
  2797                           
  2798                           ;main.c: 255:     TRISA = 0b00000000 ;
  2799   0120B4  0E00               	movlw	0
  2800   0120B6  6E92               	movwf	146,c	;volatile
  2801                           
  2802                           ;main.c: 256:     TRISB = 0b00110000 ;
  2803   0120B8  0E30               	movlw	48
  2804   0120BA  6E93               	movwf	147,c	;volatile
  2805                           
  2806                           ;main.c: 257:     TRISC = 0b00000000 ;
  2807   0120BC  0E00               	movlw	0
  2808   0120BE  6E94               	movwf	148,c	;volatile
  2809                           
  2810                           ;main.c: 258:     TRISD = 0b00001111 ;
  2811   0120C0  0E0F               	movlw	15
  2812   0120C2  6E95               	movwf	149,c	;volatile
  2813                           
  2814                           ;main.c: 259:     PORTA = 0b00000000 ;
  2815   0120C4  0E00               	movlw	0
  2816   0120C6  6E80               	movwf	128,c	;volatile
  2817                           
  2818                           ;main.c: 260:     PORTB = 0b00000000 ;
  2819   0120C8  0E00               	movlw	0
  2820   0120CA  6E81               	movwf	129,c	;volatile
  2821                           
  2822                           ;main.c: 261:     PORTC = 0b00000000 ;
  2823   0120CC  0E00               	movlw	0
  2824   0120CE  6E82               	movwf	130,c	;volatile
  2825                           
  2826                           ;main.c: 262:     PORTD = 0b00000000 ;
  2827   0120D0  0E00               	movlw	0
  2828   0120D2  6E83               	movwf	131,c	;volatile
  2829   0120D4                     
  2830                           ; BSR set to: 15
  2831                           ;main.c: 264:     TRISAbits.TRISA0 = 0;
  2832   0120D4  9092               	bcf	146,0,c	;volatile
  2833   0120D6                     
  2834                           ; BSR set to: 15
  2835                           ;main.c: 265:     TRISAbits.TRISA1 = 0;
  2836   0120D6  9292               	bcf	146,1,c	;volatile
  2837   0120D8                     
  2838                           ; BSR set to: 15
  2839                           ;main.c: 266:     TRISAbits.TRISA2 = 0;
  2840   0120D8  9492               	bcf	146,2,c	;volatile
  2841   0120DA                     
  2842                           ; BSR set to: 15
  2843                           ;main.c: 267:     TRISBbits.TRISB2 = 0;
  2844   0120DA  9493               	bcf	147,2,c	;volatile
  2845   0120DC                     
  2846                           ; BSR set to: 15
  2847                           ;main.c: 268:     LATAbits.LATA0 = 1;
  2848   0120DC  8089               	bsf	137,0,c	;volatile
  2849   0120DE                     
  2850                           ; BSR set to: 15
  2851                           ;main.c: 269:     LATAbits.LATA1 = 1;
  2852   0120DE  8289               	bsf	137,1,c	;volatile
  2853   0120E0                     
  2854                           ; BSR set to: 15
  2855                           ;main.c: 271:     TRISDbits.TRISD3 = 1;
  2856   0120E0  8695               	bsf	149,3,c	;volatile
  2857   0120E2                     
  2858                           ; BSR set to: 15
  2859                           ;main.c: 272:     TRISDbits.TRISD2 = 1;
  2860   0120E2  8495               	bsf	149,2,c	;volatile
  2861   0120E4                     
  2862                           ; BSR set to: 15
  2863                           ;main.c: 274:     Wait(10);
  2864   0120E4  0E00               	movlw	0
  2865   0120E6  6E03               	movwf	(Wait@num+1)^0,c
  2866   0120E8  0E0A               	movlw	10
  2867   0120EA  6E02               	movwf	Wait@num^0,c
  2868   0120EC  ECEF  F094         	call	_Wait	;wreg free
  2869   0120F0                     
  2870                           ;main.c: 276:     uart_init();
  2871   0120F0  ECF1  F093         	call	_uart_init	;wreg free
  2872   0120F4                     
  2873                           ;main.c: 279:     putstring("abcdefg.....\r\n");
  2874   0120F4  0E5D               	movlw	low STR_60
  2875   0120F6  6E03               	movwf	putstring@c^0,c
  2876   0120F8  0EFF               	movlw	high STR_60
  2877   0120FA  6E04               	movwf	(putstring@c+1)^0,c
  2878   0120FC  EC84  F093         	call	_putstring	;wreg free
  2879   012100                     l5392:
  2880                           
  2881                           ;main.c: 283:     {;main.c: 284:         int ch;;main.c: 285:         float dtf;;main.c:
      +                           291:         ch = getch();
  2882   012100  EC46  F095         	call	_getch	;wreg free
  2883   012104  C002  F0CD         	movff	?_getch,main@ch
  2884   012108  C003  F0CE         	movff	?_getch+1,main@ch+1
  2885   01210C                     
  2886                           ;main.c: 292:         if( ch != 0 ){
  2887   01210C  0100               	movlb	0	; () banked
  2888   01210E  51CD               	movf	main@ch& (0+255),w,b
  2889   012110  11CE               	iorwf	(main@ch+1)& (0+255),w,b
  2890   012112  B4D8               	btfsc	status,2,c
  2891   012114  EF8E  F090         	goto	u4901
  2892   012118  EF90  F090         	goto	u4900
  2893   01211C                     u4901:
  2894   01211C  EF80  F090         	goto	l5392
  2895   012120                     u4900:
  2896   012120                     
  2897                           ; BSR set to: 0
  2898                           ;main.c: 293:             putstring("Data in.....\r\n");
  2899   012120  0E6C               	movlw	low STR_61
  2900   012122  6E03               	movwf	putstring@c^0,c
  2901   012124  0EFF               	movlw	high STR_61
  2902   012126  6E04               	movwf	(putstring@c+1)^0,c
  2903   012128  EC84  F093         	call	_putstring	;wreg free
  2904   01212C                     
  2905                           ;main.c: 297:             Xprintf("uint32 = %p\r\n",(void *)&intbuf);
  2906   01212C  0E99               	movlw	low STR_62
  2907   01212E  0100               	movlb	0	; () banked
  2908   012130  6FB3               	movwf	Xprintf@string& (0+255),b
  2909   012132  0EFF               	movlw	high STR_62
  2910   012134  6FB4               	movwf	(Xprintf@string+1)& (0+255),b
  2911   012136  0EB1               	movlw	low _intbuf
  2912   012138  6FB5               	movwf	(?_Xprintf+2)& (0+255),b
  2913   01213A  0E00               	movlw	high _intbuf
  2914   01213C  6FB6               	movwf	(?_Xprintf+3)& (0+255),b
  2915   01213E  EC87  F088         	call	_Xprintf	;wreg free
  2916   012142                     
  2917                           ;main.c: 298:             Xprintf("uint32 = %p\r\n",(long)&intbuf);
  2918   012142  0E99               	movlw	low STR_62
  2919   012144  0100               	movlb	0	; () banked
  2920   012146  6FB3               	movwf	Xprintf@string& (0+255),b
  2921   012148  0EFF               	movlw	high STR_62
  2922   01214A  6FB4               	movwf	(Xprintf@string+1)& (0+255),b
  2923   01214C  0EB1               	movlw	low _intbuf
  2924   01214E  6FB5               	movwf	(?_Xprintf+2)& (0+255),b
  2925   012150  0E00               	movlw	high _intbuf
  2926   012152  6FB6               	movwf	(?_Xprintf+3)& (0+255),b
  2927   012154  0E00               	movlw	low (_intbuf shr (0+16))
  2928   012156  6FB7               	movwf	(?_Xprintf+4)& (0+255),b
  2929   012158  0E00               	movlw	high (_intbuf shr (0+16))
  2930   01215A  6FB8               	movwf	(?_Xprintf+5)& (0+255),b
  2931   01215C  EC87  F088         	call	_Xprintf	;wreg free
  2932   012160                     
  2933                           ;main.c: 299:             Xprintf("loginfo_buf = %p\r\n",(void *)loginfo_buf);
  2934   012160  0EDE               	movlw	low STR_64
  2935   012162  0100               	movlb	0	; () banked
  2936   012164  6FB3               	movwf	Xprintf@string& (0+255),b
  2937   012166  0EFE               	movlw	high STR_64
  2938   012168  6FB4               	movwf	(Xprintf@string+1)& (0+255),b
  2939   01216A  0E00               	movlw	low _loginfo_buf
  2940   01216C  6FB5               	movwf	(?_Xprintf+2)& (0+255),b
  2941   01216E  0E01               	movlw	high _loginfo_buf
  2942   012170  6FB6               	movwf	(?_Xprintf+3)& (0+255),b
  2943   012172  EC87  F088         	call	_Xprintf	;wreg free
  2944   012176                     
  2945                           ;main.c: 300:             Xprintf("loginfo_buf = %p\r\n",(long)loginfo_buf);
  2946   012176  0EDE               	movlw	low STR_64
  2947   012178  0100               	movlb	0	; () banked
  2948   01217A  6FB3               	movwf	Xprintf@string& (0+255),b
  2949   01217C  0EFE               	movlw	high STR_64
  2950   01217E  6FB4               	movwf	(Xprintf@string+1)& (0+255),b
  2951   012180  0E00               	movlw	low _loginfo_buf
  2952   012182  6FB5               	movwf	(?_Xprintf+2)& (0+255),b
  2953   012184  0E01               	movlw	high _loginfo_buf
  2954   012186  6FB6               	movwf	(?_Xprintf+3)& (0+255),b
  2955   012188  0E00               	movlw	low (_loginfo_buf shr (0+16))
  2956   01218A  6FB7               	movwf	(?_Xprintf+4)& (0+255),b
  2957   01218C  0E00               	movlw	high (_loginfo_buf shr (0+16))
  2958   01218E  6FB8               	movwf	(?_Xprintf+5)& (0+255),b
  2959   012190  EC87  F088         	call	_Xprintf	;wreg free
  2960   012194  EF80  F090         	goto	l5392
  2961   012198  EF13  F000         	goto	start
  2962   01219C                     __end_of_main:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _uart_init *****************
  2966 ;; Defined at:
  2967 ;;		line 98 in file "uart_main.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  dt              3    3[COMRAM] struct .
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;Total ram usage:        3 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 3
  2988 ;; This function calls:
  2989 ;;		_Set_UasrtBauRaite
  2990 ;; This function is called by:
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text1
  2996   0127E2                     __ptext1:
  2997                           	callstack 0
  2998   0127E2                     _uart_init:
  2999                           	callstack 27
  3000   0127E2                     
  3001                           ;uart_main.c: 100:     UART_SET_DATA dt;;uart_main.c: 105:     EECON2 = 0x55;
  3002   0127E2  0E55               	movlw	85
  3003   0127E4  6EA7               	movwf	167,c	;volsfr
  3004                           
  3005                           ;uart_main.c: 106:     EECON2 = 0xAA;
  3006   0127E6  0EAA               	movlw	170
  3007   0127E8  6EA7               	movwf	167,c	;volsfr
  3008   0127EA                     
  3009                           ;uart_main.c: 107:     PPSCONbits.IOLOCK = 0;
  3010   0127EA  010E               	movlb	14	; () banked
  3011   0127EC  91BF               	bcf	191,0,b	;volatile
  3012                           
  3013                           ;uart_main.c: 111:     RPINR16 = 22;
  3014   0127EE  0E16               	movlw	22
  3015   0127F0  6FF7               	movwf	247,b	;volatile
  3016                           
  3017                           ;uart_main.c: 114:     RPOR23 = 0x06;
  3018   0127F2  0E06               	movlw	6
  3019   0127F4  6FD7               	movwf	215,b	;volatile
  3020                           
  3021                           ;uart_main.c: 118:     EECON2 = 0x55;
  3022   0127F6  0E55               	movlw	85
  3023   0127F8  6EA7               	movwf	167,c	;volsfr
  3024                           
  3025                           ;uart_main.c: 119:     EECON2 = 0xAA;
  3026   0127FA  0EAA               	movlw	170
  3027   0127FC  6EA7               	movwf	167,c	;volsfr
  3028   0127FE                     
  3029                           ; BSR set to: 14
  3030                           ;uart_main.c: 120:     PPSCONbits.IOLOCK = 1;
  3031   0127FE  81BF               	bsf	191,0,b	;volatile
  3032   012800                     
  3033                           ; BSR set to: 14
  3034                           ;uart_main.c: 124:         TRISDbits.TRISD6 = 0;
  3035   012800  9C95               	bcf	149,6,c	;volatile
  3036   012802                     
  3037                           ; BSR set to: 14
  3038                           ;uart_main.c: 125:         TRISDbits.TRISD5 = 1;
  3039   012802  8A95               	bsf	149,5,c	;volatile
  3040                           
  3041                           ;uart_main.c: 128:         TXSTA2 = 0;
  3042   012804  0E00               	movlw	0
  3043   012806  6EA8               	movwf	168,c	;volatile
  3044   012808                     
  3045                           ; BSR set to: 14
  3046                           ;uart_main.c: 129:         TXSTA2bits.TXEN = 1;
  3047   012808  8AA8               	bsf	168,5,c	;volatile
  3048   01280A                     
  3049                           ; BSR set to: 14
  3050                           ;uart_main.c: 130:         TXSTA2bits.BRGH = 0;
  3051   01280A  94A8               	bcf	168,2,c	;volatile
  3052                           
  3053                           ;uart_main.c: 132:         RCSTA2 = 0;
  3054   01280C  0E00               	movlw	0
  3055   01280E  6E9C               	movwf	156,c	;volatile
  3056   012810                     
  3057                           ; BSR set to: 14
  3058                           ;uart_main.c: 133:         RCSTA2bits.SPEN = 1;
  3059   012810  8E9C               	bsf	156,7,c	;volatile
  3060   012812                     
  3061                           ; BSR set to: 14
  3062                           ;uart_main.c: 134:         RCSTA2bits.CREN = 1;
  3063   012812  889C               	bsf	156,4,c	;volatile
  3064                           
  3065                           ;uart_main.c: 136:         BAUDCON2 = 0;
  3066   012814  0E00               	movlw	0
  3067   012816  6E7C               	movwf	124,c	;volatile
  3068   012818                     
  3069                           ; BSR set to: 14
  3070                           ;uart_main.c: 137:         BAUDCON2bits.BRG16 = 0;
  3071   012818  967C               	bcf	124,3,c	;volatile
  3072   01281A                     
  3073                           ; BSR set to: 14
  3074                           ;uart_main.c: 139:         Set_UasrtBauRaite(&dt);
  3075   01281A  0E04               	movlw	low uart_init@dt
  3076   01281C  6E02               	movwf	Set_UasrtBauRaite@dt^0,c
  3077   01281E  0E00               	movlw	high uart_init@dt
  3078   012820  6E03               	movwf	(Set_UasrtBauRaite@dt+1)^0,c
  3079   012822  EC0B  F095         	call	_Set_UasrtBauRaite	;wreg free
  3080   012826                     
  3081                           ;uart_main.c: 140:         SPBRGH2 = dt.SPBRGHx;
  3082   012826  C005  FF7D         	movff	uart_init@dt+1,3965	;volatile
  3083   01282A                     
  3084                           ;uart_main.c: 141:         SPBRG2 = dt.SPBRGx;
  3085   01282A  C006  FFAB         	movff	uart_init@dt+2,4011	;volatile
  3086   01282E                     
  3087                           ;uart_main.c: 142:         TXSTA2bits.BRGH = dt.BRGHx;
  3088   01282E  B004               	btfsc	uart_init@dt^0,0,c
  3089   012830  D002               	bra	u4735
  3090   012832  94A8               	bcf	168,2,c	;volatile
  3091   012834  D001               	bra	u4736
  3092   012836                     u4735:
  3093   012836  84A8               	bsf	168,2,c	;volatile
  3094   012838                     u4736:
  3095   012838  0012               	return		;funcret
  3096   01283A                     __end_of_uart_init:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _Set_UasrtBauRaite *****************
  3100 ;; Defined at:
  3101 ;;		line 33 in file "uart_main.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  dt              2    1[COMRAM] PTR struct .
  3104 ;;		 -> uart_init@dt(3), 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  l_buf           2    0        unsigned short 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 2
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_uart_init
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text2
  3131   012A16                     __ptext2:
  3132                           	callstack 0
  3133   012A16                     _Set_UasrtBauRaite:
  3134                           	callstack 27
  3135   012A16                     
  3136                           ;uart_main.c: 33: void Set_UasrtBauRaite(UART_SET_DATA *dt);uart_main.c: 34: {;uart_main
      +                          .c: 35:     uint16_t l_buf;;uart_main.c: 37:     dt->BRGHx = 0;
  3137   012A16  C002  FFD9         	movff	Set_UasrtBauRaite@dt,fsr2l
  3138   012A1A  C003  FFDA         	movff	Set_UasrtBauRaite@dt+1,fsr2h
  3139   012A1E  6ADF               	clrf	indf2,c
  3140   012A20                     
  3141                           ;uart_main.c: 38:     dt->SPBRGHx = 0;
  3142   012A20  EE20 F001          	lfsr	2,1
  3143   012A24  5002               	movf	Set_UasrtBauRaite@dt^0,w,c
  3144   012A26  26D9               	addwf	fsr2l,f,c
  3145   012A28  5003               	movf	(Set_UasrtBauRaite@dt+1)^0,w,c
  3146   012A2A  22DA               	addwfc	fsr2h,f,c
  3147   012A2C  6ADF               	clrf	indf2,c
  3148   012A2E                     
  3149                           ;uart_main.c: 41:     dt->SPBRGx = (uint8_t)l_buf;
  3150   012A2E  EE20 F002          	lfsr	2,2
  3151   012A32  5002               	movf	Set_UasrtBauRaite@dt^0,w,c
  3152   012A34  26D9               	addwf	fsr2l,f,c
  3153   012A36  5003               	movf	(Set_UasrtBauRaite@dt+1)^0,w,c
  3154   012A38  22DA               	addwfc	fsr2h,f,c
  3155   012A3A  0E0C               	movlw	12
  3156   012A3C  6EDF               	movwf	indf2,c
  3157   012A3E  0012               	return		;funcret
  3158   012A40                     __end_of_Set_UasrtBauRaite:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _getch *****************
  3162 ;; Defined at:
  3163 ;;		line 80 in file "uart_main.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  2    1[COMRAM] int 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;Total ram usage:        2 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 2
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;;		_read_line_streem
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text3
  3193   012A8C                     __ptext3:
  3194                           	callstack 0
  3195   012A8C                     _getch:
  3196                           	callstack 28
  3197   012A8C                     
  3198                           ;uart_main.c: 84:     if(!PIR3bits.RC2IF){
  3199   012A8C  BAA4               	btfsc	164,5,c	;volatile
  3200   012A8E  EF4B  F095         	goto	u4691
  3201   012A92  EF4D  F095         	goto	u4690
  3202   012A96                     u4691:
  3203   012A96  EF53  F095         	goto	l433
  3204   012A9A                     u4690:
  3205   012A9A                     
  3206                           ;uart_main.c: 85:         return (char)0;
  3207   012A9A  0E00               	movlw	0
  3208   012A9C  6E03               	movwf	(?_getch+1)^0,c
  3209   012A9E  0E00               	movlw	0
  3210   012AA0  6E02               	movwf	?_getch^0,c
  3211   012AA2  EF56  F095         	goto	l434
  3212   012AA6                     l433:
  3213                           
  3214                           ;uart_main.c: 89:         return (int) RCREG2;
  3215   012AA6  CFAA F002          	movff	4010,?_getch	;volatile
  3216   012AAA  6A03               	clrf	(?_getch+1)^0,c
  3217   012AAC                     l434:
  3218   012AAC  0012               	return		;funcret
  3219   012AAE                     __end_of_getch:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _Xprintf *****************
  3223 ;; Defined at:
  3224 ;;		line 350 in file "uart_main.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  string          2    0[BANK0 ] PTR const unsigned char 
  3227 ;;		 -> STR_65(19), STR_64(19), STR_63(14), STR_62(14), 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  uint32value     4   18[BANK0 ] long 
  3230 ;;  floatvalue      4    8[BANK0 ] long 
  3231 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
  3232 ;;		 -> loginfo_buf(64), 
  3233 ;;  ap              2   22[BANK0 ] PTR void [1]
  3234 ;;		 -> ?_Xprintf(1), 
  3235 ;;  uintvalue       2   16[BANK0 ] unsigned short 
  3236 ;;  charvalue       2   14[BANK0 ] PTR unsigned char 
  3237 ;;		 -> ?_printf(2), ?_Xprintf(1), loginfo_buf(64), intbuf(2), 
  3238 ;;		 -> log_dt(584), Deb_menue02(30), Deb_menue01(150), Deb_menue00(270), 
  3239 ;;  intvalue        2   12[BANK0 ] int 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3249 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;Total ram usage:       26 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 10
  3256 ;; This function calls:
  3257 ;;		_my_putchar
  3258 ;;		_my_putfloat
  3259 ;;		_my_putint
  3260 ;;		_my_puts
  3261 ;;		_my_putshex
  3262 ;;		_my_putshex32
  3263 ;;		_printf
  3264 ;;		_putstring
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text4
  3271   01110E                     __ptext4:
  3272                           	callstack 0
  3273   01110E                     _Xprintf:
  3274                           	callstack 20
  3275   01110E                     
  3276                           ;uart_main.c: 350: void Xprintf(const char *string, ...);uart_main.c: 351: {;uart_main.c
      +                          : 352:  va_list ap;;uart_main.c: 353:  char *buffer;;uart_main.c: 354:     int intvalue;
      +                          ;uart_main.c: 355:     char *charvalue;;uart_main.c: 356:     uint16_t uintvalue;;uart_m
      +                          ain.c: 357:     long uint32value;;uart_main.c: 358:     double floatvalue;;uart_main.c: 
      +                          361:         *ap = __va_start();
  3277   01110E  0EB5               	movlw	low (?_Xprintf+2)
  3278   011110  0100               	movlb	0	; () banked
  3279   011112  6FC9               	movwf	Xprintf@ap& (0+255),b
  3280   011114  0E00               	movlw	high (?_Xprintf+2)
  3281   011116  6FCA               	movwf	(Xprintf@ap+1)& (0+255),b
  3282                           
  3283                           ;uart_main.c: 363:         buffer = (char *)loginfo_buf;
  3284   011118  0E00               	movlw	low _loginfo_buf
  3285   01111A  6FCB               	movwf	Xprintf@buffer& (0+255),b
  3286   01111C  0E01               	movlw	high _loginfo_buf
  3287   01111E  6FCC               	movwf	(Xprintf@buffer+1)& (0+255),b
  3288                           
  3289                           ;uart_main.c: 364:         while (*string != '\0') {
  3290   011120  EFBC  F089         	goto	l5354
  3291   011124                     l5308:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;uart_main.c: 365:             if (*string == '%') {
  3295   011124  C0B3  FFF6         	movff	Xprintf@string,tblptrl
  3296   011128  C0B4  FFF7         	movff	Xprintf@string+1,tblptrh
  3297   01112C                     	if	0	;tblptru may be non-zero
  3298   01112C                     	endif
  3299   01112C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3300   01112C  0E00               	movlw	low (__mediumconst shr (0+16))
  3301   01112E  6EF8               	movwf	tblptru,c
  3302   011130                     	endif
  3303   011130  0008               	tblrd		*
  3304   011132  50F5               	movf	tablat,w,c
  3305   011134  0A25               	xorlw	37
  3306   011136  A4D8               	btfss	status,2,c
  3307   011138  EFA0  F088         	goto	u4881
  3308   01113C  EFA2  F088         	goto	u4880
  3309   011140                     u4881:
  3310   011140  EFA7  F089         	goto	l5350
  3311   011144                     u4880:
  3312   011144                     
  3313                           ; BSR set to: 0
  3314                           ;uart_main.c: 366:                 string++;
  3315   011144  4BB3               	infsnz	Xprintf@string& (0+255),f,b
  3316   011146  2BB4               	incf	(Xprintf@string+1)& (0+255),f,b
  3317                           
  3318                           ;uart_main.c: 367:                 switch (*string ){
  3319   011148  EF7F  F089         	goto	l5348
  3320   01114C                     l5312:
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;uart_main.c: 369:                         intvalue = (*(int *)__va_arg(*(int **)ap, (in
      +                          t)0));
  3324   01114C  C0C9  FFD9         	movff	Xprintf@ap,fsr2l
  3325   011150  C0CA  FFDA         	movff	Xprintf@ap+1,fsr2h
  3326   011154  CFDE F0BF          	movff	postinc2,Xprintf@intvalue
  3327   011158  CFDD F0C0          	movff	postdec2,Xprintf@intvalue+1
  3328   01115C                     
  3329                           ; BSR set to: 0
  3330   01115C  0E02               	movlw	2
  3331   01115E  27C9               	addwf	Xprintf@ap& (0+255),f,b
  3332   011160  0E00               	movlw	0
  3333   011162  23CA               	addwfc	(Xprintf@ap+1)& (0+255),f,b
  3334   011164                     
  3335                           ; BSR set to: 0
  3336                           ;uart_main.c: 371:                         buffer = my_putint(intvalue, buffer);
  3337   011164  C0BF  F00A         	movff	Xprintf@intvalue,my_putint@num
  3338   011168  C0C0  F00B         	movff	Xprintf@intvalue+1,my_putint@num+1
  3339   01116C  C0CB  F00C         	movff	Xprintf@buffer,my_putint@buf
  3340   011170  C0CC  F00D         	movff	Xprintf@buffer+1,my_putint@buf+1
  3341   011174  EC0E  F08E         	call	_my_putint	;wreg free
  3342   011178  C00A  F0CB         	movff	?_my_putint,Xprintf@buffer
  3343   01117C  C00B  F0CC         	movff	?_my_putint+1,Xprintf@buffer+1
  3344                           
  3345                           ;uart_main.c: 372:                         break;
  3346   011180  EFB9  F089         	goto	l5352
  3347   011184                     l5318:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;uart_main.c: 374:                         floatvalue = (*(double *)__va_arg(*(double **
      +                          )ap, (double)0));
  3351   011184  C0C9  FFD9         	movff	Xprintf@ap,fsr2l
  3352   011188  C0CA  FFDA         	movff	Xprintf@ap+1,fsr2h
  3353   01118C  CFDE F0BB          	movff	postinc2,Xprintf@floatvalue
  3354   011190  CFDE F0BC          	movff	postinc2,Xprintf@floatvalue+1
  3355   011194  CFDE F0BD          	movff	postinc2,Xprintf@floatvalue+2
  3356   011198  CFDE F0BE          	movff	postinc2,Xprintf@floatvalue+3
  3357   01119C                     
  3358                           ; BSR set to: 0
  3359   01119C  0E04               	movlw	4
  3360   01119E  27C9               	addwf	Xprintf@ap& (0+255),f,b
  3361   0111A0  0E00               	movlw	0
  3362   0111A2  23CA               	addwfc	(Xprintf@ap+1)& (0+255),f,b
  3363   0111A4                     
  3364                           ; BSR set to: 0
  3365                           ;uart_main.c: 375:                         buffer = my_putfloat(floatvalue, 2, buffer );
  3366   0111A4  C0BB  F01B         	movff	Xprintf@floatvalue,my_putfloat@num
  3367   0111A8  C0BC  F01C         	movff	Xprintf@floatvalue+1,my_putfloat@num+1
  3368   0111AC  C0BD  F01D         	movff	Xprintf@floatvalue+2,my_putfloat@num+2
  3369   0111B0  C0BE  F01E         	movff	Xprintf@floatvalue+3,my_putfloat@num+3
  3370   0111B4  0E00               	movlw	0
  3371   0111B6  6E20               	movwf	(my_putfloat@precision+1)^0,c
  3372   0111B8  0E02               	movlw	2
  3373   0111BA  6E1F               	movwf	my_putfloat@precision^0,c
  3374   0111BC  C0CB  F021         	movff	Xprintf@buffer,my_putfloat@buf
  3375   0111C0  C0CC  F022         	movff	Xprintf@buffer+1,my_putfloat@buf+1
  3376   0111C4  ECD8  F08A         	call	_my_putfloat	;wreg free
  3377   0111C8  C01B  F0CB         	movff	?_my_putfloat,Xprintf@buffer
  3378   0111CC  C01C  F0CC         	movff	?_my_putfloat+1,Xprintf@buffer+1
  3379                           
  3380                           ;uart_main.c: 376:                         break;
  3381   0111D0  EFB9  F089         	goto	l5352
  3382   0111D4                     l5324:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;uart_main.c: 378:                         charvalue = (*(char* *)__va_arg(*(char* **)ap
      +                          , (char*)0));
  3386   0111D4  C0C9  FFD9         	movff	Xprintf@ap,fsr2l
  3387   0111D8  C0CA  FFDA         	movff	Xprintf@ap+1,fsr2h
  3388   0111DC  CFDE F0C1          	movff	postinc2,Xprintf@charvalue
  3389   0111E0  CFDD F0C2          	movff	postdec2,Xprintf@charvalue+1
  3390   0111E4                     
  3391                           ; BSR set to: 0
  3392   0111E4  0E02               	movlw	2
  3393   0111E6  27C9               	addwf	Xprintf@ap& (0+255),f,b
  3394   0111E8  0E00               	movlw	0
  3395   0111EA  23CA               	addwfc	(Xprintf@ap+1)& (0+255),f,b
  3396   0111EC                     
  3397                           ; BSR set to: 0
  3398                           ;uart_main.c: 379:                         buffer = my_puts(charvalue, buffer );
  3399   0111EC  C0C1  F005         	movff	Xprintf@charvalue,my_puts@str
  3400   0111F0  C0C2  F006         	movff	Xprintf@charvalue+1,my_puts@str+1
  3401   0111F4  C0CB  F007         	movff	Xprintf@buffer,my_puts@buf
  3402   0111F8  C0CC  F008         	movff	Xprintf@buffer+1,my_puts@buf+1
  3403   0111FC  EC42  F093         	call	_my_puts	;wreg free
  3404   011200  C005  F0CB         	movff	?_my_puts,Xprintf@buffer
  3405   011204  C006  F0CC         	movff	?_my_puts+1,Xprintf@buffer+1
  3406                           
  3407                           ;uart_main.c: 380:                         break;
  3408   011208  EFB9  F089         	goto	l5352
  3409   01120C                     l5330:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;uart_main.c: 382:                         uintvalue = (uint16_t)(*(int *)__va_arg(*(int
      +                           **)ap, (int)0));
  3413   01120C  C0C9  FFD9         	movff	Xprintf@ap,fsr2l
  3414   011210  C0CA  FFDA         	movff	Xprintf@ap+1,fsr2h
  3415   011214  CFDE F0C3          	movff	postinc2,Xprintf@uintvalue
  3416   011218  CFDD F0C4          	movff	postdec2,Xprintf@uintvalue+1
  3417   01121C                     
  3418                           ; BSR set to: 0
  3419   01121C  0E02               	movlw	2
  3420   01121E  27C9               	addwf	Xprintf@ap& (0+255),f,b
  3421   011220  0E00               	movlw	0
  3422   011222  23CA               	addwfc	(Xprintf@ap+1)& (0+255),f,b
  3423   011224                     
  3424                           ; BSR set to: 0
  3425                           ;uart_main.c: 384:                         buffer = my_putshex(uintvalue, 0, buffer );
  3426   011224  C0C3  F002         	movff	Xprintf@uintvalue,my_putshex@dt
  3427   011228  C0C4  F003         	movff	Xprintf@uintvalue+1,my_putshex@dt+1
  3428   01122C  0E00               	movlw	0
  3429   01122E  6E04               	movwf	my_putshex@flg^0,c
  3430   011230  C0CB  F005         	movff	Xprintf@buffer,my_putshex@buf
  3431   011234  C0CC  F006         	movff	Xprintf@buffer+1,my_putshex@buf+1
  3432   011238  ECDB  F086         	call	_my_putshex	;wreg free
  3433   01123C  C002  F0CB         	movff	?_my_putshex,Xprintf@buffer
  3434   011240  C003  F0CC         	movff	?_my_putshex+1,Xprintf@buffer+1
  3435                           
  3436                           ;uart_main.c: 385:                         break;
  3437   011244  EFB9  F089         	goto	l5352
  3438   011248                     l5336:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;uart_main.c: 387:                         uint32value = (long)(*(long *)__va_arg(*(long
      +                           **)ap, (long)0));
  3442   011248  C0C9  FFD9         	movff	Xprintf@ap,fsr2l
  3443   01124C  C0CA  FFDA         	movff	Xprintf@ap+1,fsr2h
  3444   011250  CFDE F0C5          	movff	postinc2,Xprintf@uint32value
  3445   011254  CFDE F0C6          	movff	postinc2,Xprintf@uint32value+1
  3446   011258  CFDE F0C7          	movff	postinc2,Xprintf@uint32value+2
  3447   01125C  CFDE F0C8          	movff	postinc2,Xprintf@uint32value+3
  3448   011260                     
  3449                           ; BSR set to: 0
  3450   011260  0E04               	movlw	4
  3451   011262  27C9               	addwf	Xprintf@ap& (0+255),f,b
  3452   011264  0E00               	movlw	0
  3453   011266  23CA               	addwfc	(Xprintf@ap+1)& (0+255),f,b
  3454   011268                     
  3455                           ; BSR set to: 0
  3456                           ;uart_main.c: 388:                         printf("uintvalue=%lx\r\n",uint32value);
  3457   011268  0E3D               	movlw	low STR_66
  3458   01126A  6E4E               	movwf	printf@fmt^0,c
  3459   01126C  0EFF               	movlw	high STR_66
  3460   01126E  6E4F               	movwf	(printf@fmt+1)^0,c
  3461   011270  C0C5  F050         	movff	Xprintf@uint32value,?_printf+2
  3462   011274  C0C6  F051         	movff	Xprintf@uint32value+1,?_printf+3
  3463   011278  C0C7  F052         	movff	Xprintf@uint32value+2,?_printf+4
  3464   01127C  C0C8  F053         	movff	Xprintf@uint32value+3,?_printf+5
  3465   011280  EC20  F095         	call	_printf	;wreg free
  3466   011284                     
  3467                           ;uart_main.c: 389:                         buffer = my_putshex32((long)uint32value, buff
      +                          er );
  3468   011284  C0C5  F002         	movff	Xprintf@uint32value,my_putshex32@dt
  3469   011288  C0C6  F003         	movff	Xprintf@uint32value+1,my_putshex32@dt+1
  3470   01128C  C0C7  F004         	movff	Xprintf@uint32value+2,my_putshex32@dt+2
  3471   011290  C0C8  F005         	movff	Xprintf@uint32value+3,my_putshex32@dt+3
  3472   011294  C0CB  F006         	movff	Xprintf@buffer,my_putshex32@buf
  3473   011298  C0CC  F007         	movff	Xprintf@buffer+1,my_putshex32@buf+1
  3474   01129C  ECB2  F08E         	call	_my_putshex32	;wreg free
  3475   0112A0  C002  F0CB         	movff	?_my_putshex32,Xprintf@buffer
  3476   0112A4  C003  F0CC         	movff	?_my_putshex32+1,Xprintf@buffer+1
  3477                           
  3478                           ;uart_main.c: 390:                         break;
  3479   0112A8  EFB9  F089         	goto	l5352
  3480   0112AC                     l5344:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;uart_main.c: 392:                         buffer = my_puts('%', buffer );
  3484   0112AC  0E25               	movlw	37
  3485   0112AE  6E05               	movwf	my_puts@str^0,c
  3486   0112B0  0E00               	movlw	0
  3487   0112B2  6E06               	movwf	(my_puts@str+1)^0,c
  3488   0112B4  C0CB  F007         	movff	Xprintf@buffer,my_puts@buf
  3489   0112B8  C0CC  F008         	movff	Xprintf@buffer+1,my_puts@buf+1
  3490   0112BC  EC42  F093         	call	_my_puts	;wreg free
  3491   0112C0  C005  F0CB         	movff	?_my_puts,Xprintf@buffer
  3492   0112C4  C006  F0CC         	movff	?_my_puts+1,Xprintf@buffer+1
  3493                           
  3494                           ;uart_main.c: 393:                         buffer = my_puts(*string, buffer );
  3495   0112C8  C0B3  FFF6         	movff	Xprintf@string,tblptrl
  3496   0112CC  C0B4  FFF7         	movff	Xprintf@string+1,tblptrh
  3497   0112D0                     	if	0	;tblptru may be non-zero
  3498   0112D0                     	endif
  3499   0112D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3500   0112D0  0E00               	movlw	low (__mediumconst shr (0+16))
  3501   0112D2  6EF8               	movwf	tblptru,c
  3502   0112D4                     	endif
  3503   0112D4  0008               	tblrd		*
  3504   0112D6  50F5               	movf	tablat,w,c
  3505   0112D8  0100               	movlb	0	; () banked
  3506   0112DA  6FB9               	movwf	??_Xprintf& (0+255),b
  3507   0112DC  6BBA               	clrf	(??_Xprintf+1)& (0+255),b
  3508   0112DE  C0B9  F005         	movff	??_Xprintf,my_puts@str
  3509   0112E2  C0BA  F006         	movff	??_Xprintf+1,my_puts@str+1
  3510   0112E6  C0CB  F007         	movff	Xprintf@buffer,my_puts@buf
  3511   0112EA  C0CC  F008         	movff	Xprintf@buffer+1,my_puts@buf+1
  3512   0112EE  EC42  F093         	call	_my_puts	;wreg free
  3513   0112F2  C005  F0CB         	movff	?_my_puts,Xprintf@buffer
  3514   0112F6  C006  F0CC         	movff	?_my_puts+1,Xprintf@buffer+1
  3515                           
  3516                           ;uart_main.c: 394:                         break;
  3517   0112FA  EFB9  F089         	goto	l5352
  3518   0112FE                     l5348:
  3519                           
  3520                           ; BSR set to: 0
  3521   0112FE  C0B3  FFF6         	movff	Xprintf@string,tblptrl
  3522   011302  C0B4  FFF7         	movff	Xprintf@string+1,tblptrh
  3523   011306                     	if	0	;tblptru may be non-zero
  3524   011306                     	endif
  3525   011306                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3526   011306  0E00               	movlw	low (__mediumconst shr (0+16))
  3527   011308  6EF8               	movwf	tblptru,c
  3528   01130A                     	endif
  3529   01130A  0008               	tblrd		*
  3530   01130C  50F5               	movf	tablat,w,c
  3531   01130E  6FB9               	movwf	??_Xprintf& (0+255),b
  3532   011310  6BBA               	clrf	(??_Xprintf+1)& (0+255),b
  3533                           
  3534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3535                           ; Switch size 1, requested type "simple"
  3536                           ; Number of cases is 1, Range of values is 0 to 0
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            4     3 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541   011312  51BA               	movf	(??_Xprintf+1)& (0+255),w,b
  3542   011314  0A00               	xorlw	0	; case 0
  3543   011316  B4D8               	btfsc	status,2,c
  3544   011318  EF90  F089         	goto	l5656
  3545   01131C  EF56  F089         	goto	l5344
  3546   011320                     l5656:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ; Switch size 1, requested type "simple"
  3550                           ; Number of cases is 5, Range of values is 100 to 120
  3551                           ; switch strategies available:
  3552                           ; Name         Instructions Cycles
  3553                           ; simple_byte           16     9 (average)
  3554                           ;	Chosen strategy is simple_byte
  3555   011320  51B9               	movf	??_Xprintf& (0+255),w,b
  3556   011322  0A64               	xorlw	100	; case 100
  3557   011324  B4D8               	btfsc	status,2,c
  3558   011326  EFA6  F088         	goto	l5312
  3559   01132A  0A02               	xorlw	2	; case 102
  3560   01132C  B4D8               	btfsc	status,2,c
  3561   01132E  EFC2  F088         	goto	l5318
  3562   011332  0A16               	xorlw	22	; case 112
  3563   011334  B4D8               	btfsc	status,2,c
  3564   011336  EF24  F089         	goto	l5336
  3565   01133A  0A03               	xorlw	3	; case 115
  3566   01133C  B4D8               	btfsc	status,2,c
  3567   01133E  EFEA  F088         	goto	l5324
  3568   011342  0A0B               	xorlw	11	; case 120
  3569   011344  B4D8               	btfsc	status,2,c
  3570   011346  EF06  F089         	goto	l5330
  3571   01134A  EF56  F089         	goto	l5344
  3572   01134E                     l5350:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;uart_main.c: 398:                 buffer = my_putchar(*string, buffer );
  3576   01134E  C0CB  F002         	movff	Xprintf@buffer,my_putchar@buf
  3577   011352  C0CC  F003         	movff	Xprintf@buffer+1,my_putchar@buf+1
  3578   011356  C0B3  FFF6         	movff	Xprintf@string,tblptrl
  3579   01135A  C0B4  FFF7         	movff	Xprintf@string+1,tblptrh
  3580   01135E                     	if	0	;tblptru may be non-zero
  3581   01135E                     	endif
  3582   01135E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3583   01135E  0E00               	movlw	low (__mediumconst shr (0+16))
  3584   011360  6EF8               	movwf	tblptru,c
  3585   011362                     	endif
  3586   011362  0008               	tblrd		*
  3587   011364  50F5               	movf	tablat,w,c
  3588   011366  EC57  F095         	call	_my_putchar
  3589   01136A  C002  F0CB         	movff	?_my_putchar,Xprintf@buffer
  3590   01136E  C003  F0CC         	movff	?_my_putchar+1,Xprintf@buffer+1
  3591   011372                     l5352:
  3592                           
  3593                           ;uart_main.c: 400:             string++;
  3594   011372  0100               	movlb	0	; () banked
  3595   011374  4BB3               	infsnz	Xprintf@string& (0+255),f,b
  3596   011376  2BB4               	incf	(Xprintf@string+1)& (0+255),f,b
  3597   011378                     l5354:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;uart_main.c: 364:         while (*string != '\0') {
  3601   011378  C0B3  FFF6         	movff	Xprintf@string,tblptrl
  3602   01137C  C0B4  FFF7         	movff	Xprintf@string+1,tblptrh
  3603   011380                     	if	0	;tblptru may be non-zero
  3604   011380                     	endif
  3605   011380                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3606   011380  0E00               	movlw	low (__mediumconst shr (0+16))
  3607   011382  6EF8               	movwf	tblptru,c
  3608   011384                     	endif
  3609   011384  0008               	tblrd		*
  3610   011386  50F5               	movf	tablat,w,c
  3611   011388  0900               	iorlw	0
  3612   01138A  A4D8               	btfss	status,2,c
  3613   01138C  EFCA  F089         	goto	u4891
  3614   011390  EFCC  F089         	goto	u4890
  3615   011394                     u4891:
  3616   011394  EF92  F088         	goto	l5308
  3617   011398                     u4890:
  3618   011398                     
  3619                           ; BSR set to: 0
  3620                           ;uart_main.c: 403:         *buffer = '\0';
  3621   011398  C0CB  FFD9         	movff	Xprintf@buffer,fsr2l
  3622   01139C  C0CC  FFDA         	movff	Xprintf@buffer+1,fsr2h
  3623   0113A0  6ADF               	clrf	indf2,c
  3624   0113A2                     
  3625                           ; BSR set to: 0
  3626                           ;uart_main.c: 405:         putstring(loginfo_buf);
  3627   0113A2  0E00               	movlw	low _loginfo_buf
  3628   0113A4  6E03               	movwf	putstring@c^0,c
  3629   0113A6  0E01               	movlw	high _loginfo_buf
  3630   0113A8  6E04               	movwf	(putstring@c+1)^0,c
  3631   0113AA  EC84  F093         	call	_putstring	;wreg free
  3632   0113AE  0012               	return		;funcret
  3633   0113B0                     __end_of_Xprintf:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _putstring *****************
  3637 ;; Defined at:
  3638 ;;		line 64 in file "uart_main.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  c               2    2[COMRAM] PTR unsigned char 
  3641 ;;		 -> loginfo_buf(64), STR_61(15), STR_60(15), 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  i               2    6[COMRAM] int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3657 ;;Total ram usage:        6 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 3
  3660 ;; This function calls:
  3661 ;;		_putch
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;;		_Xprintf
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text5
  3669   012708                     __ptext5:
  3670                           	callstack 0
  3671   012708                     _putstring:
  3672                           	callstack 27
  3673   012708                     
  3674                           ;uart_main.c: 64: void putstring(char *c);uart_main.c: 65: {;uart_main.c: 66:     int i=
      +                          0;
  3675   012708  0E00               	movlw	0
  3676   01270A  6E08               	movwf	(putstring@i+1)^0,c
  3677   01270C  0E00               	movlw	0
  3678   01270E  6E07               	movwf	putstring@i^0,c
  3679                           
  3680                           ;uart_main.c: 68:     while(c[i] != '\0'){
  3681   012710  EFA5  F093         	goto	l4402
  3682   012714                     l4398:
  3683                           
  3684                           ;uart_main.c: 69:         putch(c[i]);
  3685   012714  5007               	movf	putstring@i^0,w,c
  3686   012716  2403               	addwf	putstring@c^0,w,c
  3687   012718  6E05               	movwf	??_putstring^0,c
  3688   01271A  5008               	movf	(putstring@i+1)^0,w,c
  3689   01271C  2004               	addwfc	(putstring@c+1)^0,w,c
  3690   01271E  6E06               	movwf	(??_putstring+1)^0,c
  3691   012720  C005  FFF6         	movff	??_putstring,tblptrl
  3692   012724  C006  FFF7         	movff	??_putstring+1,tblptrh
  3693   012728  0E00               	movlw	low (__mediumconst shr (0+16))
  3694   01272A  6EF8               	movwf	tblptru,c
  3695   01272C  0E0F               	movlw	(high __ramtop+-1)
  3696   01272E  64F7               	cpfsgt	tblptrh,c
  3697   012730  D003               	bra	u4247
  3698   012732  0008               	tblrd		*
  3699   012734  50F5               	movf	tablat,w,c
  3700   012736  D005               	bra	u4240
  3701   012738                     u4247:
  3702   012738  CFF6 FFE9          	movff	tblptrl,fsr0l
  3703   01273C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3704   012740  50EF               	movf	indf0,w,c
  3705   012742                     u4240:
  3706   012742  EC71  F095         	call	_putch
  3707   012746                     
  3708                           ;uart_main.c: 70:         i++;
  3709   012746  4A07               	infsnz	putstring@i^0,f,c
  3710   012748  2A08               	incf	(putstring@i+1)^0,f,c
  3711   01274A                     l4402:
  3712                           
  3713                           ;uart_main.c: 68:     while(c[i] != '\0'){
  3714   01274A  5007               	movf	putstring@i^0,w,c
  3715   01274C  2403               	addwf	putstring@c^0,w,c
  3716   01274E  6E05               	movwf	??_putstring^0,c
  3717   012750  5008               	movf	(putstring@i+1)^0,w,c
  3718   012752  2004               	addwfc	(putstring@c+1)^0,w,c
  3719   012754  6E06               	movwf	(??_putstring+1)^0,c
  3720   012756  C005  FFF6         	movff	??_putstring,tblptrl
  3721   01275A  C006  FFF7         	movff	??_putstring+1,tblptrh
  3722   01275E  0E00               	movlw	low (__mediumconst shr (0+16))
  3723   012760  6EF8               	movwf	tblptru,c
  3724   012762  0E0F               	movlw	(high __ramtop+-1)
  3725   012764  64F7               	cpfsgt	tblptrh,c
  3726   012766  D003               	bra	u4257
  3727   012768  0008               	tblrd		*
  3728   01276A  50F5               	movf	tablat,w,c
  3729   01276C  D005               	bra	u4250
  3730   01276E                     u4257:
  3731   01276E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3732   012772  CFF7 FFEA          	movff	tblptrh,fsr0h
  3733   012776  50EF               	movf	indf0,w,c
  3734   012778                     u4250:
  3735   012778  0900               	iorlw	0
  3736   01277A  A4D8               	btfss	status,2,c
  3737   01277C  EFC2  F093         	goto	u4261
  3738   012780  EFC4  F093         	goto	u4260
  3739   012784                     u4261:
  3740   012784  EF8A  F093         	goto	l4398
  3741   012788                     u4260:
  3742   012788  0012               	return		;funcret
  3743   01278A                     __end_of_putstring:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _printf *****************
  3747 ;; Defined at:
  3748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  fmt             2   77[COMRAM] PTR const unsigned char 
  3751 ;;		 -> STR_66(16), STR_59(26), STR_58(22), STR_57(22), 
  3752 ;;		 -> STR_56(22), STR_55(26), STR_54(26), STR_53(22), 
  3753 ;;		 -> STR_52(22), STR_51(22), STR_50(26), STR_49(52), 
  3754 ;;		 -> STR_48(52), STR_47(52), STR_46(20), STR_45(20), 
  3755 ;;		 -> STR_44(20), STR_43(20), STR_42(29), STR_41(21), 
  3756 ;;		 -> STR_40(20), STR_39(20), STR_38(30), STR_37(20), 
  3757 ;;		 -> STR_36(19), STR_35(19), STR_34(19), STR_33(19), 
  3758 ;;		 -> STR_32(24), STR_31(22), STR_30(21), STR_29(21), 
  3759 ;;		 -> STR_28(21), STR_27(22), STR_26(21), STR_25(21), 
  3760 ;;		 -> STR_24(21), STR_23(23), STR_22(3), STR_21(22), 
  3761 ;;		 -> STR_20(12), STR_19(14), STR_18(15), STR_17(13), 
  3762 ;;		 -> STR_15(3), STR_14(4), STR_13(5), STR_12(7), 
  3763 ;;		 -> STR_11(22), STR_10(5), STR_9(10), STR_8(15), 
  3764 ;;		 -> STR_7(22), STR_6(6), STR_5(32), STR_4(14), 
  3765 ;;		 -> STR_3(16), STR_2(3), 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  ap              2   89[COMRAM] PTR void [1]
  3768 ;;		 -> ?_printf(2), 
  3769 ;;  ret             2    0        int 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  2   77[COMRAM] int 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3779 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;Total ram usage:       14 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 9
  3786 ;; This function calls:
  3787 ;;		_vfprintf
  3788 ;; This function is called by:
  3789 ;;		_Xprintf
  3790 ;;		_DispLogData
  3791 ;;		_uart_start_dispg
  3792 ;;		_DispMenue
  3793 ;;		_read_line_streem
  3794 ;;		_debug_main
  3795 ;;		_RegiDisp
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text6
  3800   012A40                     __ptext6:
  3801                           	callstack 0
  3802   012A40                     _printf:
  3803                           	callstack 20
  3804   012A40  0E50               	movlw	low (?_printf+2)
  3805   012A42  6E5A               	movwf	printf@ap^0,c
  3806   012A44  0E00               	movlw	high (?_printf+2)
  3807   012A46  6E5B               	movwf	(printf@ap+1)^0,c
  3808   012A48  0E00               	movlw	0
  3809   012A4A  6E46               	movwf	vfprintf@fp^0,c
  3810   012A4C  0E00               	movlw	0
  3811   012A4E  6E47               	movwf	(vfprintf@fp+1)^0,c
  3812   012A50  C04E  F048         	movff	printf@fmt,vfprintf@fmt
  3813   012A54  C04F  F049         	movff	printf@fmt+1,vfprintf@fmt+1
  3814   012A58  0E5A               	movlw	low printf@ap
  3815   012A5A  6E4A               	movwf	vfprintf@ap^0,c
  3816   012A5C  0E00               	movlw	high printf@ap
  3817   012A5E  6E4B               	movwf	(vfprintf@ap+1)^0,c
  3818   012A60  EC1D  F094         	call	_vfprintf	;wreg free
  3819   012A64  0012               	return		;funcret
  3820   012A66                     __end_of_printf:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _vfprintf *****************
  3824 ;; Defined at:
  3825 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3828 ;;		 -> NULL(0), 
  3829 ;;  fmt             2   71[COMRAM] PTR const unsigned char 
  3830 ;;		 -> STR_66(16), STR_59(26), STR_58(22), STR_57(22), 
  3831 ;;		 -> STR_56(22), STR_55(26), STR_54(26), STR_53(22), 
  3832 ;;		 -> STR_52(22), STR_51(22), STR_50(26), STR_49(52), 
  3833 ;;		 -> STR_48(52), STR_47(52), STR_46(20), STR_45(20), 
  3834 ;;		 -> STR_44(20), STR_43(20), STR_42(29), STR_41(21), 
  3835 ;;		 -> STR_40(20), STR_39(20), STR_38(30), STR_37(20), 
  3836 ;;		 -> STR_36(19), STR_35(19), STR_34(19), STR_33(19), 
  3837 ;;		 -> STR_32(24), STR_31(22), STR_30(21), STR_29(21), 
  3838 ;;		 -> STR_28(21), STR_27(22), STR_26(21), STR_25(21), 
  3839 ;;		 -> STR_24(21), STR_23(23), STR_22(3), STR_21(22), 
  3840 ;;		 -> STR_20(12), STR_19(14), STR_18(15), STR_17(13), 
  3841 ;;		 -> STR_15(3), STR_14(4), STR_13(5), STR_12(7), 
  3842 ;;		 -> STR_11(22), STR_10(5), STR_9(10), STR_8(15), 
  3843 ;;		 -> STR_7(22), STR_6(6), STR_5(32), STR_4(14), 
  3844 ;;		 -> STR_3(16), STR_2(3), 
  3845 ;;  ap              2   73[COMRAM] PTR PTR void 
  3846 ;;		 -> printf@ap(2), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
  3849 ;;		 -> STR_66(16), STR_59(26), STR_58(22), STR_57(22), 
  3850 ;;		 -> STR_56(22), STR_55(26), STR_54(26), STR_53(22), 
  3851 ;;		 -> STR_52(22), STR_51(22), STR_50(26), STR_49(52), 
  3852 ;;		 -> STR_48(52), STR_47(52), STR_46(20), STR_45(20), 
  3853 ;;		 -> STR_44(20), STR_43(20), STR_42(29), STR_41(21), 
  3854 ;;		 -> STR_40(20), STR_39(20), STR_38(30), STR_37(20), 
  3855 ;;		 -> STR_36(19), STR_35(19), STR_34(19), STR_33(19), 
  3856 ;;		 -> STR_32(24), STR_31(22), STR_30(21), STR_29(21), 
  3857 ;;		 -> STR_28(21), STR_27(22), STR_26(21), STR_25(21), 
  3858 ;;		 -> STR_24(21), STR_23(23), STR_22(3), STR_21(22), 
  3859 ;;		 -> STR_20(12), STR_19(14), STR_18(15), STR_17(13), 
  3860 ;;		 -> STR_15(3), STR_14(4), STR_13(5), STR_12(7), 
  3861 ;;		 -> STR_11(22), STR_10(5), STR_9(10), STR_8(15), 
  3862 ;;		 -> STR_7(22), STR_6(6), STR_5(32), STR_4(14), 
  3863 ;;		 -> STR_3(16), STR_2(3), 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  2   69[COMRAM] int 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3873 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;Total ram usage:        8 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 8
  3880 ;; This function calls:
  3881 ;;		_vfpfcnvrt
  3882 ;; This function is called by:
  3883 ;;		_printf
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text7
  3888   01283A                     __ptext7:
  3889                           	callstack 0
  3890   01283A                     _vfprintf:
  3891                           	callstack 20
  3892   01283A                     
  3893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  3894   01283A  C048  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
  3895   01283E  C049  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3898   012842  EF31  F094         	goto	l4266
  3899   012846                     l4264:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3902   012846  C046  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
  3903   01284A  C047  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3904   01284E  0E4C               	movlw	low vfprintf@cfmt
  3905   012850  6E33               	movwf	vfpfcnvrt@fmt^0,c
  3906   012852  0E00               	movlw	high vfprintf@cfmt
  3907   012854  6E34               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3908   012856  C04A  F035         	movff	vfprintf@ap,vfpfcnvrt@ap
  3909   01285A  C04B  F036         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3910   01285E  EC00  F080         	call	_vfpfcnvrt	;wreg free
  3911   012862                     l4266:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  3914   012862  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
  3915   012866  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3916   01286A                     	if	0	;tblptru may be non-zero
  3917   01286A                     	endif
  3918   01286A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3919   01286A  0E00               	movlw	low (__mediumconst shr (0+16))
  3920   01286C  6EF8               	movwf	tblptru,c
  3921   01286E                     	endif
  3922   01286E  0008               	tblrd		*
  3923   012870  50F5               	movf	tablat,w,c
  3924   012872  0900               	iorlw	0
  3925   012874  A4D8               	btfss	status,2,c
  3926   012876  EF3F  F094         	goto	u3991
  3927   01287A  EF41  F094         	goto	u3990
  3928   01287E                     u3991:
  3929   01287E  EF23  F094         	goto	l4264
  3930   012882                     u3990:
  3931   012882                     
  3932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  3933   012882  0E00               	movlw	0
  3934   012884  6E47               	movwf	(?_vfprintf+1)^0,c
  3935   012886  0E00               	movlw	0
  3936   012888  6E46               	movwf	?_vfprintf^0,c
  3937   01288A  0012               	return		;funcret
  3938   01288C                     __end_of_vfprintf:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _vfpfcnvrt *****************
  3942 ;; Defined at:
  3943 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  fp              2   48[COMRAM] PTR struct _IO_FILE
  3946 ;;		 -> NULL(0), 
  3947 ;;  fmt             2   50[COMRAM] PTR PTR unsigned char 
  3948 ;;		 -> vfprintf@cfmt(2), 
  3949 ;;  ap              2   52[COMRAM] PTR PTR void 
  3950 ;;		 -> printf@ap(2), 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  convarg         4   62[COMRAM] struct .
  3953 ;;  cp              2   67[COMRAM] PTR unsigned char 
  3954 ;;		 -> STR_66(16), STR_59(26), STR_58(22), STR_57(22), 
  3955 ;;		 -> STR_56(22), STR_55(26), STR_54(26), STR_53(22), 
  3956 ;;		 -> STR_52(22), STR_51(22), STR_50(26), STR_49(52), 
  3957 ;;		 -> STR_48(52), STR_47(52), STR_46(20), STR_45(20), 
  3958 ;;		 -> STR_44(20), STR_43(20), STR_42(29), STR_41(21), 
  3959 ;;		 -> STR_40(20), STR_39(20), STR_38(30), STR_37(20), 
  3960 ;;		 -> STR_36(19), STR_35(19), STR_34(19), STR_33(19), 
  3961 ;;		 -> STR_32(24), STR_31(22), STR_30(21), STR_29(21), 
  3962 ;;		 -> STR_28(21), STR_27(22), STR_26(21), STR_25(21), 
  3963 ;;		 -> STR_24(21), STR_23(23), STR_22(3), STR_21(22), 
  3964 ;;		 -> STR_20(12), STR_19(14), STR_18(15), STR_17(13), 
  3965 ;;		 -> STR_15(3), STR_14(4), STR_13(5), STR_12(7), 
  3966 ;;		 -> STR_11(22), STR_10(5), STR_9(10), STR_8(15), 
  3967 ;;		 -> STR_7(22), STR_6(6), STR_5(32), STR_4(14), 
  3968 ;;		 -> STR_3(16), STR_2(3), 
  3969 ;;  done            2   58[COMRAM] int 
  3970 ;;  i               2    0        int 
  3971 ;;  c               1   66[COMRAM] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3981 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3982 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3983 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3984 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3985 ;;Total ram usage:       21 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 7
  3988 ;; This function calls:
  3989 ;;		_dtoa
  3990 ;;		_fputc
  3991 ;;		_read_prec_or_width
  3992 ;;		_stoa
  3993 ;;		_strncmp
  3994 ;;		_xtoa
  3995 ;; This function is called by:
  3996 ;;		_vfprintf
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text8
  4001   010000                     __ptext8:
  4002                           	callstack 0
  4003   010000                     _vfpfcnvrt:
  4004                           	callstack 20
  4005   010000                     
  4006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  4007   010000  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008   010004  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009   010008  CFDE FFF6          	movff	postinc2,tblptrl
  4010   01000C  CFDD FFF7          	movff	postdec2,tblptrh
  4011   010010                     	if	0	;tblptru may be non-zero
  4012   010010                     	endif
  4013   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4014   010010  0E00               	movlw	low (__mediumconst shr (0+16))
  4015   010012  6EF8               	movwf	tblptru,c
  4016   010014                     	endif
  4017   010014  0008               	tblrd		*
  4018   010016  50F5               	movf	tablat,w,c
  4019   010018  0A25               	xorlw	37
  4020   01001A  A4D8               	btfss	status,2,c
  4021   01001C  EF12  F080         	goto	u3501
  4022   010020  EF14  F080         	goto	u3500
  4023   010024                     u3501:
  4024   010024  EF4F  F082         	goto	l3932
  4025   010028                     u3500:
  4026   010028                     
  4027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  4028   010028  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4029   01002C  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4030   010030  2ADE               	incf	postinc2,f,c
  4031   010032  0E00               	movlw	0
  4032   010034  22DD               	addwfc	postdec2,f,c
  4033   010036                     
  4034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  4035   010036  0E00               	movlw	0
  4036   010038  0100               	movlb	0	; () banked
  4037   01003A  6F61               	movwf	(_width+1)& (0+255),b
  4038   01003C  0E00               	movlw	0
  4039   01003E  6F60               	movwf	_width& (0+255),b
  4040   010040  C060  F05C         	movff	_width,_flags
  4041   010044                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  4044   010044  6962               	setf	_prec& (0+255),b
  4045   010046  6963               	setf	(_prec+1)& (0+255),b
  4046   010048                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  4049   010048  0E00               	movlw	0
  4050   01004A  6E3C               	movwf	(vfpfcnvrt@done+1)^0,c
  4051   01004C  0E00               	movlw	0
  4052   01004E  6E3B               	movwf	vfpfcnvrt@done^0,c
  4053                           
  4054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  4055   010050  EF56  F080         	goto	l3852
  4056   010054                     l3842:
  4057                           
  4058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  4059   010054  825C               	bsf	_flags^0,1,c
  4060   010056                     
  4061                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  4062   010056  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4063   01005A  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4064   01005E  2ADE               	incf	postinc2,f,c
  4065   010060  0E00               	movlw	0
  4066   010062  22DD               	addwfc	postdec2,f,c
  4067                           
  4068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  4069   010064  EF56  F080         	goto	l3852
  4070   010068                     l3846:
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  4073   010068  0E00               	movlw	0
  4074   01006A  6E3C               	movwf	(vfpfcnvrt@done+1)^0,c
  4075   01006C  0E01               	movlw	1
  4076   01006E  6E3B               	movwf	vfpfcnvrt@done^0,c
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  4079   010070  EF56  F080         	goto	l3852
  4080   010074                     l3850:
  4081   010074  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4082   010078  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4083   01007C  CFDE FFF6          	movff	postinc2,tblptrl
  4084   010080  CFDD FFF7          	movff	postdec2,tblptrh
  4085   010084                     	if	0	;tblptru may be non-zero
  4086   010084                     	endif
  4087   010084                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4088   010084  0E00               	movlw	low (__mediumconst shr (0+16))
  4089   010086  6EF8               	movwf	tblptru,c
  4090   010088                     	endif
  4091   010088  0008               	tblrd		*
  4092   01008A  50F5               	movf	tablat,w,c
  4093   01008C  6E37               	movwf	??_vfpfcnvrt^0,c
  4094   01008E  6A38               	clrf	(??_vfpfcnvrt+1)^0,c
  4095                           
  4096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4097                           ; Switch size 1, requested type "simple"
  4098                           ; Number of cases is 1, Range of values is 0 to 0
  4099                           ; switch strategies available:
  4100                           ; Name         Instructions Cycles
  4101                           ; simple_byte            4     3 (average)
  4102                           ;	Chosen strategy is simple_byte
  4103   010090  5038               	movf	(??_vfpfcnvrt+1)^0,w,c
  4104   010092  0A00               	xorlw	0	; case 0
  4105   010094  B4D8               	btfsc	status,2,c
  4106   010096  EF4F  F080         	goto	l5658
  4107   01009A  EF34  F080         	goto	l3846
  4108   01009E                     l5658:
  4109                           
  4110                           ; Switch size 1, requested type "simple"
  4111                           ; Number of cases is 1, Range of values is 48 to 48
  4112                           ; switch strategies available:
  4113                           ; Name         Instructions Cycles
  4114                           ; simple_byte            4     3 (average)
  4115                           ;	Chosen strategy is simple_byte
  4116   01009E  5037               	movf	??_vfpfcnvrt^0,w,c
  4117   0100A0  0A30               	xorlw	48	; case 48
  4118   0100A2  B4D8               	btfsc	status,2,c
  4119   0100A4  EF2A  F080         	goto	l3842
  4120   0100A8  EF34  F080         	goto	l3846
  4121   0100AC                     l3852:
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  4124   0100AC  503B               	movf	vfpfcnvrt@done^0,w,c
  4125   0100AE  103C               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4126   0100B0  B4D8               	btfsc	status,2,c
  4127   0100B2  EF5D  F080         	goto	u3511
  4128   0100B6  EF5F  F080         	goto	u3510
  4129   0100BA                     u3511:
  4130   0100BA  EF3A  F080         	goto	l3850
  4131   0100BE                     u3510:
  4132   0100BE                     
  4133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  4134   0100BE  C033  F008         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  4135   0100C2  C034  F009         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  4136   0100C6  C035  F00A         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  4137   0100CA  C036  F00B         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  4138   0100CE  ECBF  F091         	call	_read_prec_or_width	;wreg free
  4139   0100D2  C008  F060         	movff	?_read_prec_or_width,_width
  4140   0100D6  C009  F061         	movff	?_read_prec_or_width+1,_width+1
  4141   0100DA                     
  4142                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  4143   0100DA  0100               	movlb	0	; () banked
  4144   0100DC  BF61               	btfsc	(_width+1)& (0+255),7,b
  4145   0100DE  EF75  F080         	goto	u3520
  4146   0100E2  EF73  F080         	goto	u3521
  4147   0100E6                     u3521:
  4148   0100E6  EF7A  F080         	goto	l3860
  4149   0100EA                     u3520:
  4150   0100EA                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  4153   0100EA  805C               	bsf	_flags^0,0,c
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  4156   0100EC  6D60               	negf	_width& (0+255),b
  4157   0100EE  1F61               	comf	(_width+1)& (0+255),f,b
  4158   0100F0  B0D8               	btfsc	status,0,c
  4159   0100F2  2B61               	incf	(_width+1)& (0+255),f,b
  4160   0100F4                     l3860:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  4164   0100F4  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4165   0100F8  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4166   0100FC  CFDE F044          	movff	postinc2,vfpfcnvrt@cp
  4167   010100  CFDD F045          	movff	postdec2,vfpfcnvrt@cp+1
  4168   010104                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1145:   c = *cp;
  4171   010104  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4172   010108  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4173   01010C                     	if	0	;tblptru may be non-zero
  4174   01010C                     	endif
  4175   01010C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4176   01010C  0E00               	movlw	low (__mediumconst shr (0+16))
  4177   01010E  6EF8               	movwf	tblptru,c
  4178   010110                     	endif
  4179   010110  0008               	tblrd		*
  4180   010112  CFF5 F043          	movff	tablat,vfpfcnvrt@c
  4181                           
  4182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1146:   switch(c)
      +                           {
  4183   010116  EF99  F080         	goto	l3872
  4184   01011A                     l3864:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1161:     cp++;
  4188   01011A  4A44               	infsnz	vfpfcnvrt@cp^0,f,c
  4189   01011C  2A45               	incf	(vfpfcnvrt@cp+1)^0,f,c
  4190                           
  4191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1168:     break;
  4192   01011E  EFB6  F080         	goto	l3874
  4193   010122                     l3866:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1202:     c = 'i'
      +                          ;
  4197   010122  0E69               	movlw	105
  4198   010124  6E43               	movwf	vfpfcnvrt@c^0,c
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1203:     break;
  4201   010126  EFB6  F080         	goto	l3874
  4202   01012A                     l3868:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1205:     c = 0;
  4206   01012A  0E00               	movlw	0
  4207   01012C  6E43               	movwf	vfpfcnvrt@c^0,c
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1206:     break;
  4210   01012E  EFB6  F080         	goto	l3874
  4211   010132                     l3872:
  4212                           
  4213                           ; BSR set to: 0
  4214   010132  5043               	movf	vfpfcnvrt@c^0,w,c
  4215   010134  6E37               	movwf	??_vfpfcnvrt^0,c
  4216   010136  6A38               	clrf	(??_vfpfcnvrt+1)^0,c
  4217                           
  4218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4219                           ; Switch size 1, requested type "simple"
  4220                           ; Number of cases is 1, Range of values is 0 to 0
  4221                           ; switch strategies available:
  4222                           ; Name         Instructions Cycles
  4223                           ; simple_byte            4     3 (average)
  4224                           ;	Chosen strategy is simple_byte
  4225   010138  5038               	movf	(??_vfpfcnvrt+1)^0,w,c
  4226   01013A  0A00               	xorlw	0	; case 0
  4227   01013C  B4D8               	btfsc	status,2,c
  4228   01013E  EFA3  F080         	goto	l5660
  4229   010142  EF95  F080         	goto	l3868
  4230   010146                     l5660:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ; Switch size 1, requested type "simple"
  4234                           ; Number of cases is 4, Range of values is 100 to 120
  4235                           ; switch strategies available:
  4236                           ; Name         Instructions Cycles
  4237                           ; simple_byte           13     7 (average)
  4238                           ;	Chosen strategy is simple_byte
  4239   010146  5037               	movf	??_vfpfcnvrt^0,w,c
  4240   010148  0A64               	xorlw	100	; case 100
  4241   01014A  B4D8               	btfsc	status,2,c
  4242   01014C  EF91  F080         	goto	l3866
  4243   010150  0A0D               	xorlw	13	; case 105
  4244   010152  B4D8               	btfsc	status,2,c
  4245   010154  EF91  F080         	goto	l3866
  4246   010158  0A05               	xorlw	5	; case 108
  4247   01015A  B4D8               	btfsc	status,2,c
  4248   01015C  EF8D  F080         	goto	l3864
  4249   010160  0A14               	xorlw	20	; case 120
  4250   010162  B4D8               	btfsc	status,2,c
  4251   010164  EF91  F080         	goto	l3866
  4252   010168  EF95  F080         	goto	l3868
  4253   01016C                     l3874:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4257   01016C  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4258   010170  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4259   010174                     	if	0	;tblptru may be non-zero
  4260   010174                     	endif
  4261   010174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4262   010174  0E00               	movlw	low (__mediumconst shr (0+16))
  4263   010176  6EF8               	movwf	tblptru,c
  4264   010178                     	endif
  4265   010178  0008               	tblrd		*
  4266   01017A  50F5               	movf	tablat,w,c
  4267   01017C  0A64               	xorlw	100
  4268   01017E  B4D8               	btfsc	status,2,c
  4269   010180  EFC4  F080         	goto	u3531
  4270   010184  EFC6  F080         	goto	u3530
  4271   010188                     u3531:
  4272   010188  EF0D  F081         	goto	l3884
  4273   01018C                     u3530:
  4274   01018C                     
  4275                           ; BSR set to: 0
  4276   01018C  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4277   010190  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4278   010194                     	if	0	;tblptru may be non-zero
  4279   010194                     	endif
  4280   010194                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4281   010194  0E00               	movlw	low (__mediumconst shr (0+16))
  4282   010196  6EF8               	movwf	tblptru,c
  4283   010198                     	endif
  4284   010198  0008               	tblrd		*
  4285   01019A  50F5               	movf	tablat,w,c
  4286   01019C  0A69               	xorlw	105
  4287   01019E  A4D8               	btfss	status,2,c
  4288   0101A0  EFD4  F080         	goto	u3541
  4289   0101A4  EFD6  F080         	goto	u3540
  4290   0101A8                     u3541:
  4291   0101A8  EF40  F081         	goto	l3892
  4292   0101AC                     u3540:
  4293   0101AC  EF0D  F081         	goto	l3884
  4294   0101B0                     l3878:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1217:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4298   0101B0  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4299   0101B4  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4300   0101B8  CFDF F037          	movff	indf2,??_vfpfcnvrt
  4301   0101BC  0E02               	movlw	2
  4302   0101BE  26DE               	addwf	postinc2,f,c
  4303   0101C0  CFDF F038          	movff	indf2,??_vfpfcnvrt+1
  4304   0101C4  0E00               	movlw	0
  4305   0101C6  22DD               	addwfc	postdec2,f,c
  4306   0101C8  C037  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4307   0101CC  C038  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4308   0101D0  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  4309   0101D4  CFDD F040          	movff	postdec2,vfpfcnvrt@convarg+1
  4310   0101D8  0E00               	movlw	0
  4311   0101DA  BE40               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  4312   0101DC  0EFF               	movlw	-1
  4313   0101DE  6E41               	movwf	(vfpfcnvrt@convarg+2)^0,c
  4314   0101E0  6E42               	movwf	(vfpfcnvrt@convarg+3)^0,c
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1218:      break;
  4317   0101E2  EF22  F081         	goto	l3886
  4318   0101E6                     l3880:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1231:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  4322   0101E6  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4323   0101EA  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4324   0101EE  CFDF F037          	movff	indf2,??_vfpfcnvrt
  4325   0101F2  0E04               	movlw	4
  4326   0101F4  26DE               	addwf	postinc2,f,c
  4327   0101F6  CFDF F038          	movff	indf2,??_vfpfcnvrt+1
  4328   0101FA  0E00               	movlw	0
  4329   0101FC  22DD               	addwfc	postdec2,f,c
  4330   0101FE  C037  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4331   010202  C038  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4332   010206  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  4333   01020A  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  4334   01020E  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+2
  4335   010212  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+3
  4336                           
  4337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1232:      break;
  4338   010216  EF22  F081         	goto	l3886
  4339   01021A                     l3884:
  4340                           
  4341                           ; BSR set to: 0
  4342   01021A  5043               	movf	vfpfcnvrt@c^0,w,c
  4343   01021C  6E37               	movwf	??_vfpfcnvrt^0,c
  4344   01021E  6A38               	clrf	(??_vfpfcnvrt+1)^0,c
  4345                           
  4346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4347                           ; Switch size 1, requested type "simple"
  4348                           ; Number of cases is 1, Range of values is 0 to 0
  4349                           ; switch strategies available:
  4350                           ; Name         Instructions Cycles
  4351                           ; simple_byte            4     3 (average)
  4352                           ;	Chosen strategy is simple_byte
  4353   010220  5038               	movf	(??_vfpfcnvrt+1)^0,w,c
  4354   010222  0A00               	xorlw	0	; case 0
  4355   010224  B4D8               	btfsc	status,2,c
  4356   010226  EF17  F081         	goto	l5662
  4357   01022A  EF22  F081         	goto	l3886
  4358   01022E                     l5662:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ; Switch size 1, requested type "simple"
  4362                           ; Number of cases is 2, Range of values is 105 to 108
  4363                           ; switch strategies available:
  4364                           ; Name         Instructions Cycles
  4365                           ; simple_byte            7     4 (average)
  4366                           ;	Chosen strategy is simple_byte
  4367   01022E  5037               	movf	??_vfpfcnvrt^0,w,c
  4368   010230  0A69               	xorlw	105	; case 105
  4369   010232  B4D8               	btfsc	status,2,c
  4370   010234  EFD8  F080         	goto	l3878
  4371   010238  0A05               	xorlw	5	; case 108
  4372   01023A  B4D8               	btfsc	status,2,c
  4373   01023C  EFF3  F080         	goto	l3880
  4374   010240  EF22  F081         	goto	l3886
  4375   010244                     l3886:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  4379   010244  0E01               	movlw	1
  4380   010246  2444               	addwf	vfpfcnvrt@cp^0,w,c
  4381   010248  6E37               	movwf	??_vfpfcnvrt^0,c
  4382   01024A  0E00               	movlw	0
  4383   01024C  2045               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4384   01024E  6E38               	movwf	(??_vfpfcnvrt+1)^0,c
  4385   010250  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4386   010254  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4387   010258  C037  FFDE         	movff	??_vfpfcnvrt,postinc2
  4388   01025C  C038  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4389   010260                     
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  4392   010260  C031  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4393   010264  C032  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4394   010268  C03F  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  4395   01026C  C040  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  4396   010270  C041  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  4397   010274  C042  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  4398   010278  ECD8  F089         	call	_dtoa	;wreg free
  4399   01027C  EF65  F082         	goto	l1325
  4400   010280                     l3892:
  4401                           
  4402                           ; BSR set to: 0
  4403   010280  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4404   010284  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4405   010288                     	if	0	;tblptru may be non-zero
  4406   010288                     	endif
  4407   010288                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4408   010288  0E00               	movlw	low (__mediumconst shr (0+16))
  4409   01028A  6EF8               	movwf	tblptru,c
  4410   01028C                     	endif
  4411   01028C  0008               	tblrd		*
  4412   01028E  50F5               	movf	tablat,w,c
  4413   010290  0A78               	xorlw	120
  4414   010292  A4D8               	btfss	status,2,c
  4415   010294  EF4E  F081         	goto	u3551
  4416   010298  EF50  F081         	goto	u3550
  4417   01029C                     u3551:
  4418   01029C  EFD5  F081         	goto	l3912
  4419   0102A0                     u3550:
  4420   0102A0  EF88  F081         	goto	l3900
  4421   0102A4                     l3894:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1282:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4425   0102A4  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4426   0102A8  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4427   0102AC  CFDF F037          	movff	indf2,??_vfpfcnvrt
  4428   0102B0  0E02               	movlw	2
  4429   0102B2  26DE               	addwf	postinc2,f,c
  4430   0102B4  CFDF F038          	movff	indf2,??_vfpfcnvrt+1
  4431   0102B8  0E00               	movlw	0
  4432   0102BA  22DD               	addwfc	postdec2,f,c
  4433   0102BC  C037  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4434   0102C0  C038  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4435   0102C4  CFDE F039          	movff	postinc2,??_vfpfcnvrt+2
  4436   0102C8  CFDD F03A          	movff	postdec2,??_vfpfcnvrt+3
  4437   0102CC  C039  F03F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  4438   0102D0  C03A  F040         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  4439   0102D4  6A41               	clrf	(vfpfcnvrt@convarg+2)^0,c
  4440   0102D6  6A42               	clrf	(vfpfcnvrt@convarg+3)^0,c
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1283:      break;
  4443   0102D8  EF9D  F081         	goto	l3902
  4444   0102DC                     l3896:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1296:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  4448   0102DC  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4449   0102E0  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4450   0102E4  CFDF F037          	movff	indf2,??_vfpfcnvrt
  4451   0102E8  0E04               	movlw	4
  4452   0102EA  26DE               	addwf	postinc2,f,c
  4453   0102EC  CFDF F038          	movff	indf2,??_vfpfcnvrt+1
  4454   0102F0  0E00               	movlw	0
  4455   0102F2  22DD               	addwfc	postdec2,f,c
  4456   0102F4  C037  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4457   0102F8  C038  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4458   0102FC  CFDE F03F          	movff	postinc2,vfpfcnvrt@convarg
  4459   010300  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg+1
  4460   010304  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+2
  4461   010308  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+3
  4462                           
  4463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1297:      break;
  4464   01030C  EF9D  F081         	goto	l3902
  4465   010310                     l3900:
  4466                           
  4467                           ; BSR set to: 0
  4468   010310  5043               	movf	vfpfcnvrt@c^0,w,c
  4469   010312  6E37               	movwf	??_vfpfcnvrt^0,c
  4470   010314  6A38               	clrf	(??_vfpfcnvrt+1)^0,c
  4471                           
  4472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4473                           ; Switch size 1, requested type "simple"
  4474                           ; Number of cases is 1, Range of values is 0 to 0
  4475                           ; switch strategies available:
  4476                           ; Name         Instructions Cycles
  4477                           ; simple_byte            4     3 (average)
  4478                           ;	Chosen strategy is simple_byte
  4479   010316  5038               	movf	(??_vfpfcnvrt+1)^0,w,c
  4480   010318  0A00               	xorlw	0	; case 0
  4481   01031A  B4D8               	btfsc	status,2,c
  4482   01031C  EF92  F081         	goto	l5664
  4483   010320  EF9D  F081         	goto	l3902
  4484   010324                     l5664:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ; Switch size 1, requested type "simple"
  4488                           ; Number of cases is 2, Range of values is 105 to 108
  4489                           ; switch strategies available:
  4490                           ; Name         Instructions Cycles
  4491                           ; simple_byte            7     4 (average)
  4492                           ;	Chosen strategy is simple_byte
  4493   010324  5037               	movf	??_vfpfcnvrt^0,w,c
  4494   010326  0A69               	xorlw	105	; case 105
  4495   010328  B4D8               	btfsc	status,2,c
  4496   01032A  EF52  F081         	goto	l3894
  4497   01032E  0A05               	xorlw	5	; case 108
  4498   010330  B4D8               	btfsc	status,2,c
  4499   010332  EF6E  F081         	goto	l3896
  4500   010336  EF9D  F081         	goto	l3902
  4501   01033A                     l3902:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  4505   01033A  0E01               	movlw	1
  4506   01033C  2444               	addwf	vfpfcnvrt@cp^0,w,c
  4507   01033E  6E37               	movwf	??_vfpfcnvrt^0,c
  4508   010340  0E00               	movlw	0
  4509   010342  2045               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4510   010344  6E38               	movwf	(??_vfpfcnvrt+1)^0,c
  4511   010346  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4512   01034A  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4513   01034E  C037  FFDE         	movff	??_vfpfcnvrt,postinc2
  4514   010352  C038  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  4517   010356  EFBD  F081         	goto	l3910
  4518   01035A                     l3904:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1340:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  4522   01035A  C031  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  4523   01035E  C032  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4524   010362  C03F  F020         	movff	vfpfcnvrt@convarg,xtoa@d
  4525   010366  C040  F021         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  4526   01036A  C041  F022         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  4527   01036E  C042  F023         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  4528   010372  EC56  F08D         	call	_xtoa	;wreg free
  4529   010376  EF65  F082         	goto	l1325
  4530   01037A                     l3910:
  4531                           
  4532                           ; BSR set to: 0
  4533   01037A  C044  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4534   01037E  C045  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4535   010382                     	if	0	;tblptru may be non-zero
  4536   010382                     	endif
  4537   010382                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4538   010382  0E00               	movlw	low (__mediumconst shr (0+16))
  4539   010384  6EF8               	movwf	tblptru,c
  4540   010386                     	endif
  4541   010386  0008               	tblrd		*
  4542   010388  50F5               	movf	tablat,w,c
  4543   01038A  6E37               	movwf	??_vfpfcnvrt^0,c
  4544   01038C  6A38               	clrf	(??_vfpfcnvrt+1)^0,c
  4545                           
  4546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4547                           ; Switch size 1, requested type "simple"
  4548                           ; Number of cases is 1, Range of values is 0 to 0
  4549                           ; switch strategies available:
  4550                           ; Name         Instructions Cycles
  4551                           ; simple_byte            4     3 (average)
  4552                           ;	Chosen strategy is simple_byte
  4553   01038E  5038               	movf	(??_vfpfcnvrt+1)^0,w,c
  4554   010390  0A00               	xorlw	0	; case 0
  4555   010392  B4D8               	btfsc	status,2,c
  4556   010394  EFCE  F081         	goto	l5666
  4557   010398  EFD5  F081         	goto	l3912
  4558   01039C                     l5666:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ; Switch size 1, requested type "simple"
  4562                           ; Number of cases is 1, Range of values is 120 to 120
  4563                           ; switch strategies available:
  4564                           ; Name         Instructions Cycles
  4565                           ; simple_byte            4     3 (average)
  4566                           ;	Chosen strategy is simple_byte
  4567   01039C  5037               	movf	??_vfpfcnvrt^0,w,c
  4568   01039E  0A78               	xorlw	120	; case 120
  4569   0103A0  B4D8               	btfsc	status,2,c
  4570   0103A2  EFAD  F081         	goto	l3904
  4571   0103A6  EFD5  F081         	goto	l3912
  4572   0103AA                     l3912:
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1409:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  4576   0103AA  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4577   0103AE  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4578   0103B2  CFDE FFF6          	movff	postinc2,tblptrl
  4579   0103B6  CFDD FFF7          	movff	postdec2,tblptrh
  4580   0103BA                     	if	0	;tblptru may be non-zero
  4581   0103BA                     	endif
  4582   0103BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4583   0103BA  0E00               	movlw	low (__mediumconst shr (0+16))
  4584   0103BC  6EF8               	movwf	tblptru,c
  4585   0103BE                     	endif
  4586   0103BE  0008               	tblrd		*
  4587   0103C0  50F5               	movf	tablat,w,c
  4588   0103C2  0A73               	xorlw	115
  4589   0103C4  B4D8               	btfsc	status,2,c
  4590   0103C6  EFE7  F081         	goto	u3561
  4591   0103CA  EFE9  F081         	goto	u3560
  4592   0103CE                     u3561:
  4593   0103CE  EF04  F082         	goto	l3916
  4594   0103D2                     u3560:
  4595   0103D2                     
  4596                           ; BSR set to: 0
  4597   0103D2  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4598   0103D6  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4599   0103DA  CFDE F002          	movff	postinc2,strncmp@_l
  4600   0103DE  CFDD F003          	movff	postdec2,strncmp@_l+1
  4601   0103E2  0EF7               	movlw	low STR_67
  4602   0103E4  6E04               	movwf	strncmp@_r^0,c
  4603   0103E6  0EFF               	movlw	high STR_67
  4604   0103E8  6E05               	movwf	(strncmp@_r+1)^0,c
  4605   0103EA  0E00               	movlw	0
  4606   0103EC  6E07               	movwf	(strncmp@n+1)^0,c
  4607   0103EE  0E03               	movlw	3
  4608   0103F0  6E06               	movwf	strncmp@n^0,c
  4609   0103F2  ECCE  F090         	call	_strncmp	;wreg free
  4610   0103F6  5002               	movf	?_strncmp^0,w,c
  4611   0103F8  1003               	iorwf	(?_strncmp+1)^0,w,c
  4612   0103FA  A4D8               	btfss	status,2,c
  4613   0103FC  EF02  F082         	goto	u3571
  4614   010400  EF04  F082         	goto	u3570
  4615   010404                     u3571:
  4616   010404  EF46  F082         	goto	l3928
  4617   010408                     u3570:
  4618   010408                     l3916:
  4619                           
  4620                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1411:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  4621   010408  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4622   01040C  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4623   010410  CFDE FFF6          	movff	postinc2,tblptrl
  4624   010414  CFDD FFF7          	movff	postdec2,tblptrh
  4625   010418                     	if	0	;tblptru may be non-zero
  4626   010418                     	endif
  4627   010418                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4628   010418  0E00               	movlw	low (__mediumconst shr (0+16))
  4629   01041A  6EF8               	movwf	tblptru,c
  4630   01041C                     	endif
  4631   01041C  0008               	tblrd		*
  4632   01041E  50F5               	movf	tablat,w,c
  4633   010420  0A73               	xorlw	115
  4634   010422  B4D8               	btfsc	status,2,c
  4635   010424  EF16  F082         	goto	u3581
  4636   010428  EF18  F082         	goto	u3580
  4637   01042C                     u3581:
  4638   01042C  EF1E  F082         	goto	l3920
  4639   010430                     u3580:
  4640   010430  0E00               	movlw	0
  4641   010432  6E3E               	movwf	(_vfpfcnvrt$1565+1)^0,c
  4642   010434  0E03               	movlw	3
  4643   010436  6E3D               	movwf	_vfpfcnvrt$1565^0,c
  4644   010438  EF22  F082         	goto	l3922
  4645   01043C                     l3920:
  4646   01043C  0E00               	movlw	0
  4647   01043E  6E3E               	movwf	(_vfpfcnvrt$1565+1)^0,c
  4648   010440  0E01               	movlw	1
  4649   010442  6E3D               	movwf	_vfpfcnvrt$1565^0,c
  4650   010444                     l3922:
  4651   010444  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4652   010448  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4653   01044C  503D               	movf	_vfpfcnvrt$1565^0,w,c
  4654   01044E  26DE               	addwf	postinc2,f,c
  4655   010450  503E               	movf	(_vfpfcnvrt$1565+1)^0,w,c
  4656   010452  22DD               	addwfc	postdec2,f,c
  4657   010454                     
  4658                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1412:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  4659   010454  C031  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  4660   010458  C032  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4661   01045C  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4662   010460  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4663   010464  CFDF F037          	movff	indf2,??_vfpfcnvrt
  4664   010468  0E02               	movlw	2
  4665   01046A  26DE               	addwf	postinc2,f,c
  4666   01046C  CFDF F038          	movff	indf2,??_vfpfcnvrt+1
  4667   010470  0E00               	movlw	0
  4668   010472  22DD               	addwfc	postdec2,f,c
  4669   010474  C037  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4670   010478  C038  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4671   01047C  CFDE F00E          	movff	postinc2,stoa@s
  4672   010480  CFDD F00F          	movff	postdec2,stoa@s+1
  4673   010484  EC8D  F08C         	call	_stoa	;wreg free
  4674   010488  EF65  F082         	goto	l1325
  4675   01048C                     l3928:
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  4678   01048C  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4679   010490  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4680   010494  2ADE               	incf	postinc2,f,c
  4681   010496  0E00               	movlw	0
  4682   010498  22DD               	addwfc	postdec2,f,c
  4683   01049A  EF65  F082         	goto	l1325
  4684   01049E                     l3932:
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  4687   01049E  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4688   0104A2  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4689   0104A6  CFDE FFF6          	movff	postinc2,tblptrl
  4690   0104AA  CFDD FFF7          	movff	postdec2,tblptrh
  4691   0104AE                     	if	0	;tblptru may be non-zero
  4692   0104AE                     	endif
  4693   0104AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4694   0104AE  0E00               	movlw	low (__mediumconst shr (0+16))
  4695   0104B0  6EF8               	movwf	tblptru,c
  4696   0104B2                     	endif
  4697   0104B2  0008               	tblrd		*
  4698   0104B4  50F5               	movf	tablat,w,c
  4699   0104B6  6E03               	movwf	fputc@c^0,c
  4700   0104B8  6A04               	clrf	(fputc@c+1)^0,c
  4701   0104BA  C031  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4702   0104BE  C032  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4703   0104C2  EC26  F092         	call	_fputc	;wreg free
  4704   0104C6  EF46  F082         	goto	l3928
  4705   0104CA                     l1325:
  4706   0104CA  0012               	return		;funcret
  4707   0104CC                     __end_of_vfpfcnvrt:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _xtoa *****************
  4711 ;; Defined at:
  4712 ;;		line 955 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4715 ;;		 -> NULL(0), 
  4716 ;;  d               4   31[COMRAM] unsigned long 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  i               2   45[COMRAM] int 
  4719 ;;  w               2   43[COMRAM] int 
  4720 ;;  p               2   41[COMRAM] int 
  4721 ;;  c               1   47[COMRAM] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4731 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4735 ;;Total ram usage:       19 bytes
  4736 ;; Hardware stack levels used: 1
  4737 ;; Hardware stack levels required when called: 6
  4738 ;; This function calls:
  4739 ;;		_pad
  4740 ;; This function is called by:
  4741 ;;		_vfpfcnvrt
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text9
  4746   011AAC                     __ptext9:
  4747                           	callstack 0
  4748   011AAC                     _xtoa:
  4749                           	callstack 20
  4750   011AAC                     
  4751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 955: static void 
      +                          xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 958: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           959:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 960
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           967:     if (!(prec < 0)) {
  4752   011AAC  0100               	movlb	0	; () banked
  4753   011AAE  BF63               	btfsc	(_prec+1)& (0+255),7,b
  4754   011AB0  EF5C  F08D         	goto	u2891
  4755   011AB4  EF5E  F08D         	goto	u2890
  4756   011AB8                     u2891:
  4757   011AB8  EF5F  F08D         	goto	l3512
  4758   011ABC                     u2890:
  4759   011ABC                     
  4760                           ; BSR set to: 0
  4761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 968:         flag
      +                          s &= ~(1 << 1);
  4762   011ABC  925C               	bcf	_flags^0,1,c
  4763   011ABE                     l3512:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 971:     p = (0 <
      +                          = prec) ? prec : 1;
  4767   011ABE  BF63               	btfsc	(_prec+1)& (0+255),7,b
  4768   011AC0  EF66  F08D         	goto	u2900
  4769   011AC4  EF64  F08D         	goto	u2901
  4770   011AC8                     u2901:
  4771   011AC8  EF6C  F08D         	goto	l1277
  4772   011ACC                     u2900:
  4773   011ACC                     
  4774                           ; BSR set to: 0
  4775   011ACC  0E00               	movlw	0
  4776   011ACE  6E2B               	movwf	(xtoa@p+1)^0,c
  4777   011AD0  0E01               	movlw	1
  4778   011AD2  6E2A               	movwf	xtoa@p^0,c
  4779   011AD4  EF70  F08D         	goto	l1279
  4780   011AD8                     l1277:
  4781                           
  4782                           ; BSR set to: 0
  4783   011AD8  C062  F02A         	movff	_prec,xtoa@p
  4784   011ADC  C063  F02B         	movff	_prec+1,xtoa@p+1
  4785   011AE0                     l1279:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 972:     w = widt
      +                          h;
  4789   011AE0  C060  F02C         	movff	_width,xtoa@w
  4790   011AE4  C061  F02D         	movff	_width+1,xtoa@w+1
  4791   011AE8                     
  4792                           ; BSR set to: 0
  4793                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 981:     i = size
      +                          of(dbuf) - 1;
  4794   011AE8  0E00               	movlw	0
  4795   011AEA  6E2F               	movwf	(xtoa@i+1)^0,c
  4796   011AEC  0E1F               	movlw	31
  4797   011AEE  6E2E               	movwf	xtoa@i^0,c
  4798   011AF0                     
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 982:     dbuf[i] 
      +                          = '\0';
  4801   011AF0  0E00               	movlw	0
  4802   011AF2  6FB0               	movwf	(_dbuf+31)& (0+255),b
  4803                           
  4804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  4805   011AF4  EFC3  F08D         	goto	l3540
  4806   011AF8                     l3520:
  4807                           
  4808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 987:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 988:         --i;
  4809   011AF8  062E               	decf	xtoa@i^0,f,c
  4810   011AFA  A0D8               	btfss	status,0,c
  4811   011AFC  062F               	decf	(xtoa@i+1)^0,f,c
  4812   011AFE                     
  4813                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 989:         c = 
      +                          d & 0x0f;
  4814   011AFE  5020               	movf	xtoa@d^0,w,c
  4815   011B00  0B0F               	andlw	15
  4816   011B02  6E30               	movwf	xtoa@c^0,c
  4817   011B04                     
  4818                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 991:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4819   011B04  0E09               	movlw	9
  4820   011B06  6430               	cpfsgt	xtoa@c^0,c
  4821   011B08  EF88  F08D         	goto	u2911
  4822   011B0C  EF8A  F08D         	goto	u2910
  4823   011B10                     u2911:
  4824   011B10  EF92  F08D         	goto	l3528
  4825   011B14                     u2910:
  4826   011B14  0E57               	movlw	87
  4827   011B16  2430               	addwf	xtoa@c^0,w,c
  4828   011B18  6E28               	movwf	_xtoa$1538^0,c
  4829   011B1A  6A29               	clrf	(_xtoa$1538+1)^0,c
  4830   011B1C  0E00               	movlw	0
  4831   011B1E  2229               	addwfc	(_xtoa$1538+1)^0,f,c
  4832   011B20  EF98  F08D         	goto	l3530
  4833   011B24                     l3528:
  4834   011B24  0E30               	movlw	48
  4835   011B26  2430               	addwf	xtoa@c^0,w,c
  4836   011B28  6E28               	movwf	_xtoa$1538^0,c
  4837   011B2A  6A29               	clrf	(_xtoa$1538+1)^0,c
  4838   011B2C  0E00               	movlw	0
  4839   011B2E  2229               	addwfc	(_xtoa$1538+1)^0,f,c
  4840   011B30                     l3530:
  4841   011B30  C028  F030         	movff	_xtoa$1538,xtoa@c
  4842   011B34                     
  4843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1000:         dbu
      +                          f[i] = (char)c;
  4844   011B34  0E91               	movlw	low _dbuf
  4845   011B36  242E               	addwf	xtoa@i^0,w,c
  4846   011B38  6ED9               	movwf	fsr2l,c
  4847   011B3A  0E00               	movlw	high _dbuf
  4848   011B3C  202F               	addwfc	(xtoa@i+1)^0,w,c
  4849   011B3E  6EDA               	movwf	fsr2h,c
  4850   011B40  C030  FFDF         	movff	xtoa@c,indf2
  4851   011B44                     
  4852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1001:         --p
      +                          ;
  4853   011B44  062A               	decf	xtoa@p^0,f,c
  4854   011B46  A0D8               	btfss	status,0,c
  4855   011B48  062B               	decf	(xtoa@p+1)^0,f,c
  4856   011B4A                     
  4857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1002:         --w
      +                          ;
  4858   011B4A  062C               	decf	xtoa@w^0,f,c
  4859   011B4C  A0D8               	btfss	status,0,c
  4860   011B4E  062D               	decf	(xtoa@w+1)^0,f,c
  4861   011B50                     
  4862                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1003:         d =
      +                           d >> 4;
  4863   011B50  C020  F024         	movff	xtoa@d,??_xtoa
  4864   011B54  C021  F025         	movff	xtoa@d+1,??_xtoa+1
  4865   011B58  C022  F026         	movff	xtoa@d+2,??_xtoa+2
  4866   011B5C  C023  F027         	movff	xtoa@d+3,??_xtoa+3
  4867   011B60  0E05               	movlw	5
  4868   011B62  EFB8  F08D         	goto	u2920
  4869   011B66                     u2925:
  4870   011B66  90D8               	bcf	status,0,c
  4871   011B68  3227               	rrcf	(??_xtoa+3)^0,f,c
  4872   011B6A  3226               	rrcf	(??_xtoa+2)^0,f,c
  4873   011B6C  3225               	rrcf	(??_xtoa+1)^0,f,c
  4874   011B6E  3224               	rrcf	??_xtoa^0,f,c
  4875   011B70                     u2920:
  4876   011B70  2EE8               	decfsz	wreg,f,c
  4877   011B72  EFB3  F08D         	goto	u2925
  4878   011B76  C024  F020         	movff	??_xtoa,xtoa@d
  4879   011B7A  C025  F021         	movff	??_xtoa+1,xtoa@d+1
  4880   011B7E  C026  F022         	movff	??_xtoa+2,xtoa@d+2
  4881   011B82  C027  F023         	movff	??_xtoa+3,xtoa@d+3
  4882   011B86                     l3540:
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 983:     while (!
      +                          (i < 2) && (d || (0 < p)
  4885   011B86  BE2F               	btfsc	(xtoa@i+1)^0,7,c
  4886   011B88  EFCF  F08D         	goto	u2931
  4887   011B8C  502F               	movf	(xtoa@i+1)^0,w,c
  4888   011B8E  E109               	bnz	u2930
  4889   011B90  0E02               	movlw	2
  4890   011B92  5C2E               	subwf	xtoa@i^0,w,c
  4891   011B94  A0D8               	btfss	status,0,c
  4892   011B96  EFCF  F08D         	goto	u2931
  4893   011B9A  EFD1  F08D         	goto	u2930
  4894   011B9E                     u2931:
  4895   011B9E  EFFD  F08D         	goto	l3550
  4896   011BA2                     u2930:
  4897   011BA2  5020               	movf	xtoa@d^0,w,c
  4898   011BA4  1021               	iorwf	(xtoa@d+1)^0,w,c
  4899   011BA6  1022               	iorwf	(xtoa@d+2)^0,w,c
  4900   011BA8  1023               	iorwf	(xtoa@d+3)^0,w,c
  4901   011BAA  A4D8               	btfss	status,2,c
  4902   011BAC  EFDA  F08D         	goto	u2941
  4903   011BB0  EFDC  F08D         	goto	u2940
  4904   011BB4                     u2941:
  4905   011BB4  EF7C  F08D         	goto	l3520
  4906   011BB8                     u2940:
  4907   011BB8  BE2B               	btfsc	(xtoa@p+1)^0,7,c
  4908   011BBA  EFE9  F08D         	goto	u2950
  4909   011BBE  502B               	movf	(xtoa@p+1)^0,w,c
  4910   011BC0  E106               	bnz	u2951
  4911   011BC2  042A               	decf	xtoa@p^0,w,c
  4912   011BC4  B0D8               	btfsc	status,0,c
  4913   011BC6  EFE7  F08D         	goto	u2951
  4914   011BCA  EFE9  F08D         	goto	u2950
  4915   011BCE                     u2951:
  4916   011BCE  EF7C  F08D         	goto	l3520
  4917   011BD2                     u2950:
  4918   011BD2  BE2D               	btfsc	(xtoa@w+1)^0,7,c
  4919   011BD4  EFF4  F08D         	goto	u2961
  4920   011BD8  502D               	movf	(xtoa@w+1)^0,w,c
  4921   011BDA  E108               	bnz	u2960
  4922   011BDC  042C               	decf	xtoa@w^0,w,c
  4923   011BDE  A0D8               	btfss	status,0,c
  4924   011BE0  EFF4  F08D         	goto	u2961
  4925   011BE4  EFF6  F08D         	goto	u2960
  4926   011BE8                     u2961:
  4927   011BE8  EFFD  F08D         	goto	l3550
  4928   011BEC                     u2960:
  4929   011BEC  B25C               	btfsc	_flags^0,1,c
  4930   011BEE  EFFB  F08D         	goto	u2971
  4931   011BF2  EFFD  F08D         	goto	u2970
  4932   011BF6                     u2971:
  4933   011BF6  EF7C  F08D         	goto	l3520
  4934   011BFA                     u2970:
  4935   011BFA                     l3550:
  4936                           
  4937                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1023:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  4938   011BFA  C01E  F013         	movff	xtoa@fp,pad@fp
  4939   011BFE  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  4940   011C02  0E91               	movlw	low _dbuf
  4941   011C04  242E               	addwf	xtoa@i^0,w,c
  4942   011C06  6E15               	movwf	pad@buf^0,c
  4943   011C08  0E00               	movlw	high _dbuf
  4944   011C0A  202F               	addwfc	(xtoa@i+1)^0,w,c
  4945   011C0C  6E16               	movwf	(pad@buf+1)^0,c
  4946   011C0E  C02C  F017         	movff	xtoa@w,pad@p
  4947   011C12  C02D  F018         	movff	xtoa@w+1,pad@p+1
  4948   011C16  ECED  F092         	call	_pad	;wreg free
  4949   011C1A  0012               	return		;funcret
  4950   011C1C                     __end_of_xtoa:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _strncmp *****************
  4954 ;; Defined at:
  4955 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strncmp.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  4958 ;;		 -> STR_66(16), STR_59(26), STR_58(22), STR_57(22), 
  4959 ;;		 -> STR_56(22), STR_55(26), STR_54(26), STR_53(22), 
  4960 ;;		 -> STR_52(22), STR_51(22), STR_50(26), STR_49(52), 
  4961 ;;		 -> STR_48(52), STR_47(52), STR_46(20), STR_45(20), 
  4962 ;;		 -> STR_44(20), STR_43(20), STR_42(29), STR_41(21), 
  4963 ;;		 -> STR_40(20), STR_39(20), STR_38(30), STR_37(20), 
  4964 ;;		 -> STR_36(19), STR_35(19), STR_34(19), STR_33(19), 
  4965 ;;		 -> STR_32(24), STR_31(22), STR_30(21), STR_29(21), 
  4966 ;;		 -> STR_28(21), STR_27(22), STR_26(21), STR_25(21), 
  4967 ;;		 -> STR_24(21), STR_23(23), STR_22(3), STR_21(22), 
  4968 ;;		 -> STR_20(12), STR_19(14), STR_18(15), STR_17(13), 
  4969 ;;		 -> STR_15(3), STR_14(4), STR_13(5), STR_12(7), 
  4970 ;;		 -> STR_11(22), STR_10(5), STR_9(10), STR_8(15), 
  4971 ;;		 -> STR_7(22), STR_6(6), STR_5(32), STR_4(14), 
  4972 ;;		 -> STR_3(16), STR_2(3), 
  4973 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  4974 ;;		 -> STR_69(4), 
  4975 ;;  n               2    5[COMRAM] unsigned int 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  r               2   10[COMRAM] PTR const unsigned char 
  4978 ;;		 -> STR_69(4), 
  4979 ;;  l               2    8[COMRAM] PTR const unsigned char 
  4980 ;;		 -> STR_66(16), STR_59(26), STR_58(22), STR_57(22), 
  4981 ;;		 -> STR_56(22), STR_55(26), STR_54(26), STR_53(22), 
  4982 ;;		 -> STR_52(22), STR_51(22), STR_50(26), STR_49(52), 
  4983 ;;		 -> STR_48(52), STR_47(52), STR_46(20), STR_45(20), 
  4984 ;;		 -> STR_44(20), STR_43(20), STR_42(29), STR_41(21), 
  4985 ;;		 -> STR_40(20), STR_39(20), STR_38(30), STR_37(20), 
  4986 ;;		 -> STR_36(19), STR_35(19), STR_34(19), STR_33(19), 
  4987 ;;		 -> STR_32(24), STR_31(22), STR_30(21), STR_29(21), 
  4988 ;;		 -> STR_28(21), STR_27(22), STR_26(21), STR_25(21), 
  4989 ;;		 -> STR_24(21), STR_23(23), STR_22(3), STR_21(22), 
  4990 ;;		 -> STR_20(12), STR_19(14), STR_18(15), STR_17(13), 
  4991 ;;		 -> STR_15(3), STR_14(4), STR_13(5), STR_12(7), 
  4992 ;;		 -> STR_11(22), STR_10(5), STR_9(10), STR_8(15), 
  4993 ;;		 -> STR_7(22), STR_6(6), STR_5(32), STR_4(14), 
  4994 ;;		 -> STR_3(16), STR_2(3), 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  2    1[COMRAM] int 
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5004 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5005 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;Total ram usage:       11 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 2
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_vfpfcnvrt
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text10
  5019   01219C                     __ptext10:
  5020                           	callstack 0
  5021   01219C                     _strncmp:
  5022                           	callstack 24
  5023   01219C  C002  F009         	movff	strncmp@_l,strncmp@l
  5024   0121A0  C003  F00A         	movff	strncmp@_l+1,strncmp@l+1
  5025   0121A4  C004  F00B         	movff	strncmp@_r,strncmp@r
  5026   0121A8  C005  F00C         	movff	strncmp@_r+1,strncmp@r+1
  5027   0121AC  0606               	decf	strncmp@n^0,f,c
  5028   0121AE  A0D8               	btfss	status,0,c
  5029   0121B0  0607               	decf	(strncmp@n+1)^0,f,c
  5030   0121B2  2806               	incf	strncmp@n^0,w,c
  5031   0121B4  E106               	bnz	u3001
  5032   0121B6  2807               	incf	(strncmp@n+1)^0,w,c
  5033   0121B8  A4D8               	btfss	status,2,c
  5034   0121BA  EFE1  F090         	goto	u3001
  5035   0121BE  EFE3  F090         	goto	u3000
  5036   0121C2                     u3001:
  5037   0121C2  EFF0  F090         	goto	l3574
  5038   0121C6                     u3000:
  5039   0121C6  0E00               	movlw	0
  5040   0121C8  6E03               	movwf	(?_strncmp+1)^0,c
  5041   0121CA  0E00               	movlw	0
  5042   0121CC  6E02               	movwf	?_strncmp^0,c
  5043   0121CE  EF48  F091         	goto	l1393
  5044   0121D2                     l3572:
  5045   0121D2  4A09               	infsnz	strncmp@l^0,f,c
  5046   0121D4  2A0A               	incf	(strncmp@l+1)^0,f,c
  5047   0121D6  4A0B               	infsnz	strncmp@r^0,f,c
  5048   0121D8  2A0C               	incf	(strncmp@r+1)^0,f,c
  5049   0121DA  0606               	decf	strncmp@n^0,f,c
  5050   0121DC  A0D8               	btfss	status,0,c
  5051   0121DE  0607               	decf	(strncmp@n+1)^0,f,c
  5052   0121E0                     l3574:
  5053   0121E0  C009  FFF6         	movff	strncmp@l,tblptrl
  5054   0121E4  C00A  FFF7         	movff	strncmp@l+1,tblptrh
  5055   0121E8                     	if	0	;tblptru may be non-zero
  5056   0121E8                     	endif
  5057   0121E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5058   0121E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5059   0121EA  6EF8               	movwf	tblptru,c
  5060   0121EC                     	endif
  5061   0121EC  0008               	tblrd		*
  5062   0121EE  50F5               	movf	tablat,w,c
  5063   0121F0  0900               	iorlw	0
  5064   0121F2  B4D8               	btfsc	status,2,c
  5065   0121F4  EFFE  F090         	goto	u3011
  5066   0121F8  EF00  F091         	goto	u3010
  5067   0121FC                     u3011:
  5068   0121FC  EF32  F091         	goto	l3582
  5069   012200                     u3010:
  5070   012200  C00B  FFF6         	movff	strncmp@r,tblptrl
  5071   012204  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  5072   012208                     	if	0	;tblptru may be non-zero
  5073   012208                     	endif
  5074   012208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5075   012208  0E00               	movlw	low (__mediumconst shr (0+16))
  5076   01220A  6EF8               	movwf	tblptru,c
  5077   01220C                     	endif
  5078   01220C  0008               	tblrd		*
  5079   01220E  50F5               	movf	tablat,w,c
  5080   012210  0900               	iorlw	0
  5081   012212  B4D8               	btfsc	status,2,c
  5082   012214  EF0E  F091         	goto	u3021
  5083   012218  EF10  F091         	goto	u3020
  5084   01221C                     u3021:
  5085   01221C  EF32  F091         	goto	l3582
  5086   012220                     u3020:
  5087   012220  5006               	movf	strncmp@n^0,w,c
  5088   012222  1007               	iorwf	(strncmp@n+1)^0,w,c
  5089   012224  B4D8               	btfsc	status,2,c
  5090   012226  EF17  F091         	goto	u3031
  5091   01222A  EF19  F091         	goto	u3030
  5092   01222E                     u3031:
  5093   01222E  EF32  F091         	goto	l3582
  5094   012232                     u3030:
  5095   012232  C009  FFF6         	movff	strncmp@l,tblptrl
  5096   012236  C00A  FFF7         	movff	strncmp@l+1,tblptrh
  5097   01223A                     	if	0	;tblptru may be non-zero
  5098   01223A                     	endif
  5099   01223A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5100   01223A  0E00               	movlw	low (__mediumconst shr (0+16))
  5101   01223C  6EF8               	movwf	tblptru,c
  5102   01223E                     	endif
  5103   01223E  0008               	tblrd		*
  5104   012240  CFF5 F008          	movff	tablat,??_strncmp
  5105   012244  C00B  FFF6         	movff	strncmp@r,tblptrl
  5106   012248  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  5107   01224C                     	if	0	;tblptru may be non-zero
  5108   01224C                     	endif
  5109   01224C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5110   01224C  0E00               	movlw	low (__mediumconst shr (0+16))
  5111   01224E  6EF8               	movwf	tblptru,c
  5112   012250                     	endif
  5113   012250  0008               	tblrd		*
  5114   012252  50F5               	movf	tablat,w,c
  5115   012254  1808               	xorwf	??_strncmp^0,w,c
  5116   012256  B4D8               	btfsc	status,2,c
  5117   012258  EF30  F091         	goto	u3041
  5118   01225C  EF32  F091         	goto	u3040
  5119   012260                     u3041:
  5120   012260  EFE9  F090         	goto	l3572
  5121   012264                     u3040:
  5122   012264                     l3582:
  5123   012264  C009  FFF6         	movff	strncmp@l,tblptrl
  5124   012268  C00A  FFF7         	movff	strncmp@l+1,tblptrh
  5125   01226C                     	if	0	;tblptru may be non-zero
  5126   01226C                     	endif
  5127   01226C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5128   01226C  0E00               	movlw	low (__mediumconst shr (0+16))
  5129   01226E  6EF8               	movwf	tblptru,c
  5130   012270                     	endif
  5131   012270  0008               	tblrd		*
  5132   012272  CFF5 F008          	movff	tablat,??_strncmp
  5133   012276  C00B  FFF6         	movff	strncmp@r,tblptrl
  5134   01227A  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  5135   01227E                     	if	0	;tblptru may be non-zero
  5136   01227E                     	endif
  5137   01227E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5138   01227E  0E00               	movlw	low (__mediumconst shr (0+16))
  5139   012280  6EF8               	movwf	tblptru,c
  5140   012282                     	endif
  5141   012282  0008               	tblrd		*
  5142   012284  50F5               	movf	tablat,w,c
  5143   012286  5C08               	subwf	??_strncmp^0,w,c
  5144   012288  6E02               	movwf	?_strncmp^0,c
  5145   01228A  6A03               	clrf	(?_strncmp+1)^0,c
  5146   01228C  A0D8               	btfss	status,0,c
  5147   01228E  0603               	decf	(?_strncmp+1)^0,f,c
  5148   012290                     l1393:
  5149   012290  0012               	return		;funcret
  5150   012292                     __end_of_strncmp:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function _stoa *****************
  5154 ;; Defined at:
  5155 ;;		line 862 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5158 ;;		 -> NULL(0), 
  5159 ;;  s               2   13[COMRAM] PTR unsigned char 
  5160 ;;		 -> ?_printf(2), ?_Xprintf(1), loginfo_buf(64), intbuf(2), 
  5161 ;;		 -> log_dt.log_data(580), log_dt(584), Deb_menue02(30), Deb_menue01(150), 
  5162 ;;		 -> Deb_menue00(270), 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  nuls            7   16[COMRAM] unsigned char [7]
  5165 ;;  l               2   31[COMRAM] int 
  5166 ;;  p               2   29[COMRAM] int 
  5167 ;;  cp              2   27[COMRAM] PTR unsigned char 
  5168 ;;		 -> stoa@nuls(7), ?_printf(2), ?_Xprintf(1), loginfo_buf(64), 
  5169 ;;		 -> intbuf(2), log_dt.log_data(580), log_dt(584), Deb_menue02(30), 
  5170 ;;		 -> Deb_menue01(150), Deb_menue00(270), 
  5171 ;;  w               2   25[COMRAM] int 
  5172 ;;  i               2   23[COMRAM] int 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;Total ram usage:       22 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 4
  5189 ;; This function calls:
  5190 ;;		_fputc
  5191 ;;		_strlen
  5192 ;; This function is called by:
  5193 ;;		_vfpfcnvrt
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text11
  5198   01191A                     __ptext11:
  5199                           	callstack 0
  5200   01191A                     _stoa:
  5201                           	callstack 22
  5202   01191A                     
  5203                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 862: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 863: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 864: 
      +                              char *cp, nuls[] = "(null)";
  5204   01191A  EE20  F0DF         	lfsr	2,stoa@F1156
  5205   01191E  EE10  F011         	lfsr	1,stoa@nuls
  5206   011922  0E06               	movlw	6
  5207   011924                     u2791:
  5208   011924  CFDB FFE3          	movff	plusw2,plusw1
  5209   011928  06E8               	decf	wreg,f,c
  5210   01192A  E2FC               	bc	u2791
  5211   01192C                     
  5212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 865:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 868:     c
      +                          p = s;
  5213   01192C  C00E  F01C         	movff	stoa@s,stoa@cp
  5214   011930  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  5215   011934                     
  5216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 869:     if (!cp)
      +                           {
  5217   011934  501C               	movf	stoa@cp^0,w,c
  5218   011936  101D               	iorwf	(stoa@cp+1)^0,w,c
  5219   011938  A4D8               	btfss	status,2,c
  5220   01193A  EFA1  F08C         	goto	u2801
  5221   01193E  EFA3  F08C         	goto	u2800
  5222   011942                     u2801:
  5223   011942  EFA7  F08C         	goto	l3474
  5224   011946                     u2800:
  5225   011946                     
  5226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 870:         cp =
      +                           nuls;
  5227   011946  0E11               	movlw	low stoa@nuls
  5228   011948  6E1C               	movwf	stoa@cp^0,c
  5229   01194A  0E00               	movlw	high stoa@nuls
  5230   01194C  6E1D               	movwf	(stoa@cp+1)^0,c
  5231   01194E                     l3474:
  5232                           
  5233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 874:     l = (int
      +                          )strlen(cp);
  5234   01194E  C01C  F002         	movff	stoa@cp,strlen@s
  5235   011952  C01D  F003         	movff	stoa@cp+1,strlen@s+1
  5236   011956  EC46  F094         	call	_strlen	;wreg free
  5237   01195A  C002  F020         	movff	?_strlen,stoa@l
  5238   01195E  C003  F021         	movff	?_strlen+1,stoa@l+1
  5239   011962                     
  5240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 875:     p = prec
      +                          ;
  5241   011962  C062  F01E         	movff	_prec,stoa@p
  5242   011966  C063  F01F         	movff	_prec+1,stoa@p+1
  5243   01196A                     
  5244                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 876:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5245   01196A  BE1F               	btfsc	(stoa@p+1)^0,7,c
  5246   01196C  EFBA  F08C         	goto	u2811
  5247   011970  EFBC  F08C         	goto	u2810
  5248   011974                     u2811:
  5249   011974  EFD1  F08C         	goto	l1258
  5250   011978                     u2810:
  5251   011978  5020               	movf	stoa@l^0,w,c
  5252   01197A  5C1E               	subwf	stoa@p^0,w,c
  5253   01197C  501F               	movf	(stoa@p+1)^0,w,c
  5254   01197E  0A80               	xorlw	128
  5255   011980  6E10               	movwf	??_stoa^0,c
  5256   011982  5021               	movf	(stoa@l+1)^0,w,c
  5257   011984  0A80               	xorlw	128
  5258   011986  5810               	subwfb	??_stoa^0,w,c
  5259   011988  A0D8               	btfss	status,0,c
  5260   01198A  EFC9  F08C         	goto	u2821
  5261   01198E  EFCB  F08C         	goto	u2820
  5262   011992                     u2821:
  5263   011992  EFCD  F08C         	goto	l1256
  5264   011996                     u2820:
  5265   011996  EFD1  F08C         	goto	l1258
  5266   01199A                     l1256:
  5267   01199A  C01E  F020         	movff	stoa@p,stoa@l
  5268   01199E  C01F  F021         	movff	stoa@p+1,stoa@l+1
  5269   0119A2                     l1258:
  5270                           
  5271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 877:     p = l;
  5272   0119A2  C020  F01E         	movff	stoa@l,stoa@p
  5273   0119A6  C021  F01F         	movff	stoa@l+1,stoa@p+1
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 878:     w = widt
      +                          h;
  5276   0119AA  C060  F01A         	movff	_width,stoa@w
  5277   0119AE  C061  F01B         	movff	_width+1,stoa@w+1
  5278                           
  5279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 882:     if (!(fl
      +                          ags & (1 << 0))) {
  5280   0119B2  B05C               	btfsc	_flags^0,0,c
  5281   0119B4  EFDE  F08C         	goto	u2831
  5282   0119B8  EFE0  F08C         	goto	u2830
  5283   0119BC                     u2831:
  5284   0119BC  EFFD  F08C         	goto	l3490
  5285   0119C0                     u2830:
  5286   0119C0  EFEE  F08C         	goto	l3488
  5287   0119C4                     l3484:
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 885:             
      +                          fputc(' ', fp);
  5290   0119C4  0E00               	movlw	0
  5291   0119C6  6E04               	movwf	(fputc@c+1)^0,c
  5292   0119C8  0E20               	movlw	32
  5293   0119CA  6E03               	movwf	fputc@c^0,c
  5294   0119CC  C00C  F005         	movff	stoa@fp,fputc@fp
  5295   0119D0  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5296   0119D4  EC26  F092         	call	_fputc	;wreg free
  5297   0119D8                     
  5298                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 886:             
      +                          ++l;
  5299   0119D8  4A20               	infsnz	stoa@l^0,f,c
  5300   0119DA  2A21               	incf	(stoa@l+1)^0,f,c
  5301   0119DC                     l3488:
  5302                           
  5303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 884:         whil
      +                          e (l < w) {
  5304   0119DC  501A               	movf	stoa@w^0,w,c
  5305   0119DE  5C20               	subwf	stoa@l^0,w,c
  5306   0119E0  5021               	movf	(stoa@l+1)^0,w,c
  5307   0119E2  0A80               	xorlw	128
  5308   0119E4  6E10               	movwf	??_stoa^0,c
  5309   0119E6  501B               	movf	(stoa@w+1)^0,w,c
  5310   0119E8  0A80               	xorlw	128
  5311   0119EA  5810               	subwfb	??_stoa^0,w,c
  5312   0119EC  A0D8               	btfss	status,0,c
  5313   0119EE  EFFB  F08C         	goto	u2841
  5314   0119F2  EFFD  F08C         	goto	u2840
  5315   0119F6                     u2841:
  5316   0119F6  EFE2  F08C         	goto	l3484
  5317   0119FA                     u2840:
  5318   0119FA                     l3490:
  5319                           
  5320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 893:     i = 0;
  5321   0119FA  0E00               	movlw	0
  5322   0119FC  6E19               	movwf	(stoa@i+1)^0,c
  5323   0119FE  0E00               	movlw	0
  5324   011A00  6E18               	movwf	stoa@i^0,c
  5325                           
  5326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 894:     while (i
      +                           < p) {
  5327   011A02  EF22  F08D         	goto	l3498
  5328   011A06                     l3492:
  5329                           
  5330                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 895:         fput
      +                          c(*cp, fp);
  5331   011A06  C01C  FFF6         	movff	stoa@cp,tblptrl
  5332   011A0A  C01D  FFF7         	movff	stoa@cp+1,tblptrh
  5333   011A0E  0E00               	movlw	low (__mediumconst shr (0+16))
  5334   011A10  6EF8               	movwf	tblptru,c
  5335   011A12  0E0F               	movlw	(high __ramtop+-1)
  5336   011A14  64F7               	cpfsgt	tblptrh,c
  5337   011A16  D003               	bra	u2857
  5338   011A18  0008               	tblrd		*
  5339   011A1A  50F5               	movf	tablat,w,c
  5340   011A1C  D005               	bra	u2850
  5341   011A1E                     u2857:
  5342   011A1E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5343   011A22  CFF7 FFEA          	movff	tblptrh,fsr0h
  5344   011A26  50EF               	movf	indf0,w,c
  5345   011A28                     u2850:
  5346   011A28  6E10               	movwf	??_stoa^0,c
  5347   011A2A  5010               	movf	??_stoa^0,w,c
  5348   011A2C  6E03               	movwf	fputc@c^0,c
  5349   011A2E  6A04               	clrf	(fputc@c+1)^0,c
  5350   011A30  C00C  F005         	movff	stoa@fp,fputc@fp
  5351   011A34  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5352   011A38  EC26  F092         	call	_fputc	;wreg free
  5353   011A3C                     
  5354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 896:         ++cp
      +                          ;
  5355   011A3C  4A1C               	infsnz	stoa@cp^0,f,c
  5356   011A3E  2A1D               	incf	(stoa@cp+1)^0,f,c
  5357   011A40                     
  5358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 897:         ++i;
  5359   011A40  4A18               	infsnz	stoa@i^0,f,c
  5360   011A42  2A19               	incf	(stoa@i+1)^0,f,c
  5361   011A44                     l3498:
  5362                           
  5363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 894:     while (i
      +                           < p) {
  5364   011A44  501E               	movf	stoa@p^0,w,c
  5365   011A46  5C18               	subwf	stoa@i^0,w,c
  5366   011A48  5019               	movf	(stoa@i+1)^0,w,c
  5367   011A4A  0A80               	xorlw	128
  5368   011A4C  6E10               	movwf	??_stoa^0,c
  5369   011A4E  501F               	movf	(stoa@p+1)^0,w,c
  5370   011A50  0A80               	xorlw	128
  5371   011A52  5810               	subwfb	??_stoa^0,w,c
  5372   011A54  A0D8               	btfss	status,0,c
  5373   011A56  EF2F  F08D         	goto	u2861
  5374   011A5A  EF31  F08D         	goto	u2860
  5375   011A5E                     u2861:
  5376   011A5E  EF03  F08D         	goto	l3492
  5377   011A62                     u2860:
  5378   011A62                     
  5379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 902:     if (flag
      +                          s & (1 << 0)) {
  5380   011A62  A05C               	btfss	_flags^0,0,c
  5381   011A64  EF36  F08D         	goto	u2871
  5382   011A68  EF38  F08D         	goto	u2870
  5383   011A6C                     u2871:
  5384   011A6C  EF55  F08D         	goto	l1272
  5385   011A70                     u2870:
  5386   011A70  EF46  F08D         	goto	l3506
  5387   011A74                     l3502:
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 904:             
      +                          fputc(' ', fp);
  5390   011A74  0E00               	movlw	0
  5391   011A76  6E04               	movwf	(fputc@c+1)^0,c
  5392   011A78  0E20               	movlw	32
  5393   011A7A  6E03               	movwf	fputc@c^0,c
  5394   011A7C  C00C  F005         	movff	stoa@fp,fputc@fp
  5395   011A80  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  5396   011A84  EC26  F092         	call	_fputc	;wreg free
  5397   011A88                     
  5398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 905:             
      +                          ++l;
  5399   011A88  4A20               	infsnz	stoa@l^0,f,c
  5400   011A8A  2A21               	incf	(stoa@l+1)^0,f,c
  5401   011A8C                     l3506:
  5402                           
  5403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 903:         whil
      +                          e (l < w) {
  5404   011A8C  501A               	movf	stoa@w^0,w,c
  5405   011A8E  5C20               	subwf	stoa@l^0,w,c
  5406   011A90  5021               	movf	(stoa@l+1)^0,w,c
  5407   011A92  0A80               	xorlw	128
  5408   011A94  6E10               	movwf	??_stoa^0,c
  5409   011A96  501B               	movf	(stoa@w+1)^0,w,c
  5410   011A98  0A80               	xorlw	128
  5411   011A9A  5810               	subwfb	??_stoa^0,w,c
  5412   011A9C  A0D8               	btfss	status,0,c
  5413   011A9E  EF53  F08D         	goto	u2881
  5414   011AA2  EF55  F08D         	goto	u2880
  5415   011AA6                     u2881:
  5416   011AA6  EF3A  F08D         	goto	l3502
  5417   011AAA                     u2880:
  5418   011AAA                     l1272:
  5419   011AAA  0012               	return		;funcret
  5420   011AAC                     __end_of_stoa:
  5421                           	callstack 0
  5422                           
  5423 ;; *************** function _strlen *****************
  5424 ;; Defined at:
  5425 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5428 ;;		 -> stoa@nuls(7), ?_printf(2), ?_Xprintf(1), loginfo_buf(64), 
  5429 ;;		 -> intbuf(2), log_dt.log_data(580), log_dt(584), Deb_menue02(30), 
  5430 ;;		 -> Deb_menue01(150), Deb_menue00(270), 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  a               2    3[COMRAM] PTR const unsigned char 
  5433 ;;		 -> stoa@nuls(7), ?_printf(2), ?_Xprintf(1), loginfo_buf(64), 
  5434 ;;		 -> intbuf(2), log_dt.log_data(580), log_dt(584), Deb_menue02(30), 
  5435 ;;		 -> Deb_menue01(150), Deb_menue00(270), 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2    1[COMRAM] unsigned int 
  5438 ;; Registers used:
  5439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;Total ram usage:        4 bytes
  5450 ;; Hardware stack levels used: 1
  5451 ;; Hardware stack levels required when called: 2
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_stoa
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text12
  5460   01288C                     __ptext12:
  5461                           	callstack 0
  5462   01288C                     _strlen:
  5463                           	callstack 23
  5464   01288C  C002  F004         	movff	strlen@s,strlen@a
  5465   012890  C003  F005         	movff	strlen@s+1,strlen@a+1
  5466   012894  EF4E  F094         	goto	l3402
  5467   012898                     l3400:
  5468   012898  4A02               	infsnz	strlen@s^0,f,c
  5469   01289A  2A03               	incf	(strlen@s+1)^0,f,c
  5470   01289C                     l3402:
  5471   01289C  C002  FFF6         	movff	strlen@s,tblptrl
  5472   0128A0  C003  FFF7         	movff	strlen@s+1,tblptrh
  5473   0128A4  0E00               	movlw	low (__mediumconst shr (0+16))
  5474   0128A6  6EF8               	movwf	tblptru,c
  5475   0128A8  0E0F               	movlw	(high __ramtop+-1)
  5476   0128AA  64F7               	cpfsgt	tblptrh,c
  5477   0128AC  D003               	bra	u2647
  5478   0128AE  0008               	tblrd		*
  5479   0128B0  50F5               	movf	tablat,w,c
  5480   0128B2  D005               	bra	u2640
  5481   0128B4                     u2647:
  5482   0128B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5483   0128B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5484   0128BC  50EF               	movf	indf0,w,c
  5485   0128BE                     u2640:
  5486   0128BE  0900               	iorlw	0
  5487   0128C0  A4D8               	btfss	status,2,c
  5488   0128C2  EF65  F094         	goto	u2651
  5489   0128C6  EF67  F094         	goto	u2650
  5490   0128CA                     u2651:
  5491   0128CA  EF4C  F094         	goto	l3400
  5492   0128CE                     u2650:
  5493   0128CE  5004               	movf	strlen@a^0,w,c
  5494   0128D0  5C02               	subwf	strlen@s^0,w,c
  5495   0128D2  6E02               	movwf	?_strlen^0,c
  5496   0128D4  5005               	movf	(strlen@a+1)^0,w,c
  5497   0128D6  5803               	subwfb	(strlen@s+1)^0,w,c
  5498   0128D8  6E03               	movwf	(?_strlen+1)^0,c
  5499   0128DA  0012               	return		;funcret
  5500   0128DC                     __end_of_strlen:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function _read_prec_or_width *****************
  5504 ;; Defined at:
  5505 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  fmt             2    7[COMRAM] PTR PTR const unsigned c
  5508 ;;		 -> vfprintf@cfmt(2), 
  5509 ;;  ap              2    9[COMRAM] PTR PTR void [1]
  5510 ;;		 -> printf@ap(2), 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  c               1   13[COMRAM] unsigned char 
  5513 ;;  n               2   14[COMRAM] int 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  2    7[COMRAM] int 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;Total ram usage:        9 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; Hardware stack levels required when called: 3
  5530 ;; This function calls:
  5531 ;;		___wmul
  5532 ;; This function is called by:
  5533 ;;		_vfpfcnvrt
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text13
  5538   01237E                     __ptext13:
  5539                           	callstack 0
  5540   01237E                     _read_prec_or_width:
  5541                           	callstack 23
  5542   01237E                     
  5543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  5544   01237E  0E00               	movlw	0
  5545   012380  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  5546   012382  0E00               	movlw	0
  5547   012384  6E0F               	movwf	read_prec_or_width@n^0,c
  5548   012386                     
  5549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  5550   012386  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5551   01238A  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5552   01238E  CFDE FFF6          	movff	postinc2,tblptrl
  5553   012392  CFDD FFF7          	movff	postdec2,tblptrh
  5554   012396                     	if	0	;tblptru may be non-zero
  5555   012396                     	endif
  5556   012396                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5557   012396  0E00               	movlw	low (__mediumconst shr (0+16))
  5558   012398  6EF8               	movwf	tblptru,c
  5559   01239A                     	endif
  5560   01239A  0008               	tblrd		*
  5561   01239C  50F5               	movf	tablat,w,c
  5562   01239E  0A2A               	xorlw	42
  5563   0123A0  A4D8               	btfss	status,2,c
  5564   0123A2  EFD5  F091         	goto	u2981
  5565   0123A6  EFD7  F091         	goto	u2980
  5566   0123AA                     u2981:
  5567   0123AA  EF0B  F092         	goto	l3564
  5568   0123AE                     u2980:
  5569   0123AE                     
  5570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  5571   0123AE  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5572   0123B2  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5573   0123B6  2ADE               	incf	postinc2,f,c
  5574   0123B8  0E00               	movlw	0
  5575   0123BA  22DD               	addwfc	postdec2,f,c
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  5578   0123BC  C00A  FFD9         	movff	read_prec_or_width@ap,fsr2l
  5579   0123C0  C00B  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  5580   0123C4  CFDF F00C          	movff	indf2,??_read_prec_or_width
  5581   0123C8  0E02               	movlw	2
  5582   0123CA  26DE               	addwf	postinc2,f,c
  5583   0123CC  CFDF F00D          	movff	indf2,??_read_prec_or_width+1
  5584   0123D0  0E00               	movlw	0
  5585   0123D2  22DD               	addwfc	postdec2,f,c
  5586   0123D4  C00C  FFD9         	movff	??_read_prec_or_width,fsr2l
  5587   0123D8  C00D  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  5588   0123DC  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  5589   0123E0  CFDD F010          	movff	postdec2,read_prec_or_width@n+1
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  5592   0123E4  EF21  F092         	goto	l1295
  5593   0123E8                     l3560:
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  5596   0123E8  C00F  F002         	movff	read_prec_or_width@n,___wmul@multiplier
  5597   0123EC  C010  F003         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  5598   0123F0  0E00               	movlw	0
  5599   0123F2  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5600   0123F4  0E0A               	movlw	10
  5601   0123F6  6E04               	movwf	___wmul@multiplicand^0,c
  5602   0123F8  EC33  F095         	call	___wmul	;wreg free
  5603   0123FC  500E               	movf	read_prec_or_width@c^0,w,c
  5604   0123FE  2402               	addwf	?___wmul^0,w,c
  5605   012400  6E0F               	movwf	read_prec_or_width@n^0,c
  5606   012402  0E00               	movlw	0
  5607   012404  2003               	addwfc	(?___wmul+1)^0,w,c
  5608   012406  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  5609   012408                     
  5610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  5611   012408  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5612   01240C  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5613   012410  2ADE               	incf	postinc2,f,c
  5614   012412  0E00               	movlw	0
  5615   012414  22DD               	addwfc	postdec2,f,c
  5616   012416                     l3564:
  5617                           
  5618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  5619   012416  C008  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  5620   01241A  C009  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  5621   01241E  CFDE FFF6          	movff	postinc2,tblptrl
  5622   012422  CFDD FFF7          	movff	postdec2,tblptrh
  5623   012426                     	if	0	;tblptru may be non-zero
  5624   012426                     	endif
  5625   012426                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5626   012426  0E00               	movlw	low (__mediumconst shr (0+16))
  5627   012428  6EF8               	movwf	tblptru,c
  5628   01242A                     	endif
  5629   01242A  0008               	tblrd		*
  5630   01242C  50F5               	movf	tablat,w,c
  5631   01242E  0FD0               	addlw	208
  5632   012430  6E0E               	movwf	read_prec_or_width@c^0,c
  5633   012432  0E09               	movlw	9
  5634   012434  640E               	cpfsgt	read_prec_or_width@c^0,c
  5635   012436  EF1F  F092         	goto	u2991
  5636   01243A  EF21  F092         	goto	u2990
  5637   01243E                     u2991:
  5638   01243E  EFF4  F091         	goto	l3560
  5639   012442                     u2990:
  5640   012442                     l1295:
  5641                           
  5642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  5643   012442  C00F  F008         	movff	read_prec_or_width@n,?_read_prec_or_width
  5644   012446  C010  F009         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  5645   01244A  0012               	return		;funcret
  5646   01244C                     __end_of_read_prec_or_width:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function _dtoa *****************
  5650 ;; Defined at:
  5651 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5654 ;;		 -> NULL(0), 
  5655 ;;  d               4   31[COMRAM] long 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  i               2   41[COMRAM] int 
  5658 ;;  w               2   39[COMRAM] int 
  5659 ;;  p               2   37[COMRAM] int 
  5660 ;;  s               1   43[COMRAM] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      void 
  5663 ;; Registers used:
  5664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5670 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;Total ram usage:       15 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 6
  5677 ;; This function calls:
  5678 ;;		___aldiv
  5679 ;;		___almod
  5680 ;;		_abs
  5681 ;;		_pad
  5682 ;; This function is called by:
  5683 ;;		_vfpfcnvrt
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text14
  5688   0113B0                     __ptext14:
  5689                           	callstack 0
  5690   0113B0                     _dtoa:
  5691                           	callstack 20
  5692   0113B0                     
  5693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  5694   0113B0  BE23               	btfsc	(dtoa@d+3)^0,7,c
  5695   0113B2  EFDD  F089         	goto	u2661
  5696   0113B6  EFE0  F089         	goto	u2660
  5697   0113BA                     u2661:
  5698   0113BA  0E01               	movlw	1
  5699   0113BC  EFE1  F089         	goto	u2670
  5700   0113C0                     u2660:
  5701   0113C0  0E00               	movlw	0
  5702   0113C2                     u2670:
  5703   0113C2  6E2C               	movwf	dtoa@s^0,c
  5704   0113C4                     
  5705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  5706   0113C4  502C               	movf	dtoa@s^0,w,c
  5707   0113C6  B4D8               	btfsc	status,2,c
  5708   0113C8  EFE8  F089         	goto	u2681
  5709   0113CC  EFEA  F089         	goto	u2680
  5710   0113D0                     u2681:
  5711   0113D0  EFF2  F089         	goto	l3414
  5712   0113D4                     u2680:
  5713   0113D4                     
  5714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  5715   0113D4  1E23               	comf	(dtoa@d+3)^0,f,c
  5716   0113D6  1E22               	comf	(dtoa@d+2)^0,f,c
  5717   0113D8  1E21               	comf	(dtoa@d+1)^0,f,c
  5718   0113DA  6C20               	negf	dtoa@d^0,c
  5719   0113DC  0E00               	movlw	0
  5720   0113DE  2221               	addwfc	(dtoa@d+1)^0,f,c
  5721   0113E0  2222               	addwfc	(dtoa@d+2)^0,f,c
  5722   0113E2  2223               	addwfc	(dtoa@d+3)^0,f,c
  5723   0113E4                     l3414:
  5724                           
  5725                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  5726   0113E4  0100               	movlb	0	; () banked
  5727   0113E6  BF63               	btfsc	(_prec+1)& (0+255),7,b
  5728   0113E8  EFF8  F089         	goto	u2691
  5729   0113EC  EFFA  F089         	goto	u2690
  5730   0113F0                     u2691:
  5731   0113F0  EFFB  F089         	goto	l3418
  5732   0113F4                     u2690:
  5733   0113F4                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  5736   0113F4  925C               	bcf	_flags^0,1,c
  5737   0113F6                     l3418:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  5741   0113F6  BF63               	btfsc	(_prec+1)& (0+255),7,b
  5742   0113F8  EF02  F08A         	goto	u2700
  5743   0113FC  EF00  F08A         	goto	u2701
  5744   011400                     u2701:
  5745   011400  EF08  F08A         	goto	l1233
  5746   011404                     u2700:
  5747   011404                     
  5748                           ; BSR set to: 0
  5749   011404  0E00               	movlw	0
  5750   011406  6E27               	movwf	(dtoa@p+1)^0,c
  5751   011408  0E01               	movlw	1
  5752   01140A  6E26               	movwf	dtoa@p^0,c
  5753   01140C  EF0C  F08A         	goto	l1235
  5754   011410                     l1233:
  5755                           
  5756                           ; BSR set to: 0
  5757   011410  C062  F026         	movff	_prec,dtoa@p
  5758   011414  C063  F027         	movff	_prec+1,dtoa@p+1
  5759   011418                     l1235:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  5763   011418  C060  F028         	movff	_width,dtoa@w
  5764   01141C  C061  F029         	movff	_width+1,dtoa@w+1
  5765   011420                     
  5766                           ; BSR set to: 0
  5767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  5768   011420  502C               	movf	dtoa@s^0,w,c
  5769   011422  B4D8               	btfsc	status,2,c
  5770   011424  EF16  F08A         	goto	u2711
  5771   011428  EF18  F08A         	goto	u2710
  5772   01142C                     u2711:
  5773   01142C  EF2F  F08A         	goto	l1236
  5774   011430                     u2710:
  5775   011430                     
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  5778   011430  0628               	decf	dtoa@w^0,f,c
  5779   011432  A0D8               	btfss	status,0,c
  5780   011434  0629               	decf	(dtoa@w+1)^0,f,c
  5781   011436                     
  5782                           ; BSR set to: 0
  5783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  5784   011436  502C               	movf	dtoa@s^0,w,c
  5785   011438  A4D8               	btfss	status,2,c
  5786   01143A  EF21  F08A         	goto	u2721
  5787   01143E  EF23  F08A         	goto	u2720
  5788   011442                     u2721:
  5789   011442  EF29  F08A         	goto	l3430
  5790   011446                     u2720:
  5791   011446                     
  5792                           ; BSR set to: 0
  5793   011446  0E00               	movlw	0
  5794   011448  6E25               	movwf	(_dtoa$1519+1)^0,c
  5795   01144A  0E2B               	movlw	43
  5796   01144C  6E24               	movwf	_dtoa$1519^0,c
  5797   01144E  EF2D  F08A         	goto	l3432
  5798   011452                     l3430:
  5799                           
  5800                           ; BSR set to: 0
  5801   011452  0E00               	movlw	0
  5802   011454  6E25               	movwf	(_dtoa$1519+1)^0,c
  5803   011456  0E2D               	movlw	45
  5804   011458  6E24               	movwf	_dtoa$1519^0,c
  5805   01145A                     l3432:
  5806                           
  5807                           ; BSR set to: 0
  5808   01145A  C024  F02C         	movff	_dtoa$1519,dtoa@s
  5809   01145E                     l1236:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  5813   01145E  0E00               	movlw	0
  5814   011460  6E2B               	movwf	(dtoa@i+1)^0,c
  5815   011462  0E1F               	movlw	31
  5816   011464  6E2A               	movwf	dtoa@i^0,c
  5817   011466                     
  5818                           ; BSR set to: 0
  5819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  5820   011466  0E00               	movlw	0
  5821   011468  6FB0               	movwf	(_dbuf+31)& (0+255),b
  5822                           
  5823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5824   01146A  EF7B  F08A         	goto	l3446
  5825   01146E                     l3436:
  5826                           
  5827                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  5828   01146E  062A               	decf	dtoa@i^0,f,c
  5829   011470  A0D8               	btfss	status,0,c
  5830   011472  062B               	decf	(dtoa@i+1)^0,f,c
  5831   011474                     
  5832                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5833   011474  0E91               	movlw	low _dbuf
  5834   011476  242A               	addwf	dtoa@i^0,w,c
  5835   011478  6ED9               	movwf	fsr2l,c
  5836   01147A  0E00               	movlw	high _dbuf
  5837   01147C  202B               	addwfc	(dtoa@i+1)^0,w,c
  5838   01147E  6EDA               	movwf	fsr2h,c
  5839   011480  C020  F002         	movff	dtoa@d,___almod@dividend
  5840   011484  C021  F003         	movff	dtoa@d+1,___almod@dividend+1
  5841   011488  C022  F004         	movff	dtoa@d+2,___almod@dividend+2
  5842   01148C  C023  F005         	movff	dtoa@d+3,___almod@dividend+3
  5843   011490  0E0A               	movlw	10
  5844   011492  6E06               	movwf	___almod@divisor^0,c
  5845   011494  0E00               	movlw	0
  5846   011496  6E07               	movwf	(___almod@divisor+1)^0,c
  5847   011498  0E00               	movlw	0
  5848   01149A  6E08               	movwf	(___almod@divisor+2)^0,c
  5849   01149C  0E00               	movlw	0
  5850   01149E  6E09               	movwf	(___almod@divisor+3)^0,c
  5851   0114A0  EC49  F091         	call	___almod	;wreg free
  5852   0114A4  C002  F00C         	movff	?___almod,abs@a
  5853   0114A8  C003  F00D         	movff	?___almod+1,abs@a+1
  5854   0114AC  ECB3  F094         	call	_abs	;wreg free
  5855   0114B0  500C               	movf	?_abs^0,w,c
  5856   0114B2  0F30               	addlw	48
  5857   0114B4  6EDF               	movwf	indf2,c
  5858   0114B6                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  5860   0114B6  0626               	decf	dtoa@p^0,f,c
  5861   0114B8  A0D8               	btfss	status,0,c
  5862   0114BA  0627               	decf	(dtoa@p+1)^0,f,c
  5863   0114BC                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  5865   0114BC  0628               	decf	dtoa@w^0,f,c
  5866   0114BE  A0D8               	btfss	status,0,c
  5867   0114C0  0629               	decf	(dtoa@w+1)^0,f,c
  5868   0114C2                     
  5869                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  5870   0114C2  C020  F002         	movff	dtoa@d,___aldiv@dividend
  5871   0114C6  C021  F003         	movff	dtoa@d+1,___aldiv@dividend+1
  5872   0114CA  C022  F004         	movff	dtoa@d+2,___aldiv@dividend+2
  5873   0114CE  C023  F005         	movff	dtoa@d+3,___aldiv@dividend+3
  5874   0114D2  0E0A               	movlw	10
  5875   0114D4  6E06               	movwf	___aldiv@divisor^0,c
  5876   0114D6  0E00               	movlw	0
  5877   0114D8  6E07               	movwf	(___aldiv@divisor+1)^0,c
  5878   0114DA  0E00               	movlw	0
  5879   0114DC  6E08               	movwf	(___aldiv@divisor+2)^0,c
  5880   0114DE  0E00               	movlw	0
  5881   0114E0  6E09               	movwf	(___aldiv@divisor+3)^0,c
  5882   0114E2  EC47  F08F         	call	___aldiv	;wreg free
  5883   0114E6  C002  F020         	movff	?___aldiv,dtoa@d
  5884   0114EA  C003  F021         	movff	?___aldiv+1,dtoa@d+1
  5885   0114EE  C004  F022         	movff	?___aldiv+2,dtoa@d+2
  5886   0114F2  C005  F023         	movff	?___aldiv+3,dtoa@d+3
  5887   0114F6                     l3446:
  5888                           
  5889                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5890   0114F6  BE2B               	btfsc	(dtoa@i+1)^0,7,c
  5891   0114F8  EF86  F08A         	goto	u2731
  5892   0114FC  502B               	movf	(dtoa@i+1)^0,w,c
  5893   0114FE  E108               	bnz	u2730
  5894   011500  042A               	decf	dtoa@i^0,w,c
  5895   011502  A0D8               	btfss	status,0,c
  5896   011504  EF86  F08A         	goto	u2731
  5897   011508  EF88  F08A         	goto	u2730
  5898   01150C                     u2731:
  5899   01150C  EFB4  F08A         	goto	l3456
  5900   011510                     u2730:
  5901   011510  5020               	movf	dtoa@d^0,w,c
  5902   011512  1021               	iorwf	(dtoa@d+1)^0,w,c
  5903   011514  1022               	iorwf	(dtoa@d+2)^0,w,c
  5904   011516  1023               	iorwf	(dtoa@d+3)^0,w,c
  5905   011518  A4D8               	btfss	status,2,c
  5906   01151A  EF91  F08A         	goto	u2741
  5907   01151E  EF93  F08A         	goto	u2740
  5908   011522                     u2741:
  5909   011522  EF37  F08A         	goto	l3436
  5910   011526                     u2740:
  5911   011526  BE27               	btfsc	(dtoa@p+1)^0,7,c
  5912   011528  EFA0  F08A         	goto	u2750
  5913   01152C  5027               	movf	(dtoa@p+1)^0,w,c
  5914   01152E  E106               	bnz	u2751
  5915   011530  0426               	decf	dtoa@p^0,w,c
  5916   011532  B0D8               	btfsc	status,0,c
  5917   011534  EF9E  F08A         	goto	u2751
  5918   011538  EFA0  F08A         	goto	u2750
  5919   01153C                     u2751:
  5920   01153C  EF37  F08A         	goto	l3436
  5921   011540                     u2750:
  5922   011540  BE29               	btfsc	(dtoa@w+1)^0,7,c
  5923   011542  EFAB  F08A         	goto	u2761
  5924   011546  5029               	movf	(dtoa@w+1)^0,w,c
  5925   011548  E108               	bnz	u2760
  5926   01154A  0428               	decf	dtoa@w^0,w,c
  5927   01154C  A0D8               	btfss	status,0,c
  5928   01154E  EFAB  F08A         	goto	u2761
  5929   011552  EFAD  F08A         	goto	u2760
  5930   011556                     u2761:
  5931   011556  EFB4  F08A         	goto	l3456
  5932   01155A                     u2760:
  5933   01155A  B25C               	btfsc	_flags^0,1,c
  5934   01155C  EFB2  F08A         	goto	u2771
  5935   011560  EFB4  F08A         	goto	u2770
  5936   011564                     u2771:
  5937   011564  EF37  F08A         	goto	l3436
  5938   011568                     u2770:
  5939   011568                     l3456:
  5940                           
  5941                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  5942   011568  502C               	movf	dtoa@s^0,w,c
  5943   01156A  B4D8               	btfsc	status,2,c
  5944   01156C  EFBA  F08A         	goto	u2781
  5945   011570  EFBC  F08A         	goto	u2780
  5946   011574                     u2781:
  5947   011574  EFC7  F08A         	goto	l3462
  5948   011578                     u2780:
  5949   011578                     
  5950                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  5951   011578  062A               	decf	dtoa@i^0,f,c
  5952   01157A  A0D8               	btfss	status,0,c
  5953   01157C  062B               	decf	(dtoa@i+1)^0,f,c
  5954   01157E                     
  5955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  5956   01157E  0E91               	movlw	low _dbuf
  5957   011580  242A               	addwf	dtoa@i^0,w,c
  5958   011582  6ED9               	movwf	fsr2l,c
  5959   011584  0E00               	movlw	high _dbuf
  5960   011586  202B               	addwfc	(dtoa@i+1)^0,w,c
  5961   011588  6EDA               	movwf	fsr2h,c
  5962   01158A  C02C  FFDF         	movff	dtoa@s,indf2
  5963   01158E                     l3462:
  5964                           
  5965                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5966   01158E  C01E  F013         	movff	dtoa@fp,pad@fp
  5967   011592  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5968   011596  0E91               	movlw	low _dbuf
  5969   011598  242A               	addwf	dtoa@i^0,w,c
  5970   01159A  6E15               	movwf	pad@buf^0,c
  5971   01159C  0E00               	movlw	high _dbuf
  5972   01159E  202B               	addwfc	(dtoa@i+1)^0,w,c
  5973   0115A0  6E16               	movwf	(pad@buf+1)^0,c
  5974   0115A2  C028  F017         	movff	dtoa@w,pad@p
  5975   0115A6  C029  F018         	movff	dtoa@w+1,pad@p+1
  5976   0115AA  ECED  F092         	call	_pad	;wreg free
  5977   0115AE  0012               	return		;funcret
  5978   0115B0                     __end_of_dtoa:
  5979                           	callstack 0
  5980                           
  5981 ;; *************** function _pad *****************
  5982 ;; Defined at:
  5983 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5986 ;;		 -> NULL(0), 
  5987 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5988 ;;		 -> dbuf(32), 
  5989 ;;  p               2   22[COMRAM] int 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  w               2   27[COMRAM] int 
  5992 ;;  i               2   25[COMRAM] int 
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6002 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6006 ;;Total ram usage:       11 bytes
  6007 ;; Hardware stack levels used: 1
  6008 ;; Hardware stack levels required when called: 5
  6009 ;; This function calls:
  6010 ;;		_fputc
  6011 ;;		_fputs
  6012 ;; This function is called by:
  6013 ;;		_dtoa
  6014 ;;		_xtoa
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text15
  6019   0125DA                     __ptext15:
  6020                           	callstack 0
  6021   0125DA                     _pad:
  6022                           	callstack 20
  6023   0125DA                     
  6024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  6025   0125DA  A05C               	btfss	_flags^0,0,c
  6026   0125DC  EFF2  F092         	goto	u2591
  6027   0125E0  EFF4  F092         	goto	u2590
  6028   0125E4                     u2591:
  6029   0125E4  EFFE  F092         	goto	l3380
  6030   0125E8                     u2590:
  6031   0125E8                     
  6032                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  6033   0125E8  C015  F00C         	movff	pad@buf,fputs@s
  6034   0125EC  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6035   0125F0  C013  F00E         	movff	pad@fp,fputs@fp
  6036   0125F4  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6037   0125F8  EC91  F094         	call	_fputs	;wreg free
  6038   0125FC                     l3380:
  6039                           
  6040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  6041   0125FC  BE18               	btfsc	(pad@p+1)^0,7,c
  6042   0125FE  EF03  F093         	goto	u2601
  6043   012602  EF05  F093         	goto	u2600
  6044   012606                     u2601:
  6045   012606  EF0B  F093         	goto	l3384
  6046   01260A                     u2600:
  6047   01260A  C017  F01C         	movff	pad@p,pad@w
  6048   01260E  C018  F01D         	movff	pad@p+1,pad@w+1
  6049   012612  EF0F  F093         	goto	l1222
  6050   012616                     l3384:
  6051   012616  0E00               	movlw	0
  6052   012618  6E1D               	movwf	(pad@w+1)^0,c
  6053   01261A  0E00               	movlw	0
  6054   01261C  6E1C               	movwf	pad@w^0,c
  6055   01261E                     l1222:
  6056                           
  6057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  6058   01261E  0E00               	movlw	0
  6059   012620  6E1B               	movwf	(pad@i+1)^0,c
  6060   012622  0E00               	movlw	0
  6061   012624  6E1A               	movwf	pad@i^0,c
  6062                           
  6063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6064   012626  EF21  F093         	goto	l3390
  6065   01262A                     l3386:
  6066                           
  6067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  6068   01262A  0E00               	movlw	0
  6069   01262C  6E04               	movwf	(fputc@c+1)^0,c
  6070   01262E  0E20               	movlw	32
  6071   012630  6E03               	movwf	fputc@c^0,c
  6072   012632  C013  F005         	movff	pad@fp,fputc@fp
  6073   012636  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6074   01263A  EC26  F092         	call	_fputc	;wreg free
  6075   01263E                     
  6076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  6077   01263E  4A1A               	infsnz	pad@i^0,f,c
  6078   012640  2A1B               	incf	(pad@i+1)^0,f,c
  6079   012642                     l3390:
  6080                           
  6081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6082   012642  501C               	movf	pad@w^0,w,c
  6083   012644  5C1A               	subwf	pad@i^0,w,c
  6084   012646  501B               	movf	(pad@i+1)^0,w,c
  6085   012648  0A80               	xorlw	128
  6086   01264A  6E19               	movwf	??_pad^0,c
  6087   01264C  501D               	movf	(pad@w+1)^0,w,c
  6088   01264E  0A80               	xorlw	128
  6089   012650  5819               	subwfb	??_pad^0,w,c
  6090   012652  A0D8               	btfss	status,0,c
  6091   012654  EF2E  F093         	goto	u2611
  6092   012658  EF30  F093         	goto	u2610
  6093   01265C                     u2611:
  6094   01265C  EF15  F093         	goto	l3386
  6095   012660                     u2610:
  6096   012660                     
  6097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  6098   012660  B05C               	btfsc	_flags^0,0,c
  6099   012662  EF35  F093         	goto	u2621
  6100   012666  EF37  F093         	goto	u2620
  6101   01266A                     u2621:
  6102   01266A  EF41  F093         	goto	l1227
  6103   01266E                     u2620:
  6104   01266E                     
  6105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  6106   01266E  C015  F00C         	movff	pad@buf,fputs@s
  6107   012672  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6108   012676  C013  F00E         	movff	pad@fp,fputs@fp
  6109   01267A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6110   01267E  EC91  F094         	call	_fputs	;wreg free
  6111   012682                     l1227:
  6112   012682  0012               	return		;funcret
  6113   012684                     __end_of_pad:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _fputs *****************
  6117 ;; Defined at:
  6118 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6121 ;;		 -> dbuf(32), 
  6122 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6123 ;;		 -> NULL(0), 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  i               2   16[COMRAM] int 
  6126 ;;  c               1   15[COMRAM] unsigned char 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  2   11[COMRAM] int 
  6129 ;; Registers used:
  6130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6140 ;;Total ram usage:        7 bytes
  6141 ;; Hardware stack levels used: 1
  6142 ;; Hardware stack levels required when called: 4
  6143 ;; This function calls:
  6144 ;;		_fputc
  6145 ;; This function is called by:
  6146 ;;		_pad
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text16
  6151   012922                     __ptext16:
  6152                           	callstack 0
  6153   012922                     _fputs:
  6154                           	callstack 20
  6155   012922  0E00               	movlw	0
  6156   012924  6E12               	movwf	(fputs@i+1)^0,c
  6157   012926  0E00               	movlw	0
  6158   012928  6E11               	movwf	fputs@i^0,c
  6159   01292A  EFA2  F094         	goto	l3288
  6160   01292E                     l3284:
  6161   01292E  C010  F003         	movff	fputs@c,fputc@c
  6162   012932  6A04               	clrf	(fputc@c+1)^0,c
  6163   012934  C00E  F005         	movff	fputs@fp,fputc@fp
  6164   012938  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6165   01293C  EC26  F092         	call	_fputc	;wreg free
  6166   012940  4A11               	infsnz	fputs@i^0,f,c
  6167   012942  2A12               	incf	(fputs@i+1)^0,f,c
  6168   012944                     l3288:
  6169   012944  5011               	movf	fputs@i^0,w,c
  6170   012946  240C               	addwf	fputs@s^0,w,c
  6171   012948  6ED9               	movwf	fsr2l,c
  6172   01294A  5012               	movf	(fputs@i+1)^0,w,c
  6173   01294C  200D               	addwfc	(fputs@s+1)^0,w,c
  6174   01294E  6EDA               	movwf	fsr2h,c
  6175   012950  50DF               	movf	indf2,w,c
  6176   012952  6E10               	movwf	fputs@c^0,c
  6177   012954  5010               	movf	fputs@c^0,w,c
  6178   012956  A4D8               	btfss	status,2,c
  6179   012958  EFB0  F094         	goto	u2461
  6180   01295C  EFB2  F094         	goto	u2460
  6181   012960                     u2461:
  6182   012960  EF97  F094         	goto	l3284
  6183   012964                     u2460:
  6184   012964  0012               	return		;funcret
  6185   012966                     __end_of_fputs:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _fputc *****************
  6189 ;; Defined at:
  6190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  c               2    2[COMRAM] int 
  6193 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6194 ;;		 -> NULL(0), 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  2    2[COMRAM] int 
  6199 ;; Registers used:
  6200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;Total ram usage:        9 bytes
  6211 ;; Hardware stack levels used: 1
  6212 ;; Hardware stack levels required when called: 3
  6213 ;; This function calls:
  6214 ;;		_putch
  6215 ;; This function is called by:
  6216 ;;		_pad
  6217 ;;		_stoa
  6218 ;;		_vfpfcnvrt
  6219 ;;		_fputs
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text17
  6224   01244C                     __ptext17:
  6225                           	callstack 0
  6226   01244C                     _fputc:
  6227                           	callstack 20
  6228   01244C  5005               	movf	fputc@fp^0,w,c
  6229   01244E  1006               	iorwf	(fputc@fp+1)^0,w,c
  6230   012450  B4D8               	btfsc	status,2,c
  6231   012452  EF2D  F092         	goto	u2421
  6232   012456  EF2F  F092         	goto	u2420
  6233   01245A                     u2421:
  6234   01245A  EF38  F092         	goto	l3272
  6235   01245E                     u2420:
  6236   01245E  5005               	movf	fputc@fp^0,w,c
  6237   012460  1006               	iorwf	(fputc@fp+1)^0,w,c
  6238   012462  A4D8               	btfss	status,2,c
  6239   012464  EF36  F092         	goto	u2431
  6240   012468  EF38  F092         	goto	u2430
  6241   01246C                     u2431:
  6242   01246C  EF3D  F092         	goto	l3274
  6243   012470                     u2430:
  6244   012470                     l3272:
  6245   012470  5003               	movf	fputc@c^0,w,c
  6246   012472  EC71  F095         	call	_putch
  6247   012476  EF8A  F092         	goto	l1367
  6248   01247A                     l3274:
  6249   01247A  EE20 F00A          	lfsr	2,10
  6250   01247E  5005               	movf	fputc@fp^0,w,c
  6251   012480  26D9               	addwf	fsr2l,f,c
  6252   012482  5006               	movf	(fputc@fp+1)^0,w,c
  6253   012484  22DA               	addwfc	fsr2h,f,c
  6254   012486  50DE               	movf	postinc2,w,c
  6255   012488  10DE               	iorwf	postinc2,w,c
  6256   01248A  B4D8               	btfsc	status,2,c
  6257   01248C  EF4A  F092         	goto	u2441
  6258   012490  EF4C  F092         	goto	u2440
  6259   012494                     u2441:
  6260   012494  EF67  F092         	goto	l3278
  6261   012498                     u2440:
  6262   012498  EE20 F00A          	lfsr	2,10
  6263   01249C  5005               	movf	fputc@fp^0,w,c
  6264   01249E  26D9               	addwf	fsr2l,f,c
  6265   0124A0  5006               	movf	(fputc@fp+1)^0,w,c
  6266   0124A2  22DA               	addwfc	fsr2h,f,c
  6267   0124A4  EE10 F003          	lfsr	1,3
  6268   0124A8  5005               	movf	fputc@fp^0,w,c
  6269   0124AA  26E1               	addwf	fsr1l,f,c
  6270   0124AC  5006               	movf	(fputc@fp+1)^0,w,c
  6271   0124AE  22E2               	addwfc	fsr1h,f,c
  6272   0124B0  50DE               	movf	postinc2,w,c
  6273   0124B2  5CE6               	subwf	postinc1,w,c
  6274   0124B4  50E6               	movf	postinc1,w,c
  6275   0124B6  0A80               	xorlw	128
  6276   0124B8  6E0B               	movwf	(??_fputc+4)^0,c
  6277   0124BA  50DE               	movf	postinc2,w,c
  6278   0124BC  0A80               	xorlw	128
  6279   0124BE  580B               	subwfb	(??_fputc+4)^0,w,c
  6280   0124C0  B0D8               	btfsc	status,0,c
  6281   0124C2  EF65  F092         	goto	u2451
  6282   0124C6  EF67  F092         	goto	u2450
  6283   0124CA                     u2451:
  6284   0124CA  EF8A  F092         	goto	l1367
  6285   0124CE                     u2450:
  6286   0124CE                     l3278:
  6287   0124CE  EE20 F003          	lfsr	2,3
  6288   0124D2  5005               	movf	fputc@fp^0,w,c
  6289   0124D4  26D9               	addwf	fsr2l,f,c
  6290   0124D6  5006               	movf	(fputc@fp+1)^0,w,c
  6291   0124D8  22DA               	addwfc	fsr2h,f,c
  6292   0124DA  CFDE F007          	movff	postinc2,??_fputc
  6293   0124DE  CFDD F008          	movff	postdec2,??_fputc+1
  6294   0124E2  C005  FFD9         	movff	fputc@fp,fsr2l
  6295   0124E6  C006  FFDA         	movff	fputc@fp+1,fsr2h
  6296   0124EA  CFDE F009          	movff	postinc2,??_fputc+2
  6297   0124EE  CFDD F00A          	movff	postdec2,??_fputc+3
  6298   0124F2  5007               	movf	??_fputc^0,w,c
  6299   0124F4  2409               	addwf	(??_fputc+2)^0,w,c
  6300   0124F6  6ED9               	movwf	fsr2l,c
  6301   0124F8  5008               	movf	(??_fputc+1)^0,w,c
  6302   0124FA  200A               	addwfc	(??_fputc+3)^0,w,c
  6303   0124FC  6EDA               	movwf	fsr2h,c
  6304   0124FE  C003  FFDF         	movff	fputc@c,indf2
  6305   012502  EE20 F003          	lfsr	2,3
  6306   012506  5005               	movf	fputc@fp^0,w,c
  6307   012508  26D9               	addwf	fsr2l,f,c
  6308   01250A  5006               	movf	(fputc@fp+1)^0,w,c
  6309   01250C  22DA               	addwfc	fsr2h,f,c
  6310   01250E  2ADE               	incf	postinc2,f,c
  6311   012510  0E00               	movlw	0
  6312   012512  22DD               	addwfc	postdec2,f,c
  6313   012514                     l1367:
  6314   012514  0012               	return		;funcret
  6315   012516                     __end_of_fputc:
  6316                           	callstack 0
  6317                           
  6318 ;; *************** function _putch *****************
  6319 ;; Defined at:
  6320 ;;		line 55 in file "uart_main.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  c               1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  c               1    1[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;Total ram usage:        1 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 2
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_putstring
  6345 ;;		_fputc
  6346 ;;		_read_line_streem
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text18
  6351   012AE2                     __ptext18:
  6352                           	callstack 0
  6353   012AE2                     _putch:
  6354                           	callstack 27
  6355                           
  6356                           ;incstack = 0
  6357                           ;putch@c stored from wreg
  6358   012AE2  6E02               	movwf	putch@c^0,c
  6359   012AE4                     l421:
  6360   012AE4  A2A8               	btfss	168,1,c	;volatile
  6361   012AE6  EF77  F095         	goto	u2411
  6362   012AEA  EF79  F095         	goto	u2410
  6363   012AEE                     u2411:
  6364   012AEE  EF72  F095         	goto	l421
  6365   012AF2                     u2410:
  6366   012AF2                     
  6367                           ;uart_main.c: 61:     TXREG2 = c;
  6368   012AF2  C002  FFA9         	movff	putch@c,4009	;volatile
  6369   012AF6  0012               	return		;funcret
  6370   012AF8                     __end_of_putch:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _abs *****************
  6374 ;; Defined at:
  6375 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  a               2   11[COMRAM] int 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  2   11[COMRAM] int 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, status,0
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;Total ram usage:        4 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 2
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_dtoa
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text19
  6404   012966                     __ptext19:
  6405                           	callstack 0
  6406   012966                     _abs:
  6407                           	callstack 23
  6408   012966  BE0D               	btfsc	(abs@a+1)^0,7,c
  6409   012968  EFC0  F094         	goto	u2630
  6410   01296C  500D               	movf	(abs@a+1)^0,w,c
  6411   01296E  E106               	bnz	u2631
  6412   012970  040C               	decf	abs@a^0,w,c
  6413   012972  B0D8               	btfsc	status,0,c
  6414   012974  EFBE  F094         	goto	u2631
  6415   012978  EFC0  F094         	goto	u2630
  6416   01297C                     u2631:
  6417   01297C  EFCE  F094         	goto	l1352
  6418   012980                     u2630:
  6419   012980  C00C  F00E         	movff	abs@a,??_abs
  6420   012984  C00D  F00F         	movff	abs@a+1,??_abs+1
  6421   012988  1E0E               	comf	??_abs^0,f,c
  6422   01298A  1E0F               	comf	(??_abs+1)^0,f,c
  6423   01298C  4A0E               	infsnz	??_abs^0,f,c
  6424   01298E  2A0F               	incf	(??_abs+1)^0,f,c
  6425   012990  C00E  F00C         	movff	??_abs,?_abs
  6426   012994  C00F  F00D         	movff	??_abs+1,?_abs+1
  6427   012998  EFD2  F094         	goto	l1355
  6428   01299C                     l1352:
  6429   01299C  C00C  F00C         	movff	abs@a,?_abs
  6430   0129A0  C00D  F00D         	movff	abs@a+1,?_abs+1
  6431   0129A4                     l1355:
  6432   0129A4  0012               	return		;funcret
  6433   0129A6                     __end_of_abs:
  6434                           	callstack 0
  6435                           
  6436 ;; *************** function ___almod *****************
  6437 ;; Defined at:
  6438 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\almod.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  dividend        4    1[COMRAM] long 
  6441 ;;  divisor         4    5[COMRAM] long 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  sign            1   10[COMRAM] unsigned char 
  6444 ;;  counter         1    9[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  4    1[COMRAM] long 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6454 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6457 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6458 ;;Total ram usage:       10 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 2
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_dtoa
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text20
  6469   012292                     __ptext20:
  6470                           	callstack 0
  6471   012292                     ___almod:
  6472                           	callstack 23
  6473   012292  0E00               	movlw	0
  6474   012294  6E0B               	movwf	___almod@sign^0,c
  6475   012296  BE05               	btfsc	(___almod@dividend+3)^0,7,c
  6476   012298  EF52  F091         	goto	u2530
  6477   01229C  EF50  F091         	goto	u2531
  6478   0122A0                     u2531:
  6479   0122A0  EF5C  F091         	goto	l3348
  6480   0122A4                     u2530:
  6481   0122A4  1E05               	comf	(___almod@dividend+3)^0,f,c
  6482   0122A6  1E04               	comf	(___almod@dividend+2)^0,f,c
  6483   0122A8  1E03               	comf	(___almod@dividend+1)^0,f,c
  6484   0122AA  6C02               	negf	___almod@dividend^0,c
  6485   0122AC  0E00               	movlw	0
  6486   0122AE  2203               	addwfc	(___almod@dividend+1)^0,f,c
  6487   0122B0  2204               	addwfc	(___almod@dividend+2)^0,f,c
  6488   0122B2  2205               	addwfc	(___almod@dividend+3)^0,f,c
  6489   0122B4  0E01               	movlw	1
  6490   0122B6  6E0B               	movwf	___almod@sign^0,c
  6491   0122B8                     l3348:
  6492   0122B8  BE09               	btfsc	(___almod@divisor+3)^0,7,c
  6493   0122BA  EF63  F091         	goto	u2540
  6494   0122BE  EF61  F091         	goto	u2541
  6495   0122C2                     u2541:
  6496   0122C2  EF6B  F091         	goto	l3352
  6497   0122C6                     u2540:
  6498   0122C6  1E09               	comf	(___almod@divisor+3)^0,f,c
  6499   0122C8  1E08               	comf	(___almod@divisor+2)^0,f,c
  6500   0122CA  1E07               	comf	(___almod@divisor+1)^0,f,c
  6501   0122CC  6C06               	negf	___almod@divisor^0,c
  6502   0122CE  0E00               	movlw	0
  6503   0122D0  2207               	addwfc	(___almod@divisor+1)^0,f,c
  6504   0122D2  2208               	addwfc	(___almod@divisor+2)^0,f,c
  6505   0122D4  2209               	addwfc	(___almod@divisor+3)^0,f,c
  6506   0122D6                     l3352:
  6507   0122D6  5006               	movf	___almod@divisor^0,w,c
  6508   0122D8  1007               	iorwf	(___almod@divisor+1)^0,w,c
  6509   0122DA  1008               	iorwf	(___almod@divisor+2)^0,w,c
  6510   0122DC  1009               	iorwf	(___almod@divisor+3)^0,w,c
  6511   0122DE  B4D8               	btfsc	status,2,c
  6512   0122E0  EF74  F091         	goto	u2551
  6513   0122E4  EF76  F091         	goto	u2550
  6514   0122E8                     u2551:
  6515   0122E8  EFA6  F091         	goto	l3368
  6516   0122EC                     u2550:
  6517   0122EC  0E01               	movlw	1
  6518   0122EE  6E0A               	movwf	___almod@counter^0,c
  6519   0122F0  EF80  F091         	goto	l3358
  6520   0122F4                     l3356:
  6521   0122F4  90D8               	bcf	status,0,c
  6522   0122F6  3606               	rlcf	___almod@divisor^0,f,c
  6523   0122F8  3607               	rlcf	(___almod@divisor+1)^0,f,c
  6524   0122FA  3608               	rlcf	(___almod@divisor+2)^0,f,c
  6525   0122FC  3609               	rlcf	(___almod@divisor+3)^0,f,c
  6526   0122FE  2A0A               	incf	___almod@counter^0,f,c
  6527   012300                     l3358:
  6528   012300  AE09               	btfss	(___almod@divisor+3)^0,7,c
  6529   012302  EF85  F091         	goto	u2561
  6530   012306  EF87  F091         	goto	u2560
  6531   01230A                     u2561:
  6532   01230A  EF7A  F091         	goto	l3356
  6533   01230E                     u2560:
  6534   01230E                     l3360:
  6535   01230E  5006               	movf	___almod@divisor^0,w,c
  6536   012310  5C02               	subwf	___almod@dividend^0,w,c
  6537   012312  5007               	movf	(___almod@divisor+1)^0,w,c
  6538   012314  5803               	subwfb	(___almod@dividend+1)^0,w,c
  6539   012316  5008               	movf	(___almod@divisor+2)^0,w,c
  6540   012318  5804               	subwfb	(___almod@dividend+2)^0,w,c
  6541   01231A  5009               	movf	(___almod@divisor+3)^0,w,c
  6542   01231C  5805               	subwfb	(___almod@dividend+3)^0,w,c
  6543   01231E  A0D8               	btfss	status,0,c
  6544   012320  EF94  F091         	goto	u2571
  6545   012324  EF96  F091         	goto	u2570
  6546   012328                     u2571:
  6547   012328  EF9E  F091         	goto	l3364
  6548   01232C                     u2570:
  6549   01232C  5006               	movf	___almod@divisor^0,w,c
  6550   01232E  5E02               	subwf	___almod@dividend^0,f,c
  6551   012330  5007               	movf	(___almod@divisor+1)^0,w,c
  6552   012332  5A03               	subwfb	(___almod@dividend+1)^0,f,c
  6553   012334  5008               	movf	(___almod@divisor+2)^0,w,c
  6554   012336  5A04               	subwfb	(___almod@dividend+2)^0,f,c
  6555   012338  5009               	movf	(___almod@divisor+3)^0,w,c
  6556   01233A  5A05               	subwfb	(___almod@dividend+3)^0,f,c
  6557   01233C                     l3364:
  6558   01233C  90D8               	bcf	status,0,c
  6559   01233E  3209               	rrcf	(___almod@divisor+3)^0,f,c
  6560   012340  3208               	rrcf	(___almod@divisor+2)^0,f,c
  6561   012342  3207               	rrcf	(___almod@divisor+1)^0,f,c
  6562   012344  3206               	rrcf	___almod@divisor^0,f,c
  6563   012346  2E0A               	decfsz	___almod@counter^0,f,c
  6564   012348  EF87  F091         	goto	l3360
  6565   01234C                     l3368:
  6566   01234C  500B               	movf	___almod@sign^0,w,c
  6567   01234E  B4D8               	btfsc	status,2,c
  6568   012350  EFAC  F091         	goto	u2581
  6569   012354  EFAE  F091         	goto	u2580
  6570   012358                     u2581:
  6571   012358  EFB6  F091         	goto	l3372
  6572   01235C                     u2580:
  6573   01235C  1E05               	comf	(___almod@dividend+3)^0,f,c
  6574   01235E  1E04               	comf	(___almod@dividend+2)^0,f,c
  6575   012360  1E03               	comf	(___almod@dividend+1)^0,f,c
  6576   012362  6C02               	negf	___almod@dividend^0,c
  6577   012364  0E00               	movlw	0
  6578   012366  2203               	addwfc	(___almod@dividend+1)^0,f,c
  6579   012368  2204               	addwfc	(___almod@dividend+2)^0,f,c
  6580   01236A  2205               	addwfc	(___almod@dividend+3)^0,f,c
  6581   01236C                     l3372:
  6582   01236C  C002  F002         	movff	___almod@dividend,?___almod
  6583   012370  C003  F003         	movff	___almod@dividend+1,?___almod+1
  6584   012374  C004  F004         	movff	___almod@dividend+2,?___almod+2
  6585   012378  C005  F005         	movff	___almod@dividend+3,?___almod+3
  6586   01237C  0012               	return		;funcret
  6587   01237E                     __end_of___almod:
  6588                           	callstack 0
  6589                           
  6590 ;; *************** function ___aldiv *****************
  6591 ;; Defined at:
  6592 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  dividend        4    1[COMRAM] long 
  6595 ;;  divisor         4    5[COMRAM] long 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  quotient        4   11[COMRAM] long 
  6598 ;;  sign            1   10[COMRAM] unsigned char 
  6599 ;;  counter         1    9[COMRAM] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  4    1[COMRAM] long 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6609 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;Total ram usage:       14 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 2
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_dtoa
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text21
  6624   011E8E                     __ptext21:
  6625                           	callstack 0
  6626   011E8E                     ___aldiv:
  6627                           	callstack 23
  6628   011E8E  0E00               	movlw	0
  6629   011E90  6E0B               	movwf	___aldiv@sign^0,c
  6630   011E92  BE09               	btfsc	(___aldiv@divisor+3)^0,7,c
  6631   011E94  EF50  F08F         	goto	u2470
  6632   011E98  EF4E  F08F         	goto	u2471
  6633   011E9C                     u2471:
  6634   011E9C  EF5A  F08F         	goto	l3304
  6635   011EA0                     u2470:
  6636   011EA0  1E09               	comf	(___aldiv@divisor+3)^0,f,c
  6637   011EA2  1E08               	comf	(___aldiv@divisor+2)^0,f,c
  6638   011EA4  1E07               	comf	(___aldiv@divisor+1)^0,f,c
  6639   011EA6  6C06               	negf	___aldiv@divisor^0,c
  6640   011EA8  0E00               	movlw	0
  6641   011EAA  2207               	addwfc	(___aldiv@divisor+1)^0,f,c
  6642   011EAC  2208               	addwfc	(___aldiv@divisor+2)^0,f,c
  6643   011EAE  2209               	addwfc	(___aldiv@divisor+3)^0,f,c
  6644   011EB0  0E01               	movlw	1
  6645   011EB2  6E0B               	movwf	___aldiv@sign^0,c
  6646   011EB4                     l3304:
  6647   011EB4  BE05               	btfsc	(___aldiv@dividend+3)^0,7,c
  6648   011EB6  EF61  F08F         	goto	u2480
  6649   011EBA  EF5F  F08F         	goto	u2481
  6650   011EBE                     u2481:
  6651   011EBE  EF6B  F08F         	goto	l3310
  6652   011EC2                     u2480:
  6653   011EC2  1E05               	comf	(___aldiv@dividend+3)^0,f,c
  6654   011EC4  1E04               	comf	(___aldiv@dividend+2)^0,f,c
  6655   011EC6  1E03               	comf	(___aldiv@dividend+1)^0,f,c
  6656   011EC8  6C02               	negf	___aldiv@dividend^0,c
  6657   011ECA  0E00               	movlw	0
  6658   011ECC  2203               	addwfc	(___aldiv@dividend+1)^0,f,c
  6659   011ECE  2204               	addwfc	(___aldiv@dividend+2)^0,f,c
  6660   011ED0  2205               	addwfc	(___aldiv@dividend+3)^0,f,c
  6661   011ED2  0E01               	movlw	1
  6662   011ED4  1A0B               	xorwf	___aldiv@sign^0,f,c
  6663   011ED6                     l3310:
  6664   011ED6  0E00               	movlw	0
  6665   011ED8  6E0C               	movwf	___aldiv@quotient^0,c
  6666   011EDA  0E00               	movlw	0
  6667   011EDC  6E0D               	movwf	(___aldiv@quotient+1)^0,c
  6668   011EDE  0E00               	movlw	0
  6669   011EE0  6E0E               	movwf	(___aldiv@quotient+2)^0,c
  6670   011EE2  0E00               	movlw	0
  6671   011EE4  6E0F               	movwf	(___aldiv@quotient+3)^0,c
  6672   011EE6  5006               	movf	___aldiv@divisor^0,w,c
  6673   011EE8  1007               	iorwf	(___aldiv@divisor+1)^0,w,c
  6674   011EEA  1008               	iorwf	(___aldiv@divisor+2)^0,w,c
  6675   011EEC  1009               	iorwf	(___aldiv@divisor+3)^0,w,c
  6676   011EEE  B4D8               	btfsc	status,2,c
  6677   011EF0  EF7C  F08F         	goto	u2491
  6678   011EF4  EF7E  F08F         	goto	u2490
  6679   011EF8                     u2491:
  6680   011EF8  EFB4  F08F         	goto	l3332
  6681   011EFC                     u2490:
  6682   011EFC  0E01               	movlw	1
  6683   011EFE  6E0A               	movwf	___aldiv@counter^0,c
  6684   011F00  EF88  F08F         	goto	l3318
  6685   011F04                     l3316:
  6686   011F04  90D8               	bcf	status,0,c
  6687   011F06  3606               	rlcf	___aldiv@divisor^0,f,c
  6688   011F08  3607               	rlcf	(___aldiv@divisor+1)^0,f,c
  6689   011F0A  3608               	rlcf	(___aldiv@divisor+2)^0,f,c
  6690   011F0C  3609               	rlcf	(___aldiv@divisor+3)^0,f,c
  6691   011F0E  2A0A               	incf	___aldiv@counter^0,f,c
  6692   011F10                     l3318:
  6693   011F10  AE09               	btfss	(___aldiv@divisor+3)^0,7,c
  6694   011F12  EF8D  F08F         	goto	u2501
  6695   011F16  EF8F  F08F         	goto	u2500
  6696   011F1A                     u2501:
  6697   011F1A  EF82  F08F         	goto	l3316
  6698   011F1E                     u2500:
  6699   011F1E                     l3320:
  6700   011F1E  90D8               	bcf	status,0,c
  6701   011F20  360C               	rlcf	___aldiv@quotient^0,f,c
  6702   011F22  360D               	rlcf	(___aldiv@quotient+1)^0,f,c
  6703   011F24  360E               	rlcf	(___aldiv@quotient+2)^0,f,c
  6704   011F26  360F               	rlcf	(___aldiv@quotient+3)^0,f,c
  6705   011F28  5006               	movf	___aldiv@divisor^0,w,c
  6706   011F2A  5C02               	subwf	___aldiv@dividend^0,w,c
  6707   011F2C  5007               	movf	(___aldiv@divisor+1)^0,w,c
  6708   011F2E  5803               	subwfb	(___aldiv@dividend+1)^0,w,c
  6709   011F30  5008               	movf	(___aldiv@divisor+2)^0,w,c
  6710   011F32  5804               	subwfb	(___aldiv@dividend+2)^0,w,c
  6711   011F34  5009               	movf	(___aldiv@divisor+3)^0,w,c
  6712   011F36  5805               	subwfb	(___aldiv@dividend+3)^0,w,c
  6713   011F38  A0D8               	btfss	status,0,c
  6714   011F3A  EFA1  F08F         	goto	u2511
  6715   011F3E  EFA3  F08F         	goto	u2510
  6716   011F42                     u2511:
  6717   011F42  EFAC  F08F         	goto	l3328
  6718   011F46                     u2510:
  6719   011F46  5006               	movf	___aldiv@divisor^0,w,c
  6720   011F48  5E02               	subwf	___aldiv@dividend^0,f,c
  6721   011F4A  5007               	movf	(___aldiv@divisor+1)^0,w,c
  6722   011F4C  5A03               	subwfb	(___aldiv@dividend+1)^0,f,c
  6723   011F4E  5008               	movf	(___aldiv@divisor+2)^0,w,c
  6724   011F50  5A04               	subwfb	(___aldiv@dividend+2)^0,f,c
  6725   011F52  5009               	movf	(___aldiv@divisor+3)^0,w,c
  6726   011F54  5A05               	subwfb	(___aldiv@dividend+3)^0,f,c
  6727   011F56  800C               	bsf	___aldiv@quotient^0,0,c
  6728   011F58                     l3328:
  6729   011F58  90D8               	bcf	status,0,c
  6730   011F5A  3209               	rrcf	(___aldiv@divisor+3)^0,f,c
  6731   011F5C  3208               	rrcf	(___aldiv@divisor+2)^0,f,c
  6732   011F5E  3207               	rrcf	(___aldiv@divisor+1)^0,f,c
  6733   011F60  3206               	rrcf	___aldiv@divisor^0,f,c
  6734   011F62  2E0A               	decfsz	___aldiv@counter^0,f,c
  6735   011F64  EF8F  F08F         	goto	l3320
  6736   011F68                     l3332:
  6737   011F68  500B               	movf	___aldiv@sign^0,w,c
  6738   011F6A  B4D8               	btfsc	status,2,c
  6739   011F6C  EFBA  F08F         	goto	u2521
  6740   011F70  EFBC  F08F         	goto	u2520
  6741   011F74                     u2521:
  6742   011F74  EFC4  F08F         	goto	l3336
  6743   011F78                     u2520:
  6744   011F78  1E0F               	comf	(___aldiv@quotient+3)^0,f,c
  6745   011F7A  1E0E               	comf	(___aldiv@quotient+2)^0,f,c
  6746   011F7C  1E0D               	comf	(___aldiv@quotient+1)^0,f,c
  6747   011F7E  6C0C               	negf	___aldiv@quotient^0,c
  6748   011F80  0E00               	movlw	0
  6749   011F82  220D               	addwfc	(___aldiv@quotient+1)^0,f,c
  6750   011F84  220E               	addwfc	(___aldiv@quotient+2)^0,f,c
  6751   011F86  220F               	addwfc	(___aldiv@quotient+3)^0,f,c
  6752   011F88                     l3336:
  6753   011F88  C00C  F002         	movff	___aldiv@quotient,?___aldiv
  6754   011F8C  C00D  F003         	movff	___aldiv@quotient+1,?___aldiv+1
  6755   011F90  C00E  F004         	movff	___aldiv@quotient+2,?___aldiv+2
  6756   011F94  C00F  F005         	movff	___aldiv@quotient+3,?___aldiv+3
  6757   011F98  0012               	return		;funcret
  6758   011F9A                     __end_of___aldiv:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function _my_putshex32 *****************
  6762 ;; Defined at:
  6763 ;;		line 320 in file "uart_main.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  dt              4    1[COMRAM] long 
  6766 ;;  buf             2    5[COMRAM] PTR unsigned char 
  6767 ;;		 -> loginfo_buf(64), 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  i               1   17[COMRAM] unsigned char 
  6770 ;;  sw              1   16[COMRAM] unsigned char 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  2    1[COMRAM] PTR unsigned char 
  6773 ;; Registers used:
  6774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6780 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6782 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;Total ram usage:       17 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; Hardware stack levels required when called: 2
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_Xprintf
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text22
  6795   011D64                     __ptext22:
  6796                           	callstack 0
  6797   011D64                     _my_putshex32:
  6798                           	callstack 27
  6799   011D64                     
  6800                           ;uart_main.c: 320: uint8_t *my_putshex32(long dt, uint8_t *buf );uart_main.c: 321: {;uar
      +                          t_main.c: 322:  uint8_t sw;;uart_main.c: 323:     uint8_t i;;uart_main.c: 325:     sw = 
      +                          0;
  6801   011D64  0E00               	movlw	0
  6802   011D66  6E11               	movwf	my_putshex32@sw^0,c
  6803                           
  6804                           ;uart_main.c: 327:     for( i=28; i > 0; i-=4){
  6805   011D68  0E1C               	movlw	28
  6806   011D6A  6E12               	movwf	my_putshex32@i^0,c
  6807   011D6C                     l4534:
  6808                           
  6809                           ;uart_main.c: 328:         if(( sw == 1) || (( dt >> i ) & 0x0f ) != 0 ){
  6810   011D6C  0411               	decf	my_putshex32@sw^0,w,c
  6811   011D6E  B4D8               	btfsc	status,2,c
  6812   011D70  EFBC  F08E         	goto	u4441
  6813   011D74  EFBE  F08E         	goto	u4440
  6814   011D78                     u4441:
  6815   011D78  EFEC  F08E         	goto	l4538
  6816   011D7C                     u4440:
  6817   011D7C  C012  F008         	movff	my_putshex32@i,??_my_putshex32
  6818   011D80  C002  F009         	movff	my_putshex32@dt,??_my_putshex32+1
  6819   011D84  C003  F00A         	movff	my_putshex32@dt+1,??_my_putshex32+2
  6820   011D88  C004  F00B         	movff	my_putshex32@dt+2,??_my_putshex32+3
  6821   011D8C  C005  F00C         	movff	my_putshex32@dt+3,??_my_putshex32+4
  6822   011D90                     u4455:
  6823   011D90  6608               	tstfsz	??_my_putshex32^0,c
  6824   011D92  EFCD  F08E         	goto	u4456
  6825   011D96  EFD5  F08E         	goto	u4457
  6826   011D9A                     u4456:
  6827   011D9A  340C               	rlcf	(??_my_putshex32+4)^0,w,c
  6828   011D9C  320C               	rrcf	(??_my_putshex32+4)^0,f,c
  6829   011D9E  320B               	rrcf	(??_my_putshex32+3)^0,f,c
  6830   011DA0  320A               	rrcf	(??_my_putshex32+2)^0,f,c
  6831   011DA2  3209               	rrcf	(??_my_putshex32+1)^0,f,c
  6832   011DA4  2E08               	decfsz	??_my_putshex32^0,f,c
  6833   011DA6  EFC8  F08E         	goto	u4455
  6834   011DAA                     u4457:
  6835   011DAA  0E0F               	movlw	15
  6836   011DAC  1409               	andwf	(??_my_putshex32+1)^0,w,c
  6837   011DAE  6E0D               	movwf	(??_my_putshex32+5)^0,c
  6838   011DB0  0E00               	movlw	0
  6839   011DB2  140A               	andwf	(??_my_putshex32+2)^0,w,c
  6840   011DB4  6E0E               	movwf	(??_my_putshex32+6)^0,c
  6841   011DB6  0E00               	movlw	0
  6842   011DB8  140B               	andwf	(??_my_putshex32+3)^0,w,c
  6843   011DBA  6E0F               	movwf	(??_my_putshex32+7)^0,c
  6844   011DBC  0E00               	movlw	0
  6845   011DBE  140C               	andwf	(??_my_putshex32+4)^0,w,c
  6846   011DC0  6E10               	movwf	(??_my_putshex32+8)^0,c
  6847   011DC2  500D               	movf	(??_my_putshex32+5)^0,w,c
  6848   011DC4  100E               	iorwf	(??_my_putshex32+6)^0,w,c
  6849   011DC6  100F               	iorwf	(??_my_putshex32+7)^0,w,c
  6850   011DC8  1010               	iorwf	(??_my_putshex32+8)^0,w,c
  6851   011DCA  B4D8               	btfsc	status,2,c
  6852   011DCC  EFEA  F08E         	goto	u4461
  6853   011DD0  EFEC  F08E         	goto	u4460
  6854   011DD4                     u4461:
  6855   011DD4  EF1B  F08F         	goto	l4544
  6856   011DD8                     u4460:
  6857   011DD8                     l4538:
  6858                           
  6859                           ;uart_main.c: 329:             *buf = ConvC[( dt >> i ) & 0x0f ];
  6860   011DD8  C012  F008         	movff	my_putshex32@i,??_my_putshex32
  6861   011DDC  C002  F009         	movff	my_putshex32@dt,??_my_putshex32+1
  6862   011DE0  C003  F00A         	movff	my_putshex32@dt+1,??_my_putshex32+2
  6863   011DE4  C004  F00B         	movff	my_putshex32@dt+2,??_my_putshex32+3
  6864   011DE8  C005  F00C         	movff	my_putshex32@dt+3,??_my_putshex32+4
  6865   011DEC                     u4475:
  6866   011DEC  6608               	tstfsz	??_my_putshex32^0,c
  6867   011DEE  EFFB  F08E         	goto	u4476
  6868   011DF2  EF03  F08F         	goto	u4477
  6869   011DF6                     u4476:
  6870   011DF6  340C               	rlcf	(??_my_putshex32+4)^0,w,c
  6871   011DF8  320C               	rrcf	(??_my_putshex32+4)^0,f,c
  6872   011DFA  320B               	rrcf	(??_my_putshex32+3)^0,f,c
  6873   011DFC  320A               	rrcf	(??_my_putshex32+2)^0,f,c
  6874   011DFE  3209               	rrcf	(??_my_putshex32+1)^0,f,c
  6875   011E00  2E08               	decfsz	??_my_putshex32^0,f,c
  6876   011E02  EFF6  F08E         	goto	u4475
  6877   011E06                     u4477:
  6878   011E06  0E0F               	movlw	15
  6879   011E08  1609               	andwf	(??_my_putshex32+1)^0,f,c
  6880   011E0A  0E00               	movlw	0
  6881   011E0C  160A               	andwf	(??_my_putshex32+2)^0,f,c
  6882   011E0E  0EEB               	movlw	low _ConvC
  6883   011E10  2409               	addwf	(??_my_putshex32+1)^0,w,c
  6884   011E12  6EF6               	movwf	tblptrl,c
  6885   011E14  0EF8               	movlw	high _ConvC
  6886   011E16  200A               	addwfc	(??_my_putshex32+2)^0,w,c
  6887   011E18  6EF7               	movwf	tblptrh,c
  6888   011E1A                     	if	1	;There are 3 active tblptr bytes
  6889   011E1A  6AF8               	clrf	tblptru,c
  6890   011E1C  0E00               	movlw	low (__mediumconst shr (0+16))
  6891   011E1E  22F8               	addwfc	tblptru,f,c
  6892   011E20                     	endif
  6893   011E20  C006  FFD9         	movff	my_putshex32@buf,fsr2l
  6894   011E24  C007  FFDA         	movff	my_putshex32@buf+1,fsr2h
  6895   011E28  0008               	tblrd		*
  6896   011E2A  CFF5 FFDF          	movff	tablat,indf2
  6897   011E2E                     
  6898                           ;uart_main.c: 330:             buf ++;
  6899   011E2E  4A06               	infsnz	my_putshex32@buf^0,f,c
  6900   011E30  2A07               	incf	(my_putshex32@buf+1)^0,f,c
  6901   011E32                     
  6902                           ;uart_main.c: 331:             sw = 1;
  6903   011E32  0E01               	movlw	1
  6904   011E34  6E11               	movwf	my_putshex32@sw^0,c
  6905   011E36                     l4544:
  6906                           
  6907                           ;uart_main.c: 333:     }
  6908   011E36  0E04               	movlw	4
  6909   011E38  5E12               	subwf	my_putshex32@i^0,f,c
  6910   011E3A  5012               	movf	my_putshex32@i^0,w,c
  6911   011E3C  A4D8               	btfss	status,2,c
  6912   011E3E  EF23  F08F         	goto	u4481
  6913   011E42  EF25  F08F         	goto	u4480
  6914   011E46                     u4481:
  6915   011E46  EFB6  F08E         	goto	l4534
  6916   011E4A                     u4480:
  6917   011E4A                     
  6918                           ;uart_main.c: 334:     *buf = ConvC[ dt & 0x0f ];
  6919   011E4A  0E0F               	movlw	15
  6920   011E4C  1402               	andwf	my_putshex32@dt^0,w,c
  6921   011E4E  6E08               	movwf	??_my_putshex32^0,c
  6922   011E50  0E00               	movlw	0
  6923   011E52  1403               	andwf	(my_putshex32@dt+1)^0,w,c
  6924   011E54  6E09               	movwf	(??_my_putshex32+1)^0,c
  6925   011E56  0EEB               	movlw	low _ConvC
  6926   011E58  2408               	addwf	??_my_putshex32^0,w,c
  6927   011E5A  6EF6               	movwf	tblptrl,c
  6928   011E5C  0EF8               	movlw	high _ConvC
  6929   011E5E  2009               	addwfc	(??_my_putshex32+1)^0,w,c
  6930   011E60  6EF7               	movwf	tblptrh,c
  6931   011E62                     	if	1	;There are 3 active tblptr bytes
  6932   011E62  6AF8               	clrf	tblptru,c
  6933   011E64  0E00               	movlw	low (__mediumconst shr (0+16))
  6934   011E66  22F8               	addwfc	tblptru,f,c
  6935   011E68                     	endif
  6936   011E68  C006  FFD9         	movff	my_putshex32@buf,fsr2l
  6937   011E6C  C007  FFDA         	movff	my_putshex32@buf+1,fsr2h
  6938   011E70  0008               	tblrd		*
  6939   011E72  CFF5 FFDF          	movff	tablat,indf2
  6940   011E76                     
  6941                           ;uart_main.c: 335:     buf ++;
  6942   011E76  4A06               	infsnz	my_putshex32@buf^0,f,c
  6943   011E78  2A07               	incf	(my_putshex32@buf+1)^0,f,c
  6944   011E7A                     
  6945                           ;uart_main.c: 336:     *buf = '\0';
  6946   011E7A  C006  FFD9         	movff	my_putshex32@buf,fsr2l
  6947   011E7E  C007  FFDA         	movff	my_putshex32@buf+1,fsr2h
  6948   011E82  6ADF               	clrf	indf2,c
  6949   011E84                     
  6950                           ;uart_main.c: 343:  return buf ;
  6951   011E84  C006  F002         	movff	my_putshex32@buf,?_my_putshex32
  6952   011E88  C007  F003         	movff	my_putshex32@buf+1,?_my_putshex32+1
  6953   011E8C  0012               	return		;funcret
  6954   011E8E                     __end_of_my_putshex32:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _my_putshex *****************
  6958 ;; Defined at:
  6959 ;;		line 264 in file "uart_main.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  dt              2    1[COMRAM] unsigned short 
  6962 ;;  flg             1    3[COMRAM] unsigned char 
  6963 ;;  buf             2    4[COMRAM] PTR unsigned char 
  6964 ;;		 -> loginfo_buf(64), 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  sw              1    9[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  2    1[COMRAM] PTR unsigned char 
  6969 ;; Registers used:
  6970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6976 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;Total ram usage:        9 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; Hardware stack levels required when called: 2
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_Xprintf
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text23
  6991   010DB6                     __ptext23:
  6992                           	callstack 0
  6993   010DB6                     _my_putshex:
  6994                           	callstack 27
  6995   010DB6                     
  6996                           ;uart_main.c: 264: uint8_t *my_putshex(uint16_t dt, uint8_t flg, uint8_t *buf );uart_mai
      +                          n.c: 265: {;uart_main.c: 266:  uint8_t sw;;uart_main.c: 268:  switch(flg){
  6997   010DB6  EF69  F088         	goto	l4520
  6998   010DBA                     l4464:
  6999                           
  7000                           ;uart_main.c: 270:   *buf = ConvC[( dt >> 12 ) & 0x0f ];
  7001   010DBA  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7002   010DBE  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7003   010DC2  0E0C               	movlw	12
  7004   010DC4  6E09               	movwf	(??_my_putshex+2)^0,c
  7005   010DC6                     u4325:
  7006   010DC6  90D8               	bcf	status,0,c
  7007   010DC8  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7008   010DCA  3207               	rrcf	??_my_putshex^0,f,c
  7009   010DCC  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7010   010DCE  EFE3  F086         	goto	u4325
  7011   010DD2  0E0F               	movlw	15
  7012   010DD4  1607               	andwf	??_my_putshex^0,f,c
  7013   010DD6  0E00               	movlw	0
  7014   010DD8  1608               	andwf	(??_my_putshex+1)^0,f,c
  7015   010DDA  0EEB               	movlw	low _ConvC
  7016   010DDC  2407               	addwf	??_my_putshex^0,w,c
  7017   010DDE  6EF6               	movwf	tblptrl,c
  7018   010DE0  0EF8               	movlw	high _ConvC
  7019   010DE2  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7020   010DE4  6EF7               	movwf	tblptrh,c
  7021   010DE6                     	if	1	;There are 3 active tblptr bytes
  7022   010DE6  6AF8               	clrf	tblptru,c
  7023   010DE8  0E00               	movlw	low (__mediumconst shr (0+16))
  7024   010DEA  22F8               	addwfc	tblptru,f,c
  7025   010DEC                     	endif
  7026   010DEC  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7027   010DF0  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7028   010DF4  0008               	tblrd		*
  7029   010DF6  CFF5 FFDF          	movff	tablat,indf2
  7030   010DFA                     
  7031                           ;uart_main.c: 271:   buf ++;
  7032   010DFA  4A05               	infsnz	my_putshex@buf^0,f,c
  7033   010DFC  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7034   010DFE                     
  7035                           ;uart_main.c: 272:   *buf = ConvC[( dt >> 8 ) & 0x0f ];
  7036   010DFE  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7037   010E02  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7038   010E06  C008  F007         	movff	??_my_putshex+1,??_my_putshex
  7039   010E0A  6A08               	clrf	(??_my_putshex+1)^0,c
  7040   010E0C  0E0F               	movlw	15
  7041   010E0E  1607               	andwf	??_my_putshex^0,f,c
  7042   010E10  0E00               	movlw	0
  7043   010E12  1608               	andwf	(??_my_putshex+1)^0,f,c
  7044   010E14  0EEB               	movlw	low _ConvC
  7045   010E16  2407               	addwf	??_my_putshex^0,w,c
  7046   010E18  6EF6               	movwf	tblptrl,c
  7047   010E1A  0EF8               	movlw	high _ConvC
  7048   010E1C  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7049   010E1E  6EF7               	movwf	tblptrh,c
  7050   010E20                     	if	1	;There are 3 active tblptr bytes
  7051   010E20  6AF8               	clrf	tblptru,c
  7052   010E22  0E00               	movlw	low (__mediumconst shr (0+16))
  7053   010E24  22F8               	addwfc	tblptru,f,c
  7054   010E26                     	endif
  7055   010E26  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7056   010E2A  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7057   010E2E  0008               	tblrd		*
  7058   010E30  CFF5 FFDF          	movff	tablat,indf2
  7059                           
  7060                           ;uart_main.c: 273:   buf ++;
  7061   010E34  4A05               	infsnz	my_putshex@buf^0,f,c
  7062   010E36  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7063   010E38                     
  7064                           ;uart_main.c: 274:   *buf = ConvC[( dt >> 4 ) & 0x0f ];
  7065   010E38  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7066   010E3C  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7067   010E40  0E04               	movlw	4
  7068   010E42  6E09               	movwf	(??_my_putshex+2)^0,c
  7069   010E44                     u4335:
  7070   010E44  90D8               	bcf	status,0,c
  7071   010E46  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7072   010E48  3207               	rrcf	??_my_putshex^0,f,c
  7073   010E4A  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7074   010E4C  EF22  F087         	goto	u4335
  7075   010E50  0E0F               	movlw	15
  7076   010E52  1607               	andwf	??_my_putshex^0,f,c
  7077   010E54  0E00               	movlw	0
  7078   010E56  1608               	andwf	(??_my_putshex+1)^0,f,c
  7079   010E58  0EEB               	movlw	low _ConvC
  7080   010E5A  2407               	addwf	??_my_putshex^0,w,c
  7081   010E5C  6EF6               	movwf	tblptrl,c
  7082   010E5E  0EF8               	movlw	high _ConvC
  7083   010E60  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7084   010E62  6EF7               	movwf	tblptrh,c
  7085   010E64                     	if	1	;There are 3 active tblptr bytes
  7086   010E64  6AF8               	clrf	tblptru,c
  7087   010E66  0E00               	movlw	low (__mediumconst shr (0+16))
  7088   010E68  22F8               	addwfc	tblptru,f,c
  7089   010E6A                     	endif
  7090   010E6A  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7091   010E6E  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7092   010E72  0008               	tblrd		*
  7093   010E74  CFF5 FFDF          	movff	tablat,indf2
  7094   010E78                     
  7095                           ;uart_main.c: 275:   buf ++;
  7096   010E78  4A05               	infsnz	my_putshex@buf^0,f,c
  7097   010E7A  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7098                           
  7099                           ;uart_main.c: 276:   *buf = ConvC[ dt & 0x0f ];
  7100   010E7C  0E0F               	movlw	15
  7101   010E7E  1402               	andwf	my_putshex@dt^0,w,c
  7102   010E80  6E07               	movwf	??_my_putshex^0,c
  7103   010E82  0E00               	movlw	0
  7104   010E84  1403               	andwf	(my_putshex@dt+1)^0,w,c
  7105   010E86  6E08               	movwf	(??_my_putshex+1)^0,c
  7106   010E88  0EEB               	movlw	low _ConvC
  7107   010E8A  2407               	addwf	??_my_putshex^0,w,c
  7108   010E8C  6EF6               	movwf	tblptrl,c
  7109   010E8E  0EF8               	movlw	high _ConvC
  7110   010E90  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7111   010E92  6EF7               	movwf	tblptrh,c
  7112   010E94                     	if	1	;There are 3 active tblptr bytes
  7113   010E94  6AF8               	clrf	tblptru,c
  7114   010E96  0E00               	movlw	low (__mediumconst shr (0+16))
  7115   010E98  22F8               	addwfc	tblptru,f,c
  7116   010E9A                     	endif
  7117   010E9A  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7118   010E9E  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7119   010EA2  0008               	tblrd		*
  7120   010EA4  CFF5 FFDF          	movff	tablat,indf2
  7121   010EA8                     l4474:
  7122                           
  7123                           ;uart_main.c: 277:   buf ++;
  7124   010EA8  4A05               	infsnz	my_putshex@buf^0,f,c
  7125   010EAA  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7126                           
  7127                           ;uart_main.c: 278:   break;
  7128   010EAC  EF82  F088         	goto	l4522
  7129   010EB0                     l4476:
  7130                           
  7131                           ;uart_main.c: 281:   *buf = ConvC[( dt >> 4 ) & 0x0f ];
  7132   010EB0  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7133   010EB4  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7134   010EB8  0E04               	movlw	4
  7135   010EBA  6E09               	movwf	(??_my_putshex+2)^0,c
  7136   010EBC                     u4345:
  7137   010EBC  90D8               	bcf	status,0,c
  7138   010EBE  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7139   010EC0  3207               	rrcf	??_my_putshex^0,f,c
  7140   010EC2  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7141   010EC4  EF5E  F087         	goto	u4345
  7142   010EC8  0E0F               	movlw	15
  7143   010ECA  1607               	andwf	??_my_putshex^0,f,c
  7144   010ECC  0E00               	movlw	0
  7145   010ECE  1608               	andwf	(??_my_putshex+1)^0,f,c
  7146   010ED0  0EEB               	movlw	low _ConvC
  7147   010ED2  2407               	addwf	??_my_putshex^0,w,c
  7148   010ED4  6EF6               	movwf	tblptrl,c
  7149   010ED6  0EF8               	movlw	high _ConvC
  7150   010ED8  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7151   010EDA  6EF7               	movwf	tblptrh,c
  7152   010EDC                     	if	1	;There are 3 active tblptr bytes
  7153   010EDC  6AF8               	clrf	tblptru,c
  7154   010EDE  0E00               	movlw	low (__mediumconst shr (0+16))
  7155   010EE0  22F8               	addwfc	tblptru,f,c
  7156   010EE2                     	endif
  7157   010EE2  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7158   010EE6  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7159   010EEA  0008               	tblrd		*
  7160   010EEC  CFF5 FFDF          	movff	tablat,indf2
  7161   010EF0                     
  7162                           ;uart_main.c: 282:   buf ++;
  7163   010EF0  4A05               	infsnz	my_putshex@buf^0,f,c
  7164   010EF2  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7165   010EF4                     
  7166                           ;uart_main.c: 283:   *buf = ConvC[ dt & 0x0f ];
  7167   010EF4  0E0F               	movlw	15
  7168   010EF6  1402               	andwf	my_putshex@dt^0,w,c
  7169   010EF8  6E07               	movwf	??_my_putshex^0,c
  7170   010EFA  0E00               	movlw	0
  7171   010EFC  1403               	andwf	(my_putshex@dt+1)^0,w,c
  7172   010EFE  6E08               	movwf	(??_my_putshex+1)^0,c
  7173   010F00  0EEB               	movlw	low _ConvC
  7174   010F02  2407               	addwf	??_my_putshex^0,w,c
  7175   010F04  6EF6               	movwf	tblptrl,c
  7176   010F06  0EF8               	movlw	high _ConvC
  7177   010F08  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7178   010F0A  6EF7               	movwf	tblptrh,c
  7179   010F0C                     	if	1	;There are 3 active tblptr bytes
  7180   010F0C  6AF8               	clrf	tblptru,c
  7181   010F0E  0E00               	movlw	low (__mediumconst shr (0+16))
  7182   010F10  22F8               	addwfc	tblptru,f,c
  7183   010F12                     	endif
  7184   010F12  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7185   010F16  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7186   010F1A  0008               	tblrd		*
  7187   010F1C  CFF5 FFDF          	movff	tablat,indf2
  7188                           
  7189                           ;uart_main.c: 284:   buf ++;
  7190   010F20  4A05               	infsnz	my_putshex@buf^0,f,c
  7191   010F22  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7192                           
  7193                           ;uart_main.c: 285:   break;
  7194   010F24  EF82  F088         	goto	l4522
  7195   010F28                     l4482:
  7196                           
  7197                           ;uart_main.c: 287:   sw = 0;
  7198   010F28  0E00               	movlw	0
  7199   010F2A  6E0A               	movwf	my_putshex@sw^0,c
  7200   010F2C  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7201   010F30  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7202   010F34  0E0C               	movlw	12
  7203   010F36  6E09               	movwf	(??_my_putshex+2)^0,c
  7204   010F38                     u4355:
  7205   010F38  90D8               	bcf	status,0,c
  7206   010F3A  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7207   010F3C  3207               	rrcf	??_my_putshex^0,f,c
  7208   010F3E  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7209   010F40  EF9C  F087         	goto	u4355
  7210   010F44  0E0F               	movlw	15
  7211   010F46  1607               	andwf	??_my_putshex^0,f,c
  7212   010F48  0E00               	movlw	0
  7213   010F4A  1608               	andwf	(??_my_putshex+1)^0,f,c
  7214   010F4C  5007               	movf	??_my_putshex^0,w,c
  7215   010F4E  1008               	iorwf	(??_my_putshex+1)^0,w,c
  7216   010F50  B4D8               	btfsc	status,2,c
  7217   010F52  EFAD  F087         	goto	u4361
  7218   010F56  EFAF  F087         	goto	u4360
  7219   010F5A                     u4361:
  7220   010F5A  EFD3  F087         	goto	l4494
  7221   010F5E                     u4360:
  7222   010F5E                     
  7223                           ;uart_main.c: 289:    *buf = ConvC[( dt >> 12 ) & 0x0f ];
  7224   010F5E  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7225   010F62  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7226   010F66  0E0C               	movlw	12
  7227   010F68  6E09               	movwf	(??_my_putshex+2)^0,c
  7228   010F6A                     u4375:
  7229   010F6A  90D8               	bcf	status,0,c
  7230   010F6C  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7231   010F6E  3207               	rrcf	??_my_putshex^0,f,c
  7232   010F70  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7233   010F72  EFB5  F087         	goto	u4375
  7234   010F76  0E0F               	movlw	15
  7235   010F78  1607               	andwf	??_my_putshex^0,f,c
  7236   010F7A  0E00               	movlw	0
  7237   010F7C  1608               	andwf	(??_my_putshex+1)^0,f,c
  7238   010F7E  0EEB               	movlw	low _ConvC
  7239   010F80  2407               	addwf	??_my_putshex^0,w,c
  7240   010F82  6EF6               	movwf	tblptrl,c
  7241   010F84  0EF8               	movlw	high _ConvC
  7242   010F86  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7243   010F88  6EF7               	movwf	tblptrh,c
  7244   010F8A                     	if	1	;There are 3 active tblptr bytes
  7245   010F8A  6AF8               	clrf	tblptru,c
  7246   010F8C  0E00               	movlw	low (__mediumconst shr (0+16))
  7247   010F8E  22F8               	addwfc	tblptru,f,c
  7248   010F90                     	endif
  7249   010F90  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7250   010F94  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7251   010F98  0008               	tblrd		*
  7252   010F9A  CFF5 FFDF          	movff	tablat,indf2
  7253   010F9E                     
  7254                           ;uart_main.c: 290:    buf ++;
  7255   010F9E  4A05               	infsnz	my_putshex@buf^0,f,c
  7256   010FA0  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7257   010FA2                     
  7258                           ;uart_main.c: 291:    sw = 1;
  7259   010FA2  0E01               	movlw	1
  7260   010FA4  6E0A               	movwf	my_putshex@sw^0,c
  7261   010FA6                     l4494:
  7262                           
  7263                           ;uart_main.c: 293:   if(( sw == 1) || (( dt >> 8 ) & 0x0f ) != 0 ){
  7264   010FA6  040A               	decf	my_putshex@sw^0,w,c
  7265   010FA8  B4D8               	btfsc	status,2,c
  7266   010FAA  EFD9  F087         	goto	u4381
  7267   010FAE  EFDB  F087         	goto	u4380
  7268   010FB2                     u4381:
  7269   010FB2  EFEF  F087         	goto	l4498
  7270   010FB6                     u4380:
  7271   010FB6  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7272   010FBA  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7273   010FBE  C008  F007         	movff	??_my_putshex+1,??_my_putshex
  7274   010FC2  6A08               	clrf	(??_my_putshex+1)^0,c
  7275   010FC4  0E0F               	movlw	15
  7276   010FC6  1607               	andwf	??_my_putshex^0,f,c
  7277   010FC8  0E00               	movlw	0
  7278   010FCA  1608               	andwf	(??_my_putshex+1)^0,f,c
  7279   010FCC  5007               	movf	??_my_putshex^0,w,c
  7280   010FCE  1008               	iorwf	(??_my_putshex+1)^0,w,c
  7281   010FD0  B4D8               	btfsc	status,2,c
  7282   010FD2  EFED  F087         	goto	u4391
  7283   010FD6  EFEF  F087         	goto	u4390
  7284   010FDA                     u4391:
  7285   010FDA  EF0E  F088         	goto	l4504
  7286   010FDE                     u4390:
  7287   010FDE                     l4498:
  7288                           
  7289                           ;uart_main.c: 294:    *buf = ConvC[( dt >> 8 ) & 0x0f ];
  7290   010FDE  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7291   010FE2  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7292   010FE6  C008  F007         	movff	??_my_putshex+1,??_my_putshex
  7293   010FEA  6A08               	clrf	(??_my_putshex+1)^0,c
  7294   010FEC  0E0F               	movlw	15
  7295   010FEE  1607               	andwf	??_my_putshex^0,f,c
  7296   010FF0  0E00               	movlw	0
  7297   010FF2  1608               	andwf	(??_my_putshex+1)^0,f,c
  7298   010FF4  0EEB               	movlw	low _ConvC
  7299   010FF6  2407               	addwf	??_my_putshex^0,w,c
  7300   010FF8  6EF6               	movwf	tblptrl,c
  7301   010FFA  0EF8               	movlw	high _ConvC
  7302   010FFC  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7303   010FFE  6EF7               	movwf	tblptrh,c
  7304   011000                     	if	1	;There are 3 active tblptr bytes
  7305   011000  6AF8               	clrf	tblptru,c
  7306   011002  0E00               	movlw	low (__mediumconst shr (0+16))
  7307   011004  22F8               	addwfc	tblptru,f,c
  7308   011006                     	endif
  7309   011006  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7310   01100A  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7311   01100E  0008               	tblrd		*
  7312   011010  CFF5 FFDF          	movff	tablat,indf2
  7313   011014                     
  7314                           ;uart_main.c: 295:    buf ++;
  7315   011014  4A05               	infsnz	my_putshex@buf^0,f,c
  7316   011016  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7317   011018                     
  7318                           ;uart_main.c: 296:    sw = 1;
  7319   011018  0E01               	movlw	1
  7320   01101A  6E0A               	movwf	my_putshex@sw^0,c
  7321   01101C                     l4504:
  7322                           
  7323                           ;uart_main.c: 298:   if(( sw == 1) || (( dt >> 4 ) & 0x0f ) != 0 ){
  7324   01101C  040A               	decf	my_putshex@sw^0,w,c
  7325   01101E  B4D8               	btfsc	status,2,c
  7326   011020  EF14  F088         	goto	u4401
  7327   011024  EF16  F088         	goto	u4400
  7328   011028                     u4401:
  7329   011028  EF2F  F088         	goto	l4508
  7330   01102C                     u4400:
  7331   01102C  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7332   011030  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7333   011034  0E04               	movlw	4
  7334   011036  6E09               	movwf	(??_my_putshex+2)^0,c
  7335   011038                     u4415:
  7336   011038  90D8               	bcf	status,0,c
  7337   01103A  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7338   01103C  3207               	rrcf	??_my_putshex^0,f,c
  7339   01103E  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7340   011040  EF1C  F088         	goto	u4415
  7341   011044  0E0F               	movlw	15
  7342   011046  1607               	andwf	??_my_putshex^0,f,c
  7343   011048  0E00               	movlw	0
  7344   01104A  1608               	andwf	(??_my_putshex+1)^0,f,c
  7345   01104C  5007               	movf	??_my_putshex^0,w,c
  7346   01104E  1008               	iorwf	(??_my_putshex+1)^0,w,c
  7347   011050  B4D8               	btfsc	status,2,c
  7348   011052  EF2D  F088         	goto	u4421
  7349   011056  EF2F  F088         	goto	u4420
  7350   01105A                     u4421:
  7351   01105A  EF51  F088         	goto	l4514
  7352   01105E                     u4420:
  7353   01105E                     l4508:
  7354                           
  7355                           ;uart_main.c: 299:    *buf = ConvC[( dt >> 4 ) & 0x0f ];
  7356   01105E  C002  F007         	movff	my_putshex@dt,??_my_putshex
  7357   011062  C003  F008         	movff	my_putshex@dt+1,??_my_putshex+1
  7358   011066  0E04               	movlw	4
  7359   011068  6E09               	movwf	(??_my_putshex+2)^0,c
  7360   01106A                     u4435:
  7361   01106A  90D8               	bcf	status,0,c
  7362   01106C  3208               	rrcf	(??_my_putshex+1)^0,f,c
  7363   01106E  3207               	rrcf	??_my_putshex^0,f,c
  7364   011070  2E09               	decfsz	(??_my_putshex+2)^0,f,c
  7365   011072  EF35  F088         	goto	u4435
  7366   011076  0E0F               	movlw	15
  7367   011078  1607               	andwf	??_my_putshex^0,f,c
  7368   01107A  0E00               	movlw	0
  7369   01107C  1608               	andwf	(??_my_putshex+1)^0,f,c
  7370   01107E  0EEB               	movlw	low _ConvC
  7371   011080  2407               	addwf	??_my_putshex^0,w,c
  7372   011082  6EF6               	movwf	tblptrl,c
  7373   011084  0EF8               	movlw	high _ConvC
  7374   011086  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7375   011088  6EF7               	movwf	tblptrh,c
  7376   01108A                     	if	1	;There are 3 active tblptr bytes
  7377   01108A  6AF8               	clrf	tblptru,c
  7378   01108C  0E00               	movlw	low (__mediumconst shr (0+16))
  7379   01108E  22F8               	addwfc	tblptru,f,c
  7380   011090                     	endif
  7381   011090  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7382   011094  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7383   011098  0008               	tblrd		*
  7384   01109A  CFF5 FFDF          	movff	tablat,indf2
  7385   01109E                     
  7386                           ;uart_main.c: 300:    buf ++;
  7387   01109E  4A05               	infsnz	my_putshex@buf^0,f,c
  7388   0110A0  2A06               	incf	(my_putshex@buf+1)^0,f,c
  7389   0110A2                     l4514:
  7390                           
  7391                           ;uart_main.c: 304:   *buf = ConvC[ dt & 0x0f ];
  7392   0110A2  0E0F               	movlw	15
  7393   0110A4  1402               	andwf	my_putshex@dt^0,w,c
  7394   0110A6  6E07               	movwf	??_my_putshex^0,c
  7395   0110A8  0E00               	movlw	0
  7396   0110AA  1403               	andwf	(my_putshex@dt+1)^0,w,c
  7397   0110AC  6E08               	movwf	(??_my_putshex+1)^0,c
  7398   0110AE  0EEB               	movlw	low _ConvC
  7399   0110B0  2407               	addwf	??_my_putshex^0,w,c
  7400   0110B2  6EF6               	movwf	tblptrl,c
  7401   0110B4  0EF8               	movlw	high _ConvC
  7402   0110B6  2008               	addwfc	(??_my_putshex+1)^0,w,c
  7403   0110B8  6EF7               	movwf	tblptrh,c
  7404   0110BA                     	if	1	;There are 3 active tblptr bytes
  7405   0110BA  6AF8               	clrf	tblptru,c
  7406   0110BC  0E00               	movlw	low (__mediumconst shr (0+16))
  7407   0110BE  22F8               	addwfc	tblptru,f,c
  7408   0110C0                     	endif
  7409   0110C0  C005  FFD9         	movff	my_putshex@buf,fsr2l
  7410   0110C4  C006  FFDA         	movff	my_putshex@buf+1,fsr2h
  7411   0110C8  0008               	tblrd		*
  7412   0110CA  CFF5 FFDF          	movff	tablat,indf2
  7413   0110CE  EF54  F087         	goto	l4474
  7414   0110D2                     l4520:
  7415   0110D2  5004               	movf	my_putshex@flg^0,w,c
  7416   0110D4  6E07               	movwf	??_my_putshex^0,c
  7417   0110D6  6A08               	clrf	(??_my_putshex+1)^0,c
  7418                           
  7419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7420                           ; Switch size 1, requested type "simple"
  7421                           ; Number of cases is 1, Range of values is 0 to 0
  7422                           ; switch strategies available:
  7423                           ; Name         Instructions Cycles
  7424                           ; simple_byte            4     3 (average)
  7425                           ;	Chosen strategy is simple_byte
  7426   0110D8  5008               	movf	(??_my_putshex+1)^0,w,c
  7427   0110DA  0A00               	xorlw	0	; case 0
  7428   0110DC  B4D8               	btfsc	status,2,c
  7429   0110DE  EF73  F088         	goto	l5668
  7430   0110E2  EF82  F088         	goto	l4522
  7431   0110E6                     l5668:
  7432                           
  7433                           ; Switch size 1, requested type "simple"
  7434                           ; Number of cases is 3, Range of values is 0 to 4
  7435                           ; switch strategies available:
  7436                           ; Name         Instructions Cycles
  7437                           ; simple_byte           10     6 (average)
  7438                           ;	Chosen strategy is simple_byte
  7439   0110E6  5007               	movf	??_my_putshex^0,w,c
  7440   0110E8  0A00               	xorlw	0	; case 0
  7441   0110EA  B4D8               	btfsc	status,2,c
  7442   0110EC  EF94  F087         	goto	l4482
  7443   0110F0  0A02               	xorlw	2	; case 2
  7444   0110F2  B4D8               	btfsc	status,2,c
  7445   0110F4  EF58  F087         	goto	l4476
  7446   0110F8  0A06               	xorlw	6	; case 4
  7447   0110FA  B4D8               	btfsc	status,2,c
  7448   0110FC  EFDD  F086         	goto	l4464
  7449   011100  EF82  F088         	goto	l4522
  7450   011104                     l4522:
  7451                           
  7452                           ;uart_main.c: 310:  return buf ;
  7453   011104  C005  F002         	movff	my_putshex@buf,?_my_putshex
  7454   011108  C006  F003         	movff	my_putshex@buf+1,?_my_putshex+1
  7455   01110C  0012               	return		;funcret
  7456   01110E                     __end_of_my_putshex:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function _my_puts *****************
  7460 ;; Defined at:
  7461 ;;		line 240 in file "uart_main.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  str             2    4[COMRAM] PTR unsigned char 
  7464 ;;		 -> ?_printf(2), RAM(3759), ?_Xprintf(1), loginfo_buf(64), 
  7465 ;;		 -> intbuf(2), log_dt(584), Deb_menue02(30), Deb_menue01(150), 
  7466 ;;		 -> Deb_menue00(270), 
  7467 ;;  buf             2    6[COMRAM] PTR unsigned char 
  7468 ;;		 -> loginfo_buf(64), 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  buf2            2    0        PTR unsigned char 
  7471 ;;		 -> loginfo_buf(64), 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  2    4[COMRAM] PTR unsigned char 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7485 ;;Total ram usage:        4 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 3
  7488 ;; This function calls:
  7489 ;;		_my_putchar
  7490 ;; This function is called by:
  7491 ;;		_Xprintf
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text24
  7496   012684                     __ptext24:
  7497                           	callstack 0
  7498   012684                     _my_puts:
  7499                           	callstack 26
  7500   012684                     
  7501                           ;uart_main.c: 247:     while ( *str != '\0' ) {
  7502   012684  EF61  F093         	goto	l4454
  7503   012688                     l4450:
  7504                           
  7505                           ;uart_main.c: 248:         buf = my_putchar(*str, buf);
  7506   012688  C007  F002         	movff	my_puts@buf,my_putchar@buf
  7507   01268C  C008  F003         	movff	my_puts@buf+1,my_putchar@buf+1
  7508   012690  C005  FFF6         	movff	my_puts@str,tblptrl
  7509   012694  C006  FFF7         	movff	my_puts@str+1,tblptrh
  7510   012698  0E00               	movlw	low (__mediumconst shr (0+16))
  7511   01269A  6EF8               	movwf	tblptru,c
  7512   01269C  0E0F               	movlw	(high __ramtop+-1)
  7513   01269E  64F7               	cpfsgt	tblptrh,c
  7514   0126A0  D003               	bra	u4297
  7515   0126A2  0008               	tblrd		*
  7516   0126A4  50F5               	movf	tablat,w,c
  7517   0126A6  D005               	bra	u4290
  7518   0126A8                     u4297:
  7519   0126A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7520   0126AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7521   0126B0  50EF               	movf	indf0,w,c
  7522   0126B2                     u4290:
  7523   0126B2  EC57  F095         	call	_my_putchar
  7524   0126B6  C002  F007         	movff	?_my_putchar,my_puts@buf
  7525   0126BA  C003  F008         	movff	?_my_putchar+1,my_puts@buf+1
  7526   0126BE                     
  7527                           ;uart_main.c: 249:         str++;
  7528   0126BE  4A05               	infsnz	my_puts@str^0,f,c
  7529   0126C0  2A06               	incf	(my_puts@str+1)^0,f,c
  7530   0126C2                     l4454:
  7531                           
  7532                           ;uart_main.c: 247:     while ( *str != '\0' ) {
  7533   0126C2  C005  FFF6         	movff	my_puts@str,tblptrl
  7534   0126C6  C006  FFF7         	movff	my_puts@str+1,tblptrh
  7535   0126CA  0E00               	movlw	low (__mediumconst shr (0+16))
  7536   0126CC  6EF8               	movwf	tblptru,c
  7537   0126CE  0E0F               	movlw	(high __ramtop+-1)
  7538   0126D0  64F7               	cpfsgt	tblptrh,c
  7539   0126D2  D003               	bra	u4307
  7540   0126D4  0008               	tblrd		*
  7541   0126D6  50F5               	movf	tablat,w,c
  7542   0126D8  D005               	bra	u4300
  7543   0126DA                     u4307:
  7544   0126DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7545   0126DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7546   0126E2  50EF               	movf	indf0,w,c
  7547   0126E4                     u4300:
  7548   0126E4  0900               	iorlw	0
  7549   0126E6  A4D8               	btfss	status,2,c
  7550   0126E8  EF78  F093         	goto	u4311
  7551   0126EC  EF7A  F093         	goto	u4310
  7552   0126F0                     u4311:
  7553   0126F0  EF44  F093         	goto	l4450
  7554   0126F4                     u4310:
  7555   0126F4                     
  7556                           ;uart_main.c: 251:     *buf='\0';
  7557   0126F4  C007  FFD9         	movff	my_puts@buf,fsr2l
  7558   0126F8  C008  FFDA         	movff	my_puts@buf+1,fsr2h
  7559   0126FC  6ADF               	clrf	indf2,c
  7560   0126FE                     
  7561                           ;uart_main.c: 253:  return buf ;
  7562   0126FE  C007  F005         	movff	my_puts@buf,?_my_puts
  7563   012702  C008  F006         	movff	my_puts@buf+1,?_my_puts+1
  7564   012706  0012               	return		;funcret
  7565   012708                     __end_of_my_puts:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function _my_putchar *****************
  7569 ;; Defined at:
  7570 ;;		line 228 in file "uart_main.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  c               1    wreg     unsigned char 
  7573 ;;  buf             2    1[COMRAM] PTR unsigned char 
  7574 ;;		 -> loginfo_buf(64), 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  c               1    3[COMRAM] unsigned char 
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  2    1[COMRAM] PTR unsigned char 
  7579 ;; Registers used:
  7580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7590 ;;Total ram usage:        3 bytes
  7591 ;; Hardware stack levels used: 1
  7592 ;; Hardware stack levels required when called: 2
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_my_puts
  7597 ;;		_Xprintf
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text25
  7602   012AAE                     __ptext25:
  7603                           	callstack 0
  7604   012AAE                     _my_putchar:
  7605                           	callstack 26
  7606                           
  7607                           ;incstack = 0
  7608                           ;my_putchar@c stored from wreg
  7609   012AAE  6E04               	movwf	my_putchar@c^0,c
  7610   012AB0                     
  7611                           ;uart_main.c: 228: uint8_t *my_putchar(char c, uint8_t *buf );uart_main.c: 229: {;uart_m
      +                          ain.c: 231:  *buf = c;
  7612   012AB0  C002  FFD9         	movff	my_putchar@buf,fsr2l
  7613   012AB4  C003  FFDA         	movff	my_putchar@buf+1,fsr2h
  7614   012AB8  C004  FFDF         	movff	my_putchar@c,indf2
  7615   012ABC                     
  7616                           ;uart_main.c: 232:  buf ++;
  7617   012ABC  4A02               	infsnz	my_putchar@buf^0,f,c
  7618   012ABE  2A03               	incf	(my_putchar@buf+1)^0,f,c
  7619   012AC0                     
  7620                           ;uart_main.c: 233:  return buf ;
  7621   012AC0  C002  F002         	movff	my_putchar@buf,?_my_putchar
  7622   012AC4  C003  F003         	movff	my_putchar@buf+1,?_my_putchar+1
  7623   012AC8  0012               	return		;funcret
  7624   012ACA                     __end_of_my_putchar:
  7625                           	callstack 0
  7626                           
  7627 ;; *************** function _my_putfloat *****************
  7628 ;; Defined at:
  7629 ;;		line 188 in file "uart_main.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  num             4   26[COMRAM] PTR unsigned char 
  7632 ;;  precision       2   30[COMRAM] int 
  7633 ;;  buf             2   32[COMRAM] PTR unsigned char 
  7634 ;;		 -> loginfo_buf(64), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  digit           2   39[COMRAM] int 
  7637 ;;  fracPart        4   41[COMRAM] int 
  7638 ;;  dtf             4    0        int 
  7639 ;;  intPart         2   37[COMRAM] int 
  7640 ;;  count           2   35[COMRAM] int 
  7641 ;;  digit           2    0        int 
  7642 ;;  dt              2    0        int 
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  2   26[COMRAM] PTR unsigned char 
  7645 ;; Registers used:
  7646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7652 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7655 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7656 ;;Total ram usage:       19 bytes
  7657 ;; Hardware stack levels used: 1
  7658 ;; Hardware stack levels required when called: 4
  7659 ;; This function calls:
  7660 ;;		___flmul
  7661 ;;		___flneg
  7662 ;;		___flsub
  7663 ;;		___fltol
  7664 ;;		___xxtofl
  7665 ;;		_my_putint
  7666 ;; This function is called by:
  7667 ;;		_Xprintf
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text26
  7672   0115B0                     __ptext26:
  7673                           	callstack 0
  7674   0115B0                     _my_putfloat:
  7675                           	callstack 25
  7676   0115B0                     
  7677                           ;uart_main.c: 188: uint8_t *my_putfloat(double num, int precision, uint8_t *buf);uart_ma
      +                          in.c: 189: {;uart_main.c: 190:  int dt;;uart_main.c: 191:  double fracPart,dtf;;uart_mai
      +                          n.c: 192:  int intPart;;uart_main.c: 193:  int digit;;uart_main.c: 195:  intPart = (int)
      +                          num;
  7678   0115B0  C01B  F002         	movff	my_putfloat@num,___fltol@f1
  7679   0115B4  C01C  F003         	movff	my_putfloat@num+1,___fltol@f1+1
  7680   0115B8  C01D  F004         	movff	my_putfloat@num+2,___fltol@f1+2
  7681   0115BC  C01E  F005         	movff	my_putfloat@num+3,___fltol@f1+3
  7682   0115C0  ECCD  F08F         	call	___fltol	;wreg free
  7683   0115C4  C002  F026         	movff	?___fltol,my_putfloat@intPart
  7684   0115C8  C003  F027         	movff	?___fltol+1,my_putfloat@intPart+1
  7685   0115CC                     
  7686                           ;uart_main.c: 196:     buf = my_putint(intPart, buf);
  7687   0115CC  C026  F00A         	movff	my_putfloat@intPart,my_putint@num
  7688   0115D0  C027  F00B         	movff	my_putfloat@intPart+1,my_putint@num+1
  7689   0115D4  C021  F00C         	movff	my_putfloat@buf,my_putint@buf
  7690   0115D8  C022  F00D         	movff	my_putfloat@buf+1,my_putint@buf+1
  7691   0115DC  EC0E  F08E         	call	_my_putint	;wreg free
  7692   0115E0  C00A  F021         	movff	?_my_putint,my_putfloat@buf
  7693   0115E4  C00B  F022         	movff	?_my_putint+1,my_putfloat@buf+1
  7694   0115E8                     
  7695                           ;uart_main.c: 197:     *buf = '.';
  7696   0115E8  C021  FFD9         	movff	my_putfloat@buf,fsr2l
  7697   0115EC  C022  FFDA         	movff	my_putfloat@buf+1,fsr2h
  7698   0115F0  0E2E               	movlw	46
  7699   0115F2  6EDF               	movwf	indf2,c
  7700   0115F4                     
  7701                           ;uart_main.c: 198:     buf ++;
  7702   0115F4  4A21               	infsnz	my_putfloat@buf^0,f,c
  7703   0115F6  2A22               	incf	(my_putfloat@buf+1)^0,f,c
  7704   0115F8                     
  7705                           ;uart_main.c: 200:     fracPart = num - intPart;
  7706   0115F8  C01B  F012         	movff	my_putfloat@num,___flsub@b
  7707   0115FC  C01C  F013         	movff	my_putfloat@num+1,___flsub@b+1
  7708   011600  C01D  F014         	movff	my_putfloat@num+2,___flsub@b+2
  7709   011604  C01E  F015         	movff	my_putfloat@num+3,___flsub@b+3
  7710   011608  C026  F002         	movff	my_putfloat@intPart,___xxtofl@val
  7711   01160C  C027  F003         	movff	my_putfloat@intPart+1,___xxtofl@val+1
  7712   011610  0E00               	movlw	0
  7713   011612  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  7714   011614  0EFF               	movlw	-1
  7715   011616  6E04               	movwf	(___xxtofl@val+2)^0,c
  7716   011618  6E05               	movwf	(___xxtofl@val+3)^0,c
  7717   01161A  0E01               	movlw	1
  7718   01161C  ECB3  F08B         	call	___xxtofl
  7719   011620  C002  F016         	movff	?___xxtofl,___flsub@a
  7720   011624  C003  F017         	movff	?___xxtofl+1,___flsub@a+1
  7721   011628  C004  F018         	movff	?___xxtofl+2,___flsub@a+2
  7722   01162C  C005  F019         	movff	?___xxtofl+3,___flsub@a+3
  7723   011630  EC6E  F094         	call	___flsub	;wreg free
  7724   011634  C012  F02A         	movff	?___flsub,my_putfloat@fracPart
  7725   011638  C013  F02B         	movff	?___flsub+1,my_putfloat@fracPart+1
  7726   01163C  C014  F02C         	movff	?___flsub+2,my_putfloat@fracPart+2
  7727   011640  C015  F02D         	movff	?___flsub+3,my_putfloat@fracPart+3
  7728   011644                     
  7729                           ;uart_main.c: 202:     if (fracPart < 0) {
  7730   011644  BE2D               	btfsc	(my_putfloat@fracPart+3)^0,7,c
  7731   011646  EF29  F08B         	goto	u4270
  7732   01164A  EF27  F08B         	goto	u4271
  7733   01164E                     u4271:
  7734   01164E  EF3B  F08B         	goto	l4426
  7735   011652                     u4270:
  7736   011652                     
  7737                           ;uart_main.c: 203:         fracPart = -fracPart;
  7738   011652  C02A  F002         	movff	my_putfloat@fracPart,___flneg@f1
  7739   011656  C02B  F003         	movff	my_putfloat@fracPart+1,___flneg@f1+1
  7740   01165A  C02C  F004         	movff	my_putfloat@fracPart+2,___flneg@f1+2
  7741   01165E  C02D  F005         	movff	my_putfloat@fracPart+3,___flneg@f1+3
  7742   011662  ECD3  F094         	call	___flneg	;wreg free
  7743   011666  C002  F02A         	movff	?___flneg,my_putfloat@fracPart
  7744   01166A  C003  F02B         	movff	?___flneg+1,my_putfloat@fracPart+1
  7745   01166E  C004  F02C         	movff	?___flneg+2,my_putfloat@fracPart+2
  7746   011672  C005  F02D         	movff	?___flneg+3,my_putfloat@fracPart+3
  7747   011676                     l4426:
  7748                           
  7749                           ;uart_main.c: 206:     int count = 0;
  7750   011676  0E00               	movlw	0
  7751   011678  6E25               	movwf	(my_putfloat@count+1)^0,c
  7752   01167A  0E00               	movlw	0
  7753   01167C  6E24               	movwf	my_putfloat@count^0,c
  7754                           
  7755                           ;uart_main.c: 207:     while (count < precision) {
  7756   01167E  EF9A  F08B         	goto	l4440
  7757   011682                     l4428:
  7758                           
  7759                           ;uart_main.c: 208:         fracPart *= 10;
  7760   011682  C02A  F002         	movff	my_putfloat@fracPart,___flmul@b
  7761   011686  C02B  F003         	movff	my_putfloat@fracPart+1,___flmul@b+1
  7762   01168A  C02C  F004         	movff	my_putfloat@fracPart+2,___flmul@b+2
  7763   01168E  C02D  F005         	movff	my_putfloat@fracPart+3,___flmul@b+3
  7764   011692  0E00               	movlw	0
  7765   011694  6E06               	movwf	___flmul@a^0,c
  7766   011696  0E00               	movlw	0
  7767   011698  6E07               	movwf	(___flmul@a+1)^0,c
  7768   01169A  0E20               	movlw	32
  7769   01169C  6E08               	movwf	(___flmul@a+2)^0,c
  7770   01169E  0E41               	movlw	65
  7771   0116A0  6E09               	movwf	(___flmul@a+3)^0,c
  7772   0116A2  ECC6  F084         	call	___flmul	;wreg free
  7773   0116A6  C002  F02A         	movff	?___flmul,my_putfloat@fracPart
  7774   0116AA  C003  F02B         	movff	?___flmul+1,my_putfloat@fracPart+1
  7775   0116AE  C004  F02C         	movff	?___flmul+2,my_putfloat@fracPart+2
  7776   0116B2  C005  F02D         	movff	?___flmul+3,my_putfloat@fracPart+3
  7777   0116B6                     
  7778                           ;uart_main.c: 209:         int digit = (int)fracPart;
  7779   0116B6  C02A  F002         	movff	my_putfloat@fracPart,___fltol@f1
  7780   0116BA  C02B  F003         	movff	my_putfloat@fracPart+1,___fltol@f1+1
  7781   0116BE  C02C  F004         	movff	my_putfloat@fracPart+2,___fltol@f1+2
  7782   0116C2  C02D  F005         	movff	my_putfloat@fracPart+3,___fltol@f1+3
  7783   0116C6  ECCD  F08F         	call	___fltol	;wreg free
  7784   0116CA  C002  F028         	movff	?___fltol,my_putfloat@digit_950
  7785   0116CE  C003  F029         	movff	?___fltol+1,my_putfloat@digit_950+1
  7786   0116D2                     
  7787                           ;uart_main.c: 211:         *buf = '0' + digit;
  7788   0116D2  5028               	movf	my_putfloat@digit_950^0,w,c
  7789   0116D4  0F30               	addlw	48
  7790   0116D6  C021  FFD9         	movff	my_putfloat@buf,fsr2l
  7791   0116DA  C022  FFDA         	movff	my_putfloat@buf+1,fsr2h
  7792   0116DE  6EDF               	movwf	indf2,c
  7793   0116E0                     
  7794                           ;uart_main.c: 212:         buf ++;
  7795   0116E0  4A21               	infsnz	my_putfloat@buf^0,f,c
  7796   0116E2  2A22               	incf	(my_putfloat@buf+1)^0,f,c
  7797   0116E4                     
  7798                           ;uart_main.c: 214:         fracPart -= digit;
  7799   0116E4  C02A  F012         	movff	my_putfloat@fracPart,___flsub@b
  7800   0116E8  C02B  F013         	movff	my_putfloat@fracPart+1,___flsub@b+1
  7801   0116EC  C02C  F014         	movff	my_putfloat@fracPart+2,___flsub@b+2
  7802   0116F0  C02D  F015         	movff	my_putfloat@fracPart+3,___flsub@b+3
  7803   0116F4  C028  F002         	movff	my_putfloat@digit_950,___xxtofl@val
  7804   0116F8  C029  F003         	movff	my_putfloat@digit_950+1,___xxtofl@val+1
  7805   0116FC  0E00               	movlw	0
  7806   0116FE  BE03               	btfsc	(___xxtofl@val+1)^0,7,c
  7807   011700  0EFF               	movlw	-1
  7808   011702  6E04               	movwf	(___xxtofl@val+2)^0,c
  7809   011704  6E05               	movwf	(___xxtofl@val+3)^0,c
  7810   011706  0E01               	movlw	1
  7811   011708  ECB3  F08B         	call	___xxtofl
  7812   01170C  C002  F016         	movff	?___xxtofl,___flsub@a
  7813   011710  C003  F017         	movff	?___xxtofl+1,___flsub@a+1
  7814   011714  C004  F018         	movff	?___xxtofl+2,___flsub@a+2
  7815   011718  C005  F019         	movff	?___xxtofl+3,___flsub@a+3
  7816   01171C  EC6E  F094         	call	___flsub	;wreg free
  7817   011720  C012  F02A         	movff	?___flsub,my_putfloat@fracPart
  7818   011724  C013  F02B         	movff	?___flsub+1,my_putfloat@fracPart+1
  7819   011728  C014  F02C         	movff	?___flsub+2,my_putfloat@fracPart+2
  7820   01172C  C015  F02D         	movff	?___flsub+3,my_putfloat@fracPart+3
  7821   011730                     
  7822                           ;uart_main.c: 215:         count++;
  7823   011730  4A24               	infsnz	my_putfloat@count^0,f,c
  7824   011732  2A25               	incf	(my_putfloat@count+1)^0,f,c
  7825   011734                     l4440:
  7826                           
  7827                           ;uart_main.c: 207:     while (count < precision) {
  7828   011734  501F               	movf	my_putfloat@precision^0,w,c
  7829   011736  5C24               	subwf	my_putfloat@count^0,w,c
  7830   011738  5025               	movf	(my_putfloat@count+1)^0,w,c
  7831   01173A  0A80               	xorlw	128
  7832   01173C  6E23               	movwf	??_my_putfloat^0,c
  7833   01173E  5020               	movf	(my_putfloat@precision+1)^0,w,c
  7834   011740  0A80               	xorlw	128
  7835   011742  5823               	subwfb	??_my_putfloat^0,w,c
  7836   011744  A0D8               	btfss	status,0,c
  7837   011746  EFA7  F08B         	goto	u4281
  7838   01174A  EFA9  F08B         	goto	u4280
  7839   01174E                     u4281:
  7840   01174E  EF41  F08B         	goto	l4428
  7841   011752                     u4280:
  7842   011752                     
  7843                           ;uart_main.c: 218:     *buf = '\0';
  7844   011752  C021  FFD9         	movff	my_putfloat@buf,fsr2l
  7845   011756  C022  FFDA         	movff	my_putfloat@buf+1,fsr2h
  7846   01175A  6ADF               	clrf	indf2,c
  7847   01175C                     
  7848                           ;uart_main.c: 220:     return buf;
  7849   01175C  C021  F01B         	movff	my_putfloat@buf,?_my_putfloat
  7850   011760  C022  F01C         	movff	my_putfloat@buf+1,?_my_putfloat+1
  7851   011764  0012               	return		;funcret
  7852   011766                     __end_of_my_putfloat:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function _my_putint *****************
  7856 ;; Defined at:
  7857 ;;		line 152 in file "uart_main.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  num             2    9[COMRAM] int 
  7860 ;;  buf             2   11[COMRAM] PTR unsigned char 
  7861 ;;		 -> loginfo_buf(64), 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  keta            2   15[COMRAM] int 
  7864 ;;  temp            2   13[COMRAM] int 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2    9[COMRAM] PTR unsigned char 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7877 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7878 ;;Total ram usage:        8 bytes
  7879 ;; Hardware stack levels used: 1
  7880 ;; Hardware stack levels required when called: 3
  7881 ;; This function calls:
  7882 ;;		___awdiv
  7883 ;;		___wmul
  7884 ;; This function is called by:
  7885 ;;		_my_putfloat
  7886 ;;		_Xprintf
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text27
  7891   011C1C                     __ptext27:
  7892                           	callstack 0
  7893   011C1C                     _my_putint:
  7894                           	callstack 26
  7895   011C1C                     
  7896                           ;uart_main.c: 152: uint8_t *my_putint(int num, uint8_t *buf);uart_main.c: 153: {;uart_ma
      +                          in.c: 154:     int temp;;uart_main.c: 155:     int keta;;uart_main.c: 158:  if (num < 0)
      +                           {
  7897   011C1C  BE0B               	btfsc	(my_putint@num+1)^0,7,c
  7898   011C1E  EF15  F08E         	goto	u3590
  7899   011C22  EF13  F08E         	goto	u3591
  7900   011C26                     u3591:
  7901   011C26  EF21  F08E         	goto	l3986
  7902   011C2A                     u3590:
  7903   011C2A                     
  7904                           ;uart_main.c: 159:         *buf = '-';
  7905   011C2A  C00C  FFD9         	movff	my_putint@buf,fsr2l
  7906   011C2E  C00D  FFDA         	movff	my_putint@buf+1,fsr2h
  7907   011C32  0E2D               	movlw	45
  7908   011C34  6EDF               	movwf	indf2,c
  7909   011C36                     
  7910                           ;uart_main.c: 160:         buf++;
  7911   011C36  4A0C               	infsnz	my_putint@buf^0,f,c
  7912   011C38  2A0D               	incf	(my_putint@buf+1)^0,f,c
  7913   011C3A                     
  7914                           ;uart_main.c: 161:         num = -num;
  7915   011C3A  6C0A               	negf	my_putint@num^0,c
  7916   011C3C  1E0B               	comf	(my_putint@num+1)^0,f,c
  7917   011C3E  B0D8               	btfsc	status,0,c
  7918   011C40  2A0B               	incf	(my_putint@num+1)^0,f,c
  7919   011C42                     l3986:
  7920                           
  7921                           ;uart_main.c: 163:     temp = num;
  7922   011C42  C00A  F00E         	movff	my_putint@num,my_putint@temp
  7923   011C46  C00B  F00F         	movff	my_putint@num+1,my_putint@temp+1
  7924   011C4A                     
  7925                           ;uart_main.c: 164:     keta = 1;
  7926   011C4A  0E00               	movlw	0
  7927   011C4C  6E11               	movwf	(my_putint@keta+1)^0,c
  7928   011C4E  0E01               	movlw	1
  7929   011C50  6E10               	movwf	my_putint@keta^0,c
  7930                           
  7931                           ;uart_main.c: 167:     while (num / 10 != 0) {
  7932   011C52  EF47  F08E         	goto	l3994
  7933   011C56                     l3990:
  7934                           
  7935                           ;uart_main.c: 168:         num = num / 10;
  7936   011C56  C00A  F002         	movff	my_putint@num,___awdiv@dividend
  7937   011C5A  C00B  F003         	movff	my_putint@num+1,___awdiv@dividend+1
  7938   011C5E  0E00               	movlw	0
  7939   011C60  6E05               	movwf	(___awdiv@divisor+1)^0,c
  7940   011C62  0E0A               	movlw	10
  7941   011C64  6E04               	movwf	___awdiv@divisor^0,c
  7942   011C66  EC8B  F092         	call	___awdiv	;wreg free
  7943   011C6A  C002  F00A         	movff	?___awdiv,my_putint@num
  7944   011C6E  C003  F00B         	movff	?___awdiv+1,my_putint@num+1
  7945   011C72                     
  7946                           ;uart_main.c: 169:         keta *= 10;
  7947   011C72  C010  F002         	movff	my_putint@keta,___wmul@multiplier
  7948   011C76  C011  F003         	movff	my_putint@keta+1,___wmul@multiplier+1
  7949   011C7A  0E00               	movlw	0
  7950   011C7C  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  7951   011C7E  0E0A               	movlw	10
  7952   011C80  6E04               	movwf	___wmul@multiplicand^0,c
  7953   011C82  EC33  F095         	call	___wmul	;wreg free
  7954   011C86  C002  F010         	movff	?___wmul,my_putint@keta
  7955   011C8A  C003  F011         	movff	?___wmul+1,my_putint@keta+1
  7956   011C8E                     l3994:
  7957                           
  7958                           ;uart_main.c: 167:     while (num / 10 != 0) {
  7959   011C8E  C00A  F002         	movff	my_putint@num,___awdiv@dividend
  7960   011C92  C00B  F003         	movff	my_putint@num+1,___awdiv@dividend+1
  7961   011C96  0E00               	movlw	0
  7962   011C98  6E05               	movwf	(___awdiv@divisor+1)^0,c
  7963   011C9A  0E0A               	movlw	10
  7964   011C9C  6E04               	movwf	___awdiv@divisor^0,c
  7965   011C9E  EC8B  F092         	call	___awdiv	;wreg free
  7966   011CA2  5002               	movf	?___awdiv^0,w,c
  7967   011CA4  1003               	iorwf	(?___awdiv+1)^0,w,c
  7968   011CA6  A4D8               	btfss	status,2,c
  7969   011CA8  EF58  F08E         	goto	u3601
  7970   011CAC  EF5A  F08E         	goto	u3600
  7971   011CB0                     u3601:
  7972   011CB0  EF2B  F08E         	goto	l3990
  7973   011CB4                     u3600:
  7974   011CB4                     
  7975                           ;uart_main.c: 171:     num = temp;
  7976   011CB4  C00E  F00A         	movff	my_putint@temp,my_putint@num
  7977   011CB8  C00F  F00B         	movff	my_putint@temp+1,my_putint@num+1
  7978   011CBC                     l3996:
  7979                           
  7980                           ;uart_main.c: 173:     for( ; keta>0; keta/=10 ){
  7981   011CBC  BE11               	btfsc	(my_putint@keta+1)^0,7,c
  7982   011CBE  EF6B  F08E         	goto	u3610
  7983   011CC2  5011               	movf	(my_putint@keta+1)^0,w,c
  7984   011CC4  E106               	bnz	u3611
  7985   011CC6  0410               	decf	my_putint@keta^0,w,c
  7986   011CC8  B0D8               	btfsc	status,0,c
  7987   011CCA  EF69  F08E         	goto	u3611
  7988   011CCE  EF6B  F08E         	goto	u3610
  7989   011CD2                     u3611:
  7990   011CD2  EF6D  F08E         	goto	l4000
  7991   011CD6                     u3610:
  7992   011CD6  EFAD  F08E         	goto	l4016
  7993   011CDA                     l4000:
  7994                           
  7995                           ;uart_main.c: 174:         num = num / keta;
  7996   011CDA  C00A  F002         	movff	my_putint@num,___awdiv@dividend
  7997   011CDE  C00B  F003         	movff	my_putint@num+1,___awdiv@dividend+1
  7998   011CE2  C010  F004         	movff	my_putint@keta,___awdiv@divisor
  7999   011CE6  C011  F005         	movff	my_putint@keta+1,___awdiv@divisor+1
  8000   011CEA  EC8B  F092         	call	___awdiv	;wreg free
  8001   011CEE  C002  F00A         	movff	?___awdiv,my_putint@num
  8002   011CF2  C003  F00B         	movff	?___awdiv+1,my_putint@num+1
  8003   011CF6                     
  8004                           ;uart_main.c: 175:         *buf = '0' + num;
  8005   011CF6  500A               	movf	my_putint@num^0,w,c
  8006   011CF8  0F30               	addlw	48
  8007   011CFA  C00C  FFD9         	movff	my_putint@buf,fsr2l
  8008   011CFE  C00D  FFDA         	movff	my_putint@buf+1,fsr2h
  8009   011D02  6EDF               	movwf	indf2,c
  8010   011D04                     
  8011                           ;uart_main.c: 176:         buf++;
  8012   011D04  4A0C               	infsnz	my_putint@buf^0,f,c
  8013   011D06  2A0D               	incf	(my_putint@buf+1)^0,f,c
  8014   011D08                     
  8015                           ;uart_main.c: 177:         *buf = '\0';
  8016   011D08  C00C  FFD9         	movff	my_putint@buf,fsr2l
  8017   011D0C  C00D  FFDA         	movff	my_putint@buf+1,fsr2h
  8018   011D10  6ADF               	clrf	indf2,c
  8019   011D12                     
  8020                           ;uart_main.c: 178:         num = temp - (keta * num);
  8021   011D12  C010  F002         	movff	my_putint@keta,___wmul@multiplier
  8022   011D16  C011  F003         	movff	my_putint@keta+1,___wmul@multiplier+1
  8023   011D1A  C00A  F004         	movff	my_putint@num,___wmul@multiplicand
  8024   011D1E  C00B  F005         	movff	my_putint@num+1,___wmul@multiplicand+1
  8025   011D22  EC33  F095         	call	___wmul	;wreg free
  8026   011D26  5002               	movf	?___wmul^0,w,c
  8027   011D28  5C0E               	subwf	my_putint@temp^0,w,c
  8028   011D2A  6E0A               	movwf	my_putint@num^0,c
  8029   011D2C  5003               	movf	(?___wmul+1)^0,w,c
  8030   011D2E  580F               	subwfb	(my_putint@temp+1)^0,w,c
  8031   011D30  6E0B               	movwf	(my_putint@num+1)^0,c
  8032   011D32                     
  8033                           ;uart_main.c: 179:         temp = num;
  8034   011D32  C00A  F00E         	movff	my_putint@num,my_putint@temp
  8035   011D36  C00B  F00F         	movff	my_putint@num+1,my_putint@temp+1
  8036   011D3A                     
  8037                           ;uart_main.c: 180:     }
  8038   011D3A  C010  F002         	movff	my_putint@keta,___awdiv@dividend
  8039   011D3E  C011  F003         	movff	my_putint@keta+1,___awdiv@dividend+1
  8040   011D42  0E00               	movlw	0
  8041   011D44  6E05               	movwf	(___awdiv@divisor+1)^0,c
  8042   011D46  0E0A               	movlw	10
  8043   011D48  6E04               	movwf	___awdiv@divisor^0,c
  8044   011D4A  EC8B  F092         	call	___awdiv	;wreg free
  8045   011D4E  C002  F010         	movff	?___awdiv,my_putint@keta
  8046   011D52  C003  F011         	movff	?___awdiv+1,my_putint@keta+1
  8047   011D56  EF5E  F08E         	goto	l3996
  8048   011D5A                     l4016:
  8049                           
  8050                           ;uart_main.c: 182:     return buf;
  8051   011D5A  C00C  F00A         	movff	my_putint@buf,?_my_putint
  8052   011D5E  C00D  F00B         	movff	my_putint@buf+1,?_my_putint+1
  8053   011D62  0012               	return		;funcret
  8054   011D64                     __end_of_my_putint:
  8055                           	callstack 0
  8056                           
  8057 ;; *************** function ___wmul *****************
  8058 ;; Defined at:
  8059 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  multiplier      2    1[COMRAM] unsigned int 
  8062 ;;  multiplicand    2    3[COMRAM] unsigned int 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  product         2    5[COMRAM] unsigned int 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  2    1[COMRAM] unsigned int 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0, prodl, prodh
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;Total ram usage:        6 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; Hardware stack levels required when called: 2
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_my_putint
  8085 ;;		_read_prec_or_width
  8086 ;;		_DispLogData
  8087 ;;		_input2menu
  8088 ;;		_SetSubStringData
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text28
  8093   012A66                     __ptext28:
  8094                           	callstack 0
  8095   012A66                     ___wmul:
  8096                           	callstack 23
  8097   012A66  5002               	movf	___wmul@multiplier^0,w,c
  8098   012A68  0204               	mulwf	___wmul@multiplicand^0,c
  8099   012A6A  CFF3 F006          	movff	prodl,___wmul@product
  8100   012A6E  CFF4 F007          	movff	prodh,___wmul@product+1
  8101   012A72  5002               	movf	___wmul@multiplier^0,w,c
  8102   012A74  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  8103   012A76  50F3               	movf	243,w,c
  8104   012A78  2607               	addwf	(___wmul@product+1)^0,f,c
  8105   012A7A  5003               	movf	(___wmul@multiplier+1)^0,w,c
  8106   012A7C  0204               	mulwf	___wmul@multiplicand^0,c
  8107   012A7E  50F3               	movf	243,w,c
  8108   012A80  2607               	addwf	(___wmul@product+1)^0,f,c
  8109   012A82  C006  F002         	movff	___wmul@product,?___wmul
  8110   012A86  C007  F003         	movff	___wmul@product+1,?___wmul+1
  8111   012A8A  0012               	return		;funcret
  8112   012A8C                     __end_of___wmul:
  8113                           	callstack 0
  8114                           
  8115 ;; *************** function ___awdiv *****************
  8116 ;; Defined at:
  8117 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  dividend        2    1[COMRAM] int 
  8120 ;;  divisor         2    3[COMRAM] int 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  quotient        2    7[COMRAM] int 
  8123 ;;  sign            1    6[COMRAM] unsigned char 
  8124 ;;  counter         1    5[COMRAM] unsigned char 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  2    1[COMRAM] int 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;Total ram usage:        8 bytes
  8139 ;; Hardware stack levels used: 1
  8140 ;; Hardware stack levels required when called: 2
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_my_putint
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text29
  8149   012516                     __ptext29:
  8150                           	callstack 0
  8151   012516                     ___awdiv:
  8152                           	callstack 26
  8153   012516  0E00               	movlw	0
  8154   012518  6E07               	movwf	___awdiv@sign^0,c
  8155   01251A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  8156   01251C  EF94  F092         	goto	u3440
  8157   012520  EF92  F092         	goto	u3441
  8158   012524                     u3441:
  8159   012524  EF9A  F092         	goto	l3796
  8160   012528                     u3440:
  8161   012528  6C04               	negf	___awdiv@divisor^0,c
  8162   01252A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  8163   01252C  B0D8               	btfsc	status,0,c
  8164   01252E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  8165   012530  0E01               	movlw	1
  8166   012532  6E07               	movwf	___awdiv@sign^0,c
  8167   012534                     l3796:
  8168   012534  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  8169   012536  EFA1  F092         	goto	u3450
  8170   01253A  EF9F  F092         	goto	u3451
  8171   01253E                     u3451:
  8172   01253E  EFA7  F092         	goto	l3802
  8173   012542                     u3450:
  8174   012542  6C02               	negf	___awdiv@dividend^0,c
  8175   012544  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  8176   012546  B0D8               	btfsc	status,0,c
  8177   012548  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  8178   01254A  0E01               	movlw	1
  8179   01254C  1A07               	xorwf	___awdiv@sign^0,f,c
  8180   01254E                     l3802:
  8181   01254E  0E00               	movlw	0
  8182   012550  6E09               	movwf	(___awdiv@quotient+1)^0,c
  8183   012552  0E00               	movlw	0
  8184   012554  6E08               	movwf	___awdiv@quotient^0,c
  8185   012556  5004               	movf	___awdiv@divisor^0,w,c
  8186   012558  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  8187   01255A  B4D8               	btfsc	status,2,c
  8188   01255C  EFB2  F092         	goto	u3461
  8189   012560  EFB4  F092         	goto	u3460
  8190   012564                     u3461:
  8191   012564  EFDC  F092         	goto	l3824
  8192   012568                     u3460:
  8193   012568  0E01               	movlw	1
  8194   01256A  6E06               	movwf	___awdiv@counter^0,c
  8195   01256C  EFBC  F092         	goto	l3810
  8196   012570                     l3808:
  8197   012570  90D8               	bcf	status,0,c
  8198   012572  3604               	rlcf	___awdiv@divisor^0,f,c
  8199   012574  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  8200   012576  2A06               	incf	___awdiv@counter^0,f,c
  8201   012578                     l3810:
  8202   012578  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  8203   01257A  EFC1  F092         	goto	u3471
  8204   01257E  EFC3  F092         	goto	u3470
  8205   012582                     u3471:
  8206   012582  EFB8  F092         	goto	l3808
  8207   012586                     u3470:
  8208   012586                     l3812:
  8209   012586  90D8               	bcf	status,0,c
  8210   012588  3608               	rlcf	___awdiv@quotient^0,f,c
  8211   01258A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  8212   01258C  5004               	movf	___awdiv@divisor^0,w,c
  8213   01258E  5C02               	subwf	___awdiv@dividend^0,w,c
  8214   012590  5005               	movf	(___awdiv@divisor+1)^0,w,c
  8215   012592  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  8216   012594  A0D8               	btfss	status,0,c
  8217   012596  EFCF  F092         	goto	u3481
  8218   01259A  EFD1  F092         	goto	u3480
  8219   01259E                     u3481:
  8220   01259E  EFD6  F092         	goto	l3820
  8221   0125A2                     u3480:
  8222   0125A2  5004               	movf	___awdiv@divisor^0,w,c
  8223   0125A4  5E02               	subwf	___awdiv@dividend^0,f,c
  8224   0125A6  5005               	movf	(___awdiv@divisor+1)^0,w,c
  8225   0125A8  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  8226   0125AA  8008               	bsf	___awdiv@quotient^0,0,c
  8227   0125AC                     l3820:
  8228   0125AC  90D8               	bcf	status,0,c
  8229   0125AE  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  8230   0125B0  3204               	rrcf	___awdiv@divisor^0,f,c
  8231   0125B2  2E06               	decfsz	___awdiv@counter^0,f,c
  8232   0125B4  EFC3  F092         	goto	l3812
  8233   0125B8                     l3824:
  8234   0125B8  5007               	movf	___awdiv@sign^0,w,c
  8235   0125BA  B4D8               	btfsc	status,2,c
  8236   0125BC  EFE2  F092         	goto	u3491
  8237   0125C0  EFE4  F092         	goto	u3490
  8238   0125C4                     u3491:
  8239   0125C4  EFE8  F092         	goto	l3828
  8240   0125C8                     u3490:
  8241   0125C8  6C08               	negf	___awdiv@quotient^0,c
  8242   0125CA  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  8243   0125CC  B0D8               	btfsc	status,0,c
  8244   0125CE  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  8245   0125D0                     l3828:
  8246   0125D0  C008  F002         	movff	___awdiv@quotient,?___awdiv
  8247   0125D4  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  8248   0125D8  0012               	return		;funcret
  8249   0125DA                     __end_of___awdiv:
  8250                           	callstack 0
  8251                           
  8252 ;; *************** function ___xxtofl *****************
  8253 ;; Defined at:
  8254 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  sign            1    wreg     unsigned char 
  8257 ;;  val             4    1[COMRAM] long 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  sign            1    9[COMRAM] unsigned char 
  8260 ;;  arg             4   11[COMRAM] unsigned long 
  8261 ;;  exp             1   10[COMRAM] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  4    1[COMRAM] unsigned char 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8274 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8275 ;;Total ram usage:       14 bytes
  8276 ;; Hardware stack levels used: 1
  8277 ;; Hardware stack levels required when called: 2
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_my_putfloat
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text30
  8286   011766                     __ptext30:
  8287                           	callstack 0
  8288   011766                     ___xxtofl:
  8289                           	callstack 26
  8290                           
  8291                           ;incstack = 0
  8292                           ;___xxtofl@sign stored from wreg
  8293   011766  6E0A               	movwf	___xxtofl@sign^0,c
  8294   011768  500A               	movf	___xxtofl@sign^0,w,c
  8295   01176A  B4D8               	btfsc	status,2,c
  8296   01176C  EFBA  F08B         	goto	u3891
  8297   011770  EFBC  F08B         	goto	u3890
  8298   011774                     u3891:
  8299   011774  EFDE  F08B         	goto	l1166
  8300   011778                     u3890:
  8301   011778  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  8302   01177A  EFC3  F08B         	goto	u3900
  8303   01177E  EFC1  F08B         	goto	u3901
  8304   011782                     u3901:
  8305   011782  EFDE  F08B         	goto	l1166
  8306   011786                     u3900:
  8307   011786  C002  F006         	movff	___xxtofl@val,??___xxtofl
  8308   01178A  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
  8309   01178E  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
  8310   011792  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
  8311   011796  1E06               	comf	??___xxtofl^0,f,c
  8312   011798  1E07               	comf	(??___xxtofl+1)^0,f,c
  8313   01179A  1E08               	comf	(??___xxtofl+2)^0,f,c
  8314   01179C  1E09               	comf	(??___xxtofl+3)^0,f,c
  8315   01179E  2A06               	incf	??___xxtofl^0,f,c
  8316   0117A0  0E00               	movlw	0
  8317   0117A2  2207               	addwfc	(??___xxtofl+1)^0,f,c
  8318   0117A4  2208               	addwfc	(??___xxtofl+2)^0,f,c
  8319   0117A6  2209               	addwfc	(??___xxtofl+3)^0,f,c
  8320   0117A8  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
  8321   0117AC  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
  8322   0117B0  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
  8323   0117B4  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
  8324   0117B8  EFE6  F08B         	goto	l4222
  8325   0117BC                     l1166:
  8326   0117BC  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
  8327   0117C0  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8328   0117C4  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8329   0117C8  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8330   0117CC                     l4222:
  8331   0117CC  5002               	movf	___xxtofl@val^0,w,c
  8332   0117CE  1003               	iorwf	(___xxtofl@val+1)^0,w,c
  8333   0117D0  1004               	iorwf	(___xxtofl@val+2)^0,w,c
  8334   0117D2  1005               	iorwf	(___xxtofl@val+3)^0,w,c
  8335   0117D4  A4D8               	btfss	status,2,c
  8336   0117D6  EFEF  F08B         	goto	u3911
  8337   0117DA  EFF1  F08B         	goto	u3910
  8338   0117DE                     u3911:
  8339   0117DE  EFFB  F08B         	goto	l4228
  8340   0117E2                     u3910:
  8341   0117E2  0E00               	movlw	0
  8342   0117E4  6E02               	movwf	?___xxtofl^0,c
  8343   0117E6  0E00               	movlw	0
  8344   0117E8  6E03               	movwf	(?___xxtofl+1)^0,c
  8345   0117EA  0E00               	movlw	0
  8346   0117EC  6E04               	movwf	(?___xxtofl+2)^0,c
  8347   0117EE  0E00               	movlw	0
  8348   0117F0  6E05               	movwf	(?___xxtofl+3)^0,c
  8349   0117F2  EF8C  F08C         	goto	l1169
  8350   0117F6                     l4228:
  8351   0117F6  0E96               	movlw	150
  8352   0117F8  6E0B               	movwf	___xxtofl@exp^0,c
  8353   0117FA  EF05  F08C         	goto	l4232
  8354   0117FE                     l4230:
  8355   0117FE  2A0B               	incf	___xxtofl@exp^0,f,c
  8356   011800  90D8               	bcf	status,0,c
  8357   011802  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  8358   011804  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  8359   011806  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  8360   011808  320C               	rrcf	___xxtofl@arg^0,f,c
  8361   01180A                     l4232:
  8362   01180A  0E00               	movlw	0
  8363   01180C  140C               	andwf	___xxtofl@arg^0,w,c
  8364   01180E  6E06               	movwf	??___xxtofl^0,c
  8365   011810  0E00               	movlw	0
  8366   011812  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  8367   011814  6E07               	movwf	(??___xxtofl+1)^0,c
  8368   011816  0E00               	movlw	0
  8369   011818  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  8370   01181A  6E08               	movwf	(??___xxtofl+2)^0,c
  8371   01181C  0EFE               	movlw	254
  8372   01181E  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  8373   011820  6E09               	movwf	(??___xxtofl+3)^0,c
  8374   011822  5006               	movf	??___xxtofl^0,w,c
  8375   011824  1007               	iorwf	(??___xxtofl+1)^0,w,c
  8376   011826  1008               	iorwf	(??___xxtofl+2)^0,w,c
  8377   011828  1009               	iorwf	(??___xxtofl+3)^0,w,c
  8378   01182A  A4D8               	btfss	status,2,c
  8379   01182C  EF1A  F08C         	goto	u3921
  8380   011830  EF1C  F08C         	goto	u3920
  8381   011834                     u3921:
  8382   011834  EFFF  F08B         	goto	l4230
  8383   011838                     u3920:
  8384   011838  EF2A  F08C         	goto	l1173
  8385   01183C                     l4234:
  8386   01183C  2A0B               	incf	___xxtofl@exp^0,f,c
  8387   01183E  0E01               	movlw	1
  8388   011840  260C               	addwf	___xxtofl@arg^0,f,c
  8389   011842  0E00               	movlw	0
  8390   011844  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
  8391   011846  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
  8392   011848  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
  8393   01184A  90D8               	bcf	status,0,c
  8394   01184C  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
  8395   01184E  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
  8396   011850  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
  8397   011852  320C               	rrcf	___xxtofl@arg^0,f,c
  8398   011854                     l1173:
  8399   011854  0E00               	movlw	0
  8400   011856  140C               	andwf	___xxtofl@arg^0,w,c
  8401   011858  6E06               	movwf	??___xxtofl^0,c
  8402   01185A  0E00               	movlw	0
  8403   01185C  140D               	andwf	(___xxtofl@arg+1)^0,w,c
  8404   01185E  6E07               	movwf	(??___xxtofl+1)^0,c
  8405   011860  0E00               	movlw	0
  8406   011862  140E               	andwf	(___xxtofl@arg+2)^0,w,c
  8407   011864  6E08               	movwf	(??___xxtofl+2)^0,c
  8408   011866  0EFF               	movlw	255
  8409   011868  140F               	andwf	(___xxtofl@arg+3)^0,w,c
  8410   01186A  6E09               	movwf	(??___xxtofl+3)^0,c
  8411   01186C  5006               	movf	??___xxtofl^0,w,c
  8412   01186E  1007               	iorwf	(??___xxtofl+1)^0,w,c
  8413   011870  1008               	iorwf	(??___xxtofl+2)^0,w,c
  8414   011872  1009               	iorwf	(??___xxtofl+3)^0,w,c
  8415   011874  A4D8               	btfss	status,2,c
  8416   011876  EF3F  F08C         	goto	u3931
  8417   01187A  EF41  F08C         	goto	u3930
  8418   01187E                     u3931:
  8419   01187E  EF1E  F08C         	goto	l4234
  8420   011882                     u3930:
  8421   011882  EF49  F08C         	goto	l4242
  8422   011886                     l4240:
  8423   011886  060B               	decf	___xxtofl@exp^0,f,c
  8424   011888  90D8               	bcf	status,0,c
  8425   01188A  360C               	rlcf	___xxtofl@arg^0,f,c
  8426   01188C  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
  8427   01188E  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
  8428   011890  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
  8429   011892                     l4242:
  8430   011892  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
  8431   011894  EF4E  F08C         	goto	u3941
  8432   011898  EF50  F08C         	goto	u3940
  8433   01189C                     u3941:
  8434   01189C  EF58  F08C         	goto	l1180
  8435   0118A0                     u3940:
  8436   0118A0  0E02               	movlw	2
  8437   0118A2  600B               	cpfslt	___xxtofl@exp^0,c
  8438   0118A4  EF56  F08C         	goto	u3951
  8439   0118A8  EF58  F08C         	goto	u3950
  8440   0118AC                     u3951:
  8441   0118AC  EF43  F08C         	goto	l4240
  8442   0118B0                     u3950:
  8443   0118B0                     l1180:
  8444   0118B0  B00B               	btfsc	___xxtofl@exp^0,0,c
  8445   0118B2  EF5D  F08C         	goto	u3961
  8446   0118B6  EF5F  F08C         	goto	u3960
  8447   0118BA                     u3961:
  8448   0118BA  EF60  F08C         	goto	l4248
  8449   0118BE                     u3960:
  8450   0118BE  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
  8451   0118C0                     l4248:
  8452   0118C0  90D8               	bcf	status,0,c
  8453   0118C2  320B               	rrcf	___xxtofl@exp^0,f,c
  8454   0118C4  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
  8455   0118C8  6A07               	clrf	(??___xxtofl+1)^0,c
  8456   0118CA  6A08               	clrf	(??___xxtofl+2)^0,c
  8457   0118CC  6A09               	clrf	(??___xxtofl+3)^0,c
  8458   0118CE  C006  F009         	movff	??___xxtofl,??___xxtofl+3
  8459   0118D2  6A08               	clrf	(??___xxtofl+2)^0,c
  8460   0118D4  6A07               	clrf	(??___xxtofl+1)^0,c
  8461   0118D6  6A06               	clrf	??___xxtofl^0,c
  8462   0118D8  5006               	movf	??___xxtofl^0,w,c
  8463   0118DA  120C               	iorwf	___xxtofl@arg^0,f,c
  8464   0118DC  5007               	movf	(??___xxtofl+1)^0,w,c
  8465   0118DE  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
  8466   0118E0  5008               	movf	(??___xxtofl+2)^0,w,c
  8467   0118E2  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
  8468   0118E4  5009               	movf	(??___xxtofl+3)^0,w,c
  8469   0118E6  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
  8470   0118E8  500A               	movf	___xxtofl@sign^0,w,c
  8471   0118EA  B4D8               	btfsc	status,2,c
  8472   0118EC  EF7A  F08C         	goto	u3971
  8473   0118F0  EF7C  F08C         	goto	u3970
  8474   0118F4                     u3971:
  8475   0118F4  EF84  F08C         	goto	l4258
  8476   0118F8                     u3970:
  8477   0118F8  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
  8478   0118FA  EF83  F08C         	goto	u3980
  8479   0118FE  EF81  F08C         	goto	u3981
  8480   011902                     u3981:
  8481   011902  EF84  F08C         	goto	l4258
  8482   011906                     u3980:
  8483   011906  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
  8484   011908                     l4258:
  8485   011908  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
  8486   01190C  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
  8487   011910  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
  8488   011914  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
  8489   011918                     l1169:
  8490   011918  0012               	return		;funcret
  8491   01191A                     __end_of___xxtofl:
  8492                           	callstack 0
  8493                           
  8494 ;; *************** function ___fltol *****************
  8495 ;; Defined at:
  8496 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  f1              4    1[COMRAM] unsigned char 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;  exp1            1   10[COMRAM] unsigned char 
  8501 ;;  sign1           1    9[COMRAM] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  4    1[COMRAM] long 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8514 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8515 ;;Total ram usage:       10 bytes
  8516 ;; Hardware stack levels used: 1
  8517 ;; Hardware stack levels required when called: 2
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_my_putfloat
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text31
  8526   011F9A                     __ptext31:
  8527                           	callstack 0
  8528   011F9A                     ___fltol:
  8529                           	callstack 26
  8530   011F9A  3404               	rlcf	(___fltol@f1+2)^0,w,c
  8531   011F9C  3405               	rlcf	(___fltol@f1+3)^0,w,c
  8532   011F9E  6E0B               	movwf	___fltol@exp1^0,c
  8533   011FA0  500B               	movf	___fltol@exp1^0,w,c
  8534   011FA2  A4D8               	btfss	status,2,c
  8535   011FA4  EFD6  F08F         	goto	u3821
  8536   011FA8  EFD8  F08F         	goto	u3820
  8537   011FAC                     u3821:
  8538   011FAC  EFE2  F08F         	goto	l4178
  8539   011FB0                     u3820:
  8540   011FB0                     l4174:
  8541   011FB0  0E00               	movlw	0
  8542   011FB2  6E02               	movwf	?___fltol^0,c
  8543   011FB4  0E00               	movlw	0
  8544   011FB6  6E03               	movwf	(?___fltol+1)^0,c
  8545   011FB8  0E00               	movlw	0
  8546   011FBA  6E04               	movwf	(?___fltol+2)^0,c
  8547   011FBC  0E00               	movlw	0
  8548   011FBE  6E05               	movwf	(?___fltol+3)^0,c
  8549   011FC0  EF4F  F090         	goto	l808
  8550   011FC4                     l4178:
  8551   011FC4  C002  F006         	movff	___fltol@f1,??___fltol
  8552   011FC8  C003  F007         	movff	___fltol@f1+1,??___fltol+1
  8553   011FCC  C004  F008         	movff	___fltol@f1+2,??___fltol+2
  8554   011FD0  C005  F009         	movff	___fltol@f1+3,??___fltol+3
  8555   011FD4  0E20               	movlw	32
  8556   011FD6  EFF2  F08F         	goto	u3830
  8557   011FDA                     u3835:
  8558   011FDA  90D8               	bcf	status,0,c
  8559   011FDC  3209               	rrcf	(??___fltol+3)^0,f,c
  8560   011FDE  3208               	rrcf	(??___fltol+2)^0,f,c
  8561   011FE0  3207               	rrcf	(??___fltol+1)^0,f,c
  8562   011FE2  3206               	rrcf	??___fltol^0,f,c
  8563   011FE4                     u3830:
  8564   011FE4  2EE8               	decfsz	wreg,f,c
  8565   011FE6  EFED  F08F         	goto	u3835
  8566   011FEA  5006               	movf	??___fltol^0,w,c
  8567   011FEC  6E0A               	movwf	___fltol@sign1^0,c
  8568   011FEE  8E04               	bsf	(___fltol@f1+2)^0,7,c
  8569   011FF0  0EFF               	movlw	255
  8570   011FF2  1602               	andwf	___fltol@f1^0,f,c
  8571   011FF4  0EFF               	movlw	255
  8572   011FF6  1603               	andwf	(___fltol@f1+1)^0,f,c
  8573   011FF8  0EFF               	movlw	255
  8574   011FFA  1604               	andwf	(___fltol@f1+2)^0,f,c
  8575   011FFC  0E00               	movlw	0
  8576   011FFE  1605               	andwf	(___fltol@f1+3)^0,f,c
  8577   012000  0E96               	movlw	150
  8578   012002  5E0B               	subwf	___fltol@exp1^0,f,c
  8579   012004  BE0B               	btfsc	___fltol@exp1^0,7,c
  8580   012006  EF09  F090         	goto	u3840
  8581   01200A  EF07  F090         	goto	u3841
  8582   01200E                     u3841:
  8583   01200E  EF1F  F090         	goto	l4198
  8584   012012                     u3840:
  8585   012012  500B               	movf	___fltol@exp1^0,w,c
  8586   012014  0A80               	xorlw	128
  8587   012016  0F97               	addlw	151
  8588   012018  B0D8               	btfsc	status,0,c
  8589   01201A  EF11  F090         	goto	u3851
  8590   01201E  EF13  F090         	goto	u3850
  8591   012022                     u3851:
  8592   012022  EF15  F090         	goto	l4194
  8593   012026                     u3850:
  8594   012026  EFD8  F08F         	goto	l4174
  8595   01202A                     l4194:
  8596   01202A  90D8               	bcf	status,0,c
  8597   01202C  3205               	rrcf	(___fltol@f1+3)^0,f,c
  8598   01202E  3204               	rrcf	(___fltol@f1+2)^0,f,c
  8599   012030  3203               	rrcf	(___fltol@f1+1)^0,f,c
  8600   012032  3202               	rrcf	___fltol@f1^0,f,c
  8601   012034  3E0B               	incfsz	___fltol@exp1^0,f,c
  8602   012036  EF15  F090         	goto	l4194
  8603   01203A  EF37  F090         	goto	l4208
  8604   01203E                     l4198:
  8605   01203E  0E1F               	movlw	31
  8606   012040  640B               	cpfsgt	___fltol@exp1^0,c
  8607   012042  EF25  F090         	goto	u3861
  8608   012046  EF27  F090         	goto	u3860
  8609   01204A                     u3861:
  8610   01204A  EF2F  F090         	goto	l4206
  8611   01204E                     u3860:
  8612   01204E  EFD8  F08F         	goto	l4174
  8613   012052                     l4204:
  8614   012052  90D8               	bcf	status,0,c
  8615   012054  3602               	rlcf	___fltol@f1^0,f,c
  8616   012056  3603               	rlcf	(___fltol@f1+1)^0,f,c
  8617   012058  3604               	rlcf	(___fltol@f1+2)^0,f,c
  8618   01205A  3605               	rlcf	(___fltol@f1+3)^0,f,c
  8619   01205C  060B               	decf	___fltol@exp1^0,f,c
  8620   01205E                     l4206:
  8621   01205E  500B               	movf	___fltol@exp1^0,w,c
  8622   012060  A4D8               	btfss	status,2,c
  8623   012062  EF35  F090         	goto	u3871
  8624   012066  EF37  F090         	goto	u3870
  8625   01206A                     u3871:
  8626   01206A  EF29  F090         	goto	l4204
  8627   01206E                     u3870:
  8628   01206E                     l4208:
  8629   01206E  500A               	movf	___fltol@sign1^0,w,c
  8630   012070  B4D8               	btfsc	status,2,c
  8631   012072  EF3D  F090         	goto	u3881
  8632   012076  EF3F  F090         	goto	u3880
  8633   01207A                     u3881:
  8634   01207A  EF47  F090         	goto	l4212
  8635   01207E                     u3880:
  8636   01207E  1E05               	comf	(___fltol@f1+3)^0,f,c
  8637   012080  1E04               	comf	(___fltol@f1+2)^0,f,c
  8638   012082  1E03               	comf	(___fltol@f1+1)^0,f,c
  8639   012084  6C02               	negf	___fltol@f1^0,c
  8640   012086  0E00               	movlw	0
  8641   012088  2203               	addwfc	(___fltol@f1+1)^0,f,c
  8642   01208A  2204               	addwfc	(___fltol@f1+2)^0,f,c
  8643   01208C  2205               	addwfc	(___fltol@f1+3)^0,f,c
  8644   01208E                     l4212:
  8645   01208E  C002  F002         	movff	___fltol@f1,?___fltol
  8646   012092  C003  F003         	movff	___fltol@f1+1,?___fltol+1
  8647   012096  C004  F004         	movff	___fltol@f1+2,?___fltol+2
  8648   01209A  C005  F005         	movff	___fltol@f1+3,?___fltol+3
  8649   01209E                     l808:
  8650   01209E  0012               	return		;funcret
  8651   0120A0                     __end_of___fltol:
  8652                           	callstack 0
  8653                           
  8654 ;; *************** function ___flsub *****************
  8655 ;; Defined at:
  8656 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  b               4   17[COMRAM] long 
  8659 ;;  a               4   21[COMRAM] long 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;		None
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  4   17[COMRAM] long 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0, cstack
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8671 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8675 ;;Total ram usage:        8 bytes
  8676 ;; Hardware stack levels used: 1
  8677 ;; Hardware stack levels required when called: 3
  8678 ;; This function calls:
  8679 ;;		___fladd
  8680 ;; This function is called by:
  8681 ;;		_my_putfloat
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text32
  8686   0128DC                     __ptext32:
  8687                           	callstack 0
  8688   0128DC                     ___flsub:
  8689                           	callstack 25
  8690   0128DC  0E00               	movlw	0
  8691   0128DE  1A16               	xorwf	___flsub@a^0,f,c
  8692   0128E0  0E00               	movlw	0
  8693   0128E2  1A17               	xorwf	(___flsub@a+1)^0,f,c
  8694   0128E4  0E00               	movlw	0
  8695   0128E6  1A18               	xorwf	(___flsub@a+2)^0,f,c
  8696   0128E8  0E80               	movlw	128
  8697   0128EA  1A19               	xorwf	(___flsub@a+3)^0,f,c
  8698   0128EC  C012  F002         	movff	___flsub@b,___fladd@b
  8699   0128F0  C013  F003         	movff	___flsub@b+1,___fladd@b+1
  8700   0128F4  C014  F004         	movff	___flsub@b+2,___fladd@b+2
  8701   0128F8  C015  F005         	movff	___flsub@b+3,___fladd@b+3
  8702   0128FC  C016  F006         	movff	___flsub@a,___fladd@a
  8703   012900  C017  F007         	movff	___flsub@a+1,___fladd@a+1
  8704   012904  C018  F008         	movff	___flsub@a+2,___fladd@a+2
  8705   012908  C019  F009         	movff	___flsub@a+3,___fladd@a+3
  8706   01290C  EC66  F082         	call	___fladd	;wreg free
  8707   012910  C002  F012         	movff	?___fladd,?___flsub
  8708   012914  C003  F013         	movff	?___fladd+1,?___flsub+1
  8709   012918  C004  F014         	movff	?___fladd+2,?___flsub+2
  8710   01291C  C005  F015         	movff	?___fladd+3,?___flsub+3
  8711   012920  0012               	return		;funcret
  8712   012922                     __end_of___flsub:
  8713                           	callstack 0
  8714                           
  8715 ;; *************** function ___fladd *****************
  8716 ;; Defined at:
  8717 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  b               4    1[COMRAM] long 
  8720 ;;  a               4    5[COMRAM] long 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  grs             1   16[COMRAM] unsigned char 
  8723 ;;  bexp            1   15[COMRAM] unsigned char 
  8724 ;;  aexp            1   14[COMRAM] unsigned char 
  8725 ;;  signs           1   13[COMRAM] unsigned char 
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  4    1[COMRAM] unsigned char 
  8728 ;; Registers used:
  8729 ;;		wreg, status,2, status,0
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8736 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8738 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8739 ;;Total ram usage:       16 bytes
  8740 ;; Hardware stack levels used: 1
  8741 ;; Hardware stack levels required when called: 2
  8742 ;; This function calls:
  8743 ;;		Nothing
  8744 ;; This function is called by:
  8745 ;;		___flsub
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text33
  8750   0104CC                     __ptext33:
  8751                           	callstack 0
  8752   0104CC                     ___fladd:
  8753                           	callstack 25
  8754   0104CC  5005               	movf	(___fladd@b+3)^0,w,c
  8755   0104CE  0B80               	andlw	128
  8756   0104D0  6E0E               	movwf	___fladd@signs^0,c
  8757   0104D2  5005               	movf	(___fladd@b+3)^0,w,c
  8758   0104D4  2405               	addwf	(___fladd@b+3)^0,w,c
  8759   0104D6  6E10               	movwf	___fladd@bexp^0,c
  8760   0104D8  AE04               	btfss	(___fladd@b+2)^0,7,c
  8761   0104DA  EF71  F082         	goto	u3051
  8762   0104DE  EF73  F082         	goto	u3050
  8763   0104E2                     u3051:
  8764   0104E2  EF74  F082         	goto	l3592
  8765   0104E6                     u3050:
  8766   0104E6  8010               	bsf	___fladd@bexp^0,0,c
  8767   0104E8                     l3592:
  8768   0104E8  5010               	movf	___fladd@bexp^0,w,c
  8769   0104EA  B4D8               	btfsc	status,2,c
  8770   0104EC  EF7A  F082         	goto	u3061
  8771   0104F0  EF7C  F082         	goto	u3060
  8772   0104F4                     u3061:
  8773   0104F4  EF91  F082         	goto	l3602
  8774   0104F8                     u3060:
  8775   0104F8  2810               	incf	___fladd@bexp^0,w,c
  8776   0104FA  A4D8               	btfss	status,2,c
  8777   0104FC  EF82  F082         	goto	u3071
  8778   010500  EF84  F082         	goto	u3070
  8779   010504                     u3071:
  8780   010504  EF8C  F082         	goto	l3598
  8781   010508                     u3070:
  8782   010508  0E00               	movlw	0
  8783   01050A  6E02               	movwf	___fladd@b^0,c
  8784   01050C  0E00               	movlw	0
  8785   01050E  6E03               	movwf	(___fladd@b+1)^0,c
  8786   010510  0E00               	movlw	0
  8787   010512  6E04               	movwf	(___fladd@b+2)^0,c
  8788   010514  0E00               	movlw	0
  8789   010516  6E05               	movwf	(___fladd@b+3)^0,c
  8790   010518                     l3598:
  8791   010518  8E04               	bsf	(___fladd@b+2)^0,7,c
  8792   01051A  0E00               	movlw	0
  8793   01051C  6E05               	movwf	(___fladd@b+3)^0,c
  8794   01051E  EF99  F082         	goto	l3604
  8795   010522                     l3602:
  8796   010522  0E00               	movlw	0
  8797   010524  6E02               	movwf	___fladd@b^0,c
  8798   010526  0E00               	movlw	0
  8799   010528  6E03               	movwf	(___fladd@b+1)^0,c
  8800   01052A  0E00               	movlw	0
  8801   01052C  6E04               	movwf	(___fladd@b+2)^0,c
  8802   01052E  0E00               	movlw	0
  8803   010530  6E05               	movwf	(___fladd@b+3)^0,c
  8804   010532                     l3604:
  8805   010532  5009               	movf	(___fladd@a+3)^0,w,c
  8806   010534  0B80               	andlw	128
  8807   010536  6E0F               	movwf	___fladd@aexp^0,c
  8808   010538  500E               	movf	___fladd@signs^0,w,c
  8809   01053A  180F               	xorwf	___fladd@aexp^0,w,c
  8810   01053C  B4D8               	btfsc	status,2,c
  8811   01053E  EFA3  F082         	goto	u3081
  8812   010542  EFA5  F082         	goto	u3080
  8813   010546                     u3081:
  8814   010546  EFA6  F082         	goto	l3610
  8815   01054A                     u3080:
  8816   01054A  8C0E               	bsf	___fladd@signs^0,6,c
  8817   01054C                     l3610:
  8818   01054C  5009               	movf	(___fladd@a+3)^0,w,c
  8819   01054E  2409               	addwf	(___fladd@a+3)^0,w,c
  8820   010550  6E0F               	movwf	___fladd@aexp^0,c
  8821   010552  AE08               	btfss	(___fladd@a+2)^0,7,c
  8822   010554  EFAE  F082         	goto	u3091
  8823   010558  EFB0  F082         	goto	u3090
  8824   01055C                     u3091:
  8825   01055C  EFB1  F082         	goto	l3616
  8826   010560                     u3090:
  8827   010560  800F               	bsf	___fladd@aexp^0,0,c
  8828   010562                     l3616:
  8829   010562  500F               	movf	___fladd@aexp^0,w,c
  8830   010564  B4D8               	btfsc	status,2,c
  8831   010566  EFB7  F082         	goto	u3101
  8832   01056A  EFB9  F082         	goto	u3100
  8833   01056E                     u3101:
  8834   01056E  EFCE  F082         	goto	l3626
  8835   010572                     u3100:
  8836   010572  280F               	incf	___fladd@aexp^0,w,c
  8837   010574  A4D8               	btfss	status,2,c
  8838   010576  EFBF  F082         	goto	u3111
  8839   01057A  EFC1  F082         	goto	u3110
  8840   01057E                     u3111:
  8841   01057E  EFC9  F082         	goto	l3622
  8842   010582                     u3110:
  8843   010582  0E00               	movlw	0
  8844   010584  6E06               	movwf	___fladd@a^0,c
  8845   010586  0E00               	movlw	0
  8846   010588  6E07               	movwf	(___fladd@a+1)^0,c
  8847   01058A  0E00               	movlw	0
  8848   01058C  6E08               	movwf	(___fladd@a+2)^0,c
  8849   01058E  0E00               	movlw	0
  8850   010590  6E09               	movwf	(___fladd@a+3)^0,c
  8851   010592                     l3622:
  8852   010592  8E08               	bsf	(___fladd@a+2)^0,7,c
  8853   010594  0E00               	movlw	0
  8854   010596  6E09               	movwf	(___fladd@a+3)^0,c
  8855   010598  EFD6  F082         	goto	l3628
  8856   01059C                     l3626:
  8857   01059C  0E00               	movlw	0
  8858   01059E  6E06               	movwf	___fladd@a^0,c
  8859   0105A0  0E00               	movlw	0
  8860   0105A2  6E07               	movwf	(___fladd@a+1)^0,c
  8861   0105A4  0E00               	movlw	0
  8862   0105A6  6E08               	movwf	(___fladd@a+2)^0,c
  8863   0105A8  0E00               	movlw	0
  8864   0105AA  6E09               	movwf	(___fladd@a+3)^0,c
  8865   0105AC                     l3628:
  8866   0105AC  5010               	movf	___fladd@bexp^0,w,c
  8867   0105AE  5C0F               	subwf	___fladd@aexp^0,w,c
  8868   0105B0  B0D8               	btfsc	status,0,c
  8869   0105B2  EFDD  F082         	goto	u3121
  8870   0105B6  EFDF  F082         	goto	u3120
  8871   0105BA                     u3121:
  8872   0105BA  EF06  F083         	goto	l3664
  8873   0105BE                     u3120:
  8874   0105BE  AC0E               	btfss	___fladd@signs^0,6,c
  8875   0105C0  EFE4  F082         	goto	u3131
  8876   0105C4  EFE6  F082         	goto	u3130
  8877   0105C8                     u3131:
  8878   0105C8  EFE8  F082         	goto	l3634
  8879   0105CC                     u3130:
  8880   0105CC  0E80               	movlw	128
  8881   0105CE  1A0E               	xorwf	___fladd@signs^0,f,c
  8882   0105D0                     l3634:
  8883   0105D0  C010  F011         	movff	___fladd@bexp,___fladd@grs
  8884   0105D4  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
  8885   0105D8  C011  F00F         	movff	___fladd@grs,___fladd@aexp
  8886   0105DC  C002  F011         	movff	___fladd@b,___fladd@grs
  8887   0105E0  C006  F002         	movff	___fladd@a,___fladd@b
  8888   0105E4  C011  F006         	movff	___fladd@grs,___fladd@a
  8889   0105E8  C003  F011         	movff	___fladd@b+1,___fladd@grs
  8890   0105EC  C007  F003         	movff	___fladd@a+1,___fladd@b+1
  8891   0105F0  C011  F007         	movff	___fladd@grs,___fladd@a+1
  8892   0105F4  C004  F011         	movff	___fladd@b+2,___fladd@grs
  8893   0105F8  C008  F004         	movff	___fladd@a+2,___fladd@b+2
  8894   0105FC  C011  F008         	movff	___fladd@grs,___fladd@a+2
  8895   010600  C005  F011         	movff	___fladd@b+3,___fladd@grs
  8896   010604  C009  F005         	movff	___fladd@a+3,___fladd@b+3
  8897   010608  C011  F009         	movff	___fladd@grs,___fladd@a+3
  8898   01060C                     l3664:
  8899   01060C  0E00               	movlw	0
  8900   01060E  6E11               	movwf	___fladd@grs^0,c
  8901   010610  5010               	movf	___fladd@bexp^0,w,c
  8902   010612  C00F  F00A         	movff	___fladd@aexp,??___fladd
  8903   010616  6A0B               	clrf	(??___fladd+1)^0,c
  8904   010618  5E0A               	subwf	??___fladd^0,f,c
  8905   01061A  0E00               	movlw	0
  8906   01061C  5A0B               	subwfb	(??___fladd+1)^0,f,c
  8907   01061E  BE0B               	btfsc	(??___fladd+1)^0,7,c
  8908   010620  EF1B  F083         	goto	u3141
  8909   010624  500B               	movf	(??___fladd+1)^0,w,c
  8910   010626  E109               	bnz	u3140
  8911   010628  0E1A               	movlw	26
  8912   01062A  5C0A               	subwf	??___fladd^0,w,c
  8913   01062C  A0D8               	btfss	status,0,c
  8914   01062E  EF1B  F083         	goto	u3141
  8915   010632  EF1D  F083         	goto	u3140
  8916   010636                     u3141:
  8917   010636  EF54  F083         	goto	l1040
  8918   01063A                     u3140:
  8919   01063A  5002               	movf	___fladd@b^0,w,c
  8920   01063C  1003               	iorwf	(___fladd@b+1)^0,w,c
  8921   01063E  1004               	iorwf	(___fladd@b+2)^0,w,c
  8922   010640  1005               	iorwf	(___fladd@b+3)^0,w,c
  8923   010642  A4D8               	btfss	status,2,c
  8924   010644  EF26  F083         	goto	u3151
  8925   010648  EF29  F083         	goto	u3150
  8926   01064C                     u3151:
  8927   01064C  0E01               	movlw	1
  8928   01064E  EF2A  F083         	goto	u3160
  8929   010652                     u3150:
  8930   010652  0E00               	movlw	0
  8931   010654                     u3160:
  8932   010654  6E11               	movwf	___fladd@grs^0,c
  8933   010656  0E00               	movlw	0
  8934   010658  6E02               	movwf	___fladd@b^0,c
  8935   01065A  0E00               	movlw	0
  8936   01065C  6E03               	movwf	(___fladd@b+1)^0,c
  8937   01065E  0E00               	movlw	0
  8938   010660  6E04               	movwf	(___fladd@b+2)^0,c
  8939   010662  0E00               	movlw	0
  8940   010664  6E05               	movwf	(___fladd@b+3)^0,c
  8941   010666  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
  8942   01066A  EF5D  F083         	goto	l1039
  8943   01066E                     l1041:
  8944   01066E  A011               	btfss	___fladd@grs^0,0,c
  8945   010670  EF3C  F083         	goto	u3171
  8946   010674  EF3E  F083         	goto	u3170
  8947   010678                     u3171:
  8948   010678  EF44  F083         	goto	l3676
  8949   01067C                     u3170:
  8950   01067C  90D8               	bcf	status,0,c
  8951   01067E  3011               	rrcf	___fladd@grs^0,w,c
  8952   010680  0901               	iorlw	1
  8953   010682  6E11               	movwf	___fladd@grs^0,c
  8954   010684  EF46  F083         	goto	l3678
  8955   010688                     l3676:
  8956   010688  90D8               	bcf	status,0,c
  8957   01068A  3211               	rrcf	___fladd@grs^0,f,c
  8958   01068C                     l3678:
  8959   01068C  A002               	btfss	___fladd@b^0,0,c
  8960   01068E  EF4B  F083         	goto	u3181
  8961   010692  EF4D  F083         	goto	u3180
  8962   010696                     u3181:
  8963   010696  EF4E  F083         	goto	l3682
  8964   01069A                     u3180:
  8965   01069A  8E11               	bsf	___fladd@grs^0,7,c
  8966   01069C                     l3682:
  8967   01069C  3405               	rlcf	(___fladd@b+3)^0,w,c
  8968   01069E  3205               	rrcf	(___fladd@b+3)^0,f,c
  8969   0106A0  3204               	rrcf	(___fladd@b+2)^0,f,c
  8970   0106A2  3203               	rrcf	(___fladd@b+1)^0,f,c
  8971   0106A4  3202               	rrcf	___fladd@b^0,f,c
  8972   0106A6  2A10               	incf	___fladd@bexp^0,f,c
  8973   0106A8                     l1040:
  8974   0106A8  500F               	movf	___fladd@aexp^0,w,c
  8975   0106AA  5C10               	subwf	___fladd@bexp^0,w,c
  8976   0106AC  A0D8               	btfss	status,0,c
  8977   0106AE  EF5B  F083         	goto	u3191
  8978   0106B2  EF5D  F083         	goto	u3190
  8979   0106B6                     u3191:
  8980   0106B6  EF37  F083         	goto	l1041
  8981   0106BA                     u3190:
  8982   0106BA                     l1039:
  8983   0106BA  BC0E               	btfsc	___fladd@signs^0,6,c
  8984   0106BC  EF62  F083         	goto	u3201
  8985   0106C0  EF64  F083         	goto	u3200
  8986   0106C4                     u3201:
  8987   0106C4  EFA4  F083         	goto	l3710
  8988   0106C8                     u3200:
  8989   0106C8  5010               	movf	___fladd@bexp^0,w,c
  8990   0106CA  A4D8               	btfss	status,2,c
  8991   0106CC  EF6A  F083         	goto	u3211
  8992   0106D0  EF6C  F083         	goto	u3210
  8993   0106D4                     u3211:
  8994   0106D4  EF76  F083         	goto	l3692
  8995   0106D8                     u3210:
  8996   0106D8  0E00               	movlw	0
  8997   0106DA  6E02               	movwf	?___fladd^0,c
  8998   0106DC  0E00               	movlw	0
  8999   0106DE  6E03               	movwf	(?___fladd+1)^0,c
  9000   0106E0  0E00               	movlw	0
  9001   0106E2  6E04               	movwf	(?___fladd+2)^0,c
  9002   0106E4  0E00               	movlw	0
  9003   0106E6  6E05               	movwf	(?___fladd+3)^0,c
  9004   0106E8  EFC5  F084         	goto	l1048
  9005   0106EC                     l3692:
  9006   0106EC  5006               	movf	___fladd@a^0,w,c
  9007   0106EE  2602               	addwf	___fladd@b^0,f,c
  9008   0106F0  5007               	movf	(___fladd@a+1)^0,w,c
  9009   0106F2  2203               	addwfc	(___fladd@b+1)^0,f,c
  9010   0106F4  5008               	movf	(___fladd@a+2)^0,w,c
  9011   0106F6  2204               	addwfc	(___fladd@b+2)^0,f,c
  9012   0106F8  5009               	movf	(___fladd@a+3)^0,w,c
  9013   0106FA  2205               	addwfc	(___fladd@b+3)^0,f,c
  9014   0106FC  A005               	btfss	(___fladd@b+3)^0,0,c
  9015   0106FE  EF83  F083         	goto	u3221
  9016   010702  EF85  F083         	goto	u3220
  9017   010706                     u3221:
  9018   010706  EF31  F084         	goto	l3746
  9019   01070A                     u3220:
  9020   01070A  A011               	btfss	___fladd@grs^0,0,c
  9021   01070C  EF8A  F083         	goto	u3231
  9022   010710  EF8C  F083         	goto	u3230
  9023   010714                     u3231:
  9024   010714  EF92  F083         	goto	l3700
  9025   010718                     u3230:
  9026   010718  90D8               	bcf	status,0,c
  9027   01071A  3011               	rrcf	___fladd@grs^0,w,c
  9028   01071C  0901               	iorlw	1
  9029   01071E  6E11               	movwf	___fladd@grs^0,c
  9030   010720  EF94  F083         	goto	l3702
  9031   010724                     l3700:
  9032   010724  90D8               	bcf	status,0,c
  9033   010726  3211               	rrcf	___fladd@grs^0,f,c
  9034   010728                     l3702:
  9035   010728  A002               	btfss	___fladd@b^0,0,c
  9036   01072A  EF99  F083         	goto	u3241
  9037   01072E  EF9B  F083         	goto	u3240
  9038   010732                     u3241:
  9039   010732  EF9C  F083         	goto	l3706
  9040   010736                     u3240:
  9041   010736  8E11               	bsf	___fladd@grs^0,7,c
  9042   010738                     l3706:
  9043   010738  3405               	rlcf	(___fladd@b+3)^0,w,c
  9044   01073A  3205               	rrcf	(___fladd@b+3)^0,f,c
  9045   01073C  3204               	rrcf	(___fladd@b+2)^0,f,c
  9046   01073E  3203               	rrcf	(___fladd@b+1)^0,f,c
  9047   010740  3202               	rrcf	___fladd@b^0,f,c
  9048   010742  2A10               	incf	___fladd@bexp^0,f,c
  9049   010744  EF31  F084         	goto	l3746
  9050   010748                     l3710:
  9051   010748  5006               	movf	___fladd@a^0,w,c
  9052   01074A  5C02               	subwf	___fladd@b^0,w,c
  9053   01074C  5007               	movf	(___fladd@a+1)^0,w,c
  9054   01074E  5803               	subwfb	(___fladd@b+1)^0,w,c
  9055   010750  5008               	movf	(___fladd@a+2)^0,w,c
  9056   010752  5804               	subwfb	(___fladd@b+2)^0,w,c
  9057   010754  5005               	movf	(___fladd@b+3)^0,w,c
  9058   010756  0A80               	xorlw	128
  9059   010758  6E0A               	movwf	??___fladd^0,c
  9060   01075A  5009               	movf	(___fladd@a+3)^0,w,c
  9061   01075C  0A80               	xorlw	128
  9062   01075E  580A               	subwfb	??___fladd^0,w,c
  9063   010760  B0D8               	btfsc	status,0,c
  9064   010762  EFB5  F083         	goto	u3251
  9065   010766  EFB7  F083         	goto	u3250
  9066   01076A                     u3251:
  9067   01076A  EFE2  F083         	goto	l3720
  9068   01076E                     u3250:
  9069   01076E  5002               	movf	___fladd@b^0,w,c
  9070   010770  5C06               	subwf	___fladd@a^0,w,c
  9071   010772  6E0A               	movwf	??___fladd^0,c
  9072   010774  5003               	movf	(___fladd@b+1)^0,w,c
  9073   010776  5807               	subwfb	(___fladd@a+1)^0,w,c
  9074   010778  6E0B               	movwf	(??___fladd+1)^0,c
  9075   01077A  5004               	movf	(___fladd@b+2)^0,w,c
  9076   01077C  5808               	subwfb	(___fladd@a+2)^0,w,c
  9077   01077E  6E0C               	movwf	(??___fladd+2)^0,c
  9078   010780  5005               	movf	(___fladd@b+3)^0,w,c
  9079   010782  5809               	subwfb	(___fladd@a+3)^0,w,c
  9080   010784  6E0D               	movwf	(??___fladd+3)^0,c
  9081   010786  0EFF               	movlw	255
  9082   010788  240A               	addwf	??___fladd^0,w,c
  9083   01078A  6E02               	movwf	___fladd@b^0,c
  9084   01078C  0EFF               	movlw	255
  9085   01078E  200B               	addwfc	(??___fladd+1)^0,w,c
  9086   010790  6E03               	movwf	(___fladd@b+1)^0,c
  9087   010792  0EFF               	movlw	255
  9088   010794  200C               	addwfc	(??___fladd+2)^0,w,c
  9089   010796  6E04               	movwf	(___fladd@b+2)^0,c
  9090   010798  0EFF               	movlw	255
  9091   01079A  200D               	addwfc	(??___fladd+3)^0,w,c
  9092   01079C  6E05               	movwf	(___fladd@b+3)^0,c
  9093   01079E  0E80               	movlw	128
  9094   0107A0  1A0E               	xorwf	___fladd@signs^0,f,c
  9095   0107A2  6C11               	negf	___fladd@grs^0,c
  9096   0107A4  5011               	movf	___fladd@grs^0,w,c
  9097   0107A6  A4D8               	btfss	status,2,c
  9098   0107A8  EFD8  F083         	goto	u3261
  9099   0107AC  EFDA  F083         	goto	u3260
  9100   0107B0                     u3261:
  9101   0107B0  EFEA  F083         	goto	l1056
  9102   0107B4                     u3260:
  9103   0107B4  0E01               	movlw	1
  9104   0107B6  2602               	addwf	___fladd@b^0,f,c
  9105   0107B8  0E00               	movlw	0
  9106   0107BA  2203               	addwfc	(___fladd@b+1)^0,f,c
  9107   0107BC  2204               	addwfc	(___fladd@b+2)^0,f,c
  9108   0107BE  2205               	addwfc	(___fladd@b+3)^0,f,c
  9109   0107C0  EFEA  F083         	goto	l1056
  9110   0107C4                     l3720:
  9111   0107C4  5006               	movf	___fladd@a^0,w,c
  9112   0107C6  5E02               	subwf	___fladd@b^0,f,c
  9113   0107C8  5007               	movf	(___fladd@a+1)^0,w,c
  9114   0107CA  5A03               	subwfb	(___fladd@b+1)^0,f,c
  9115   0107CC  5008               	movf	(___fladd@a+2)^0,w,c
  9116   0107CE  5A04               	subwfb	(___fladd@b+2)^0,f,c
  9117   0107D0  5009               	movf	(___fladd@a+3)^0,w,c
  9118   0107D2  5A05               	subwfb	(___fladd@b+3)^0,f,c
  9119   0107D4                     l1056:
  9120   0107D4  5002               	movf	___fladd@b^0,w,c
  9121   0107D6  1003               	iorwf	(___fladd@b+1)^0,w,c
  9122   0107D8  1004               	iorwf	(___fladd@b+2)^0,w,c
  9123   0107DA  1005               	iorwf	(___fladd@b+3)^0,w,c
  9124   0107DC  A4D8               	btfss	status,2,c
  9125   0107DE  EFF3  F083         	goto	u3271
  9126   0107E2  EFF5  F083         	goto	u3270
  9127   0107E6                     u3271:
  9128   0107E6  EF2A  F084         	goto	l3744
  9129   0107EA                     u3270:
  9130   0107EA  5011               	movf	___fladd@grs^0,w,c
  9131   0107EC  A4D8               	btfss	status,2,c
  9132   0107EE  EFFB  F083         	goto	u3281
  9133   0107F2  EFFD  F083         	goto	u3280
  9134   0107F6                     u3281:
  9135   0107F6  EF2A  F084         	goto	l3744
  9136   0107FA                     u3280:
  9137   0107FA  0E00               	movlw	0
  9138   0107FC  6E02               	movwf	?___fladd^0,c
  9139   0107FE  0E00               	movlw	0
  9140   010800  6E03               	movwf	(?___fladd+1)^0,c
  9141   010802  0E00               	movlw	0
  9142   010804  6E04               	movwf	(?___fladd+2)^0,c
  9143   010806  0E00               	movlw	0
  9144   010808  6E05               	movwf	(?___fladd+3)^0,c
  9145   01080A  EFC5  F084         	goto	l1048
  9146   01080E                     l3728:
  9147   01080E  90D8               	bcf	status,0,c
  9148   010810  3602               	rlcf	___fladd@b^0,f,c
  9149   010812  3603               	rlcf	(___fladd@b+1)^0,f,c
  9150   010814  3604               	rlcf	(___fladd@b+2)^0,f,c
  9151   010816  3605               	rlcf	(___fladd@b+3)^0,f,c
  9152   010818  AE11               	btfss	___fladd@grs^0,7,c
  9153   01081A  EF11  F084         	goto	u3291
  9154   01081E  EF13  F084         	goto	u3290
  9155   010822                     u3291:
  9156   010822  EF14  F084         	goto	l3734
  9157   010826                     u3290:
  9158   010826  8002               	bsf	___fladd@b^0,0,c
  9159   010828                     l3734:
  9160   010828  A011               	btfss	___fladd@grs^0,0,c
  9161   01082A  EF19  F084         	goto	u3301
  9162   01082E  EF1B  F084         	goto	u3300
  9163   010832                     u3301:
  9164   010832  EF1F  F084         	goto	l3738
  9165   010836                     u3300:
  9166   010836  80D8               	bsf	status,0,c
  9167   010838  3611               	rlcf	___fladd@grs^0,f,c
  9168   01083A  EF21  F084         	goto	l3740
  9169   01083E                     l3738:
  9170   01083E  90D8               	bcf	status,0,c
  9171   010840  3611               	rlcf	___fladd@grs^0,f,c
  9172   010842                     l3740:
  9173   010842  5010               	movf	___fladd@bexp^0,w,c
  9174   010844  B4D8               	btfsc	status,2,c
  9175   010846  EF27  F084         	goto	u3311
  9176   01084A  EF29  F084         	goto	u3310
  9177   01084E                     u3311:
  9178   01084E  EF2A  F084         	goto	l3744
  9179   010852                     u3310:
  9180   010852  0610               	decf	___fladd@bexp^0,f,c
  9181   010854                     l3744:
  9182   010854  AE04               	btfss	(___fladd@b+2)^0,7,c
  9183   010856  EF2F  F084         	goto	u3321
  9184   01085A  EF31  F084         	goto	u3320
  9185   01085E                     u3321:
  9186   01085E  EF07  F084         	goto	l3728
  9187   010862                     u3320:
  9188   010862                     l3746:
  9189   010862  0E00               	movlw	0
  9190   010864  6E0F               	movwf	___fladd@aexp^0,c
  9191   010866  AE11               	btfss	___fladd@grs^0,7,c
  9192   010868  EF38  F084         	goto	u3331
  9193   01086C  EF3A  F084         	goto	u3330
  9194   010870                     u3331:
  9195   010870  EF52  F084         	goto	l1065
  9196   010874                     u3330:
  9197   010874  C011  F00A         	movff	___fladd@grs,??___fladd
  9198   010878  0E7F               	movlw	127
  9199   01087A  160A               	andwf	??___fladd^0,f,c
  9200   01087C  B4D8               	btfsc	status,2,c
  9201   01087E  EF43  F084         	goto	u3341
  9202   010882  EF45  F084         	goto	u3340
  9203   010886                     u3341:
  9204   010886  EF49  F084         	goto	l1066
  9205   01088A                     u3340:
  9206   01088A                     l3752:
  9207   01088A  0E01               	movlw	1
  9208   01088C  6E0F               	movwf	___fladd@aexp^0,c
  9209   01088E  EF52  F084         	goto	l1065
  9210   010892                     l1066:
  9211   010892  A002               	btfss	___fladd@b^0,0,c
  9212   010894  EF4E  F084         	goto	u3351
  9213   010898  EF50  F084         	goto	u3350
  9214   01089C                     u3351:
  9215   01089C  EF52  F084         	goto	l1065
  9216   0108A0                     u3350:
  9217   0108A0  EF45  F084         	goto	l3752
  9218   0108A4                     l1065:
  9219   0108A4  500F               	movf	___fladd@aexp^0,w,c
  9220   0108A6  B4D8               	btfsc	status,2,c
  9221   0108A8  EF58  F084         	goto	u3361
  9222   0108AC  EF5A  F084         	goto	u3360
  9223   0108B0                     u3361:
  9224   0108B0  EF85  F084         	goto	l3764
  9225   0108B4                     u3360:
  9226   0108B4  0E01               	movlw	1
  9227   0108B6  2602               	addwf	___fladd@b^0,f,c
  9228   0108B8  0E00               	movlw	0
  9229   0108BA  2203               	addwfc	(___fladd@b+1)^0,f,c
  9230   0108BC  2204               	addwfc	(___fladd@b+2)^0,f,c
  9231   0108BE  2205               	addwfc	(___fladd@b+3)^0,f,c
  9232   0108C0  A005               	btfss	(___fladd@b+3)^0,0,c
  9233   0108C2  EF65  F084         	goto	u3371
  9234   0108C6  EF67  F084         	goto	u3370
  9235   0108CA                     u3371:
  9236   0108CA  EF85  F084         	goto	l3764
  9237   0108CE                     u3370:
  9238   0108CE  C002  F00A         	movff	___fladd@b,??___fladd
  9239   0108D2  C003  F00B         	movff	___fladd@b+1,??___fladd+1
  9240   0108D6  C004  F00C         	movff	___fladd@b+2,??___fladd+2
  9241   0108DA  C005  F00D         	movff	___fladd@b+3,??___fladd+3
  9242   0108DE  340D               	rlcf	(??___fladd+3)^0,w,c
  9243   0108E0  320D               	rrcf	(??___fladd+3)^0,f,c
  9244   0108E2  320C               	rrcf	(??___fladd+2)^0,f,c
  9245   0108E4  320B               	rrcf	(??___fladd+1)^0,f,c
  9246   0108E6  320A               	rrcf	??___fladd^0,f,c
  9247   0108E8  C00A  F002         	movff	??___fladd,___fladd@b
  9248   0108EC  C00B  F003         	movff	??___fladd+1,___fladd@b+1
  9249   0108F0  C00C  F004         	movff	??___fladd+2,___fladd@b+2
  9250   0108F4  C00D  F005         	movff	??___fladd+3,___fladd@b+3
  9251   0108F8  2810               	incf	___fladd@bexp^0,w,c
  9252   0108FA  B4D8               	btfsc	status,2,c
  9253   0108FC  EF82  F084         	goto	u3381
  9254   010900  EF84  F084         	goto	u3380
  9255   010904                     u3381:
  9256   010904  EF85  F084         	goto	l3764
  9257   010908                     u3380:
  9258   010908  2A10               	incf	___fladd@bexp^0,f,c
  9259   01090A                     l3764:
  9260   01090A  2810               	incf	___fladd@bexp^0,w,c
  9261   01090C  B4D8               	btfsc	status,2,c
  9262   01090E  EF8B  F084         	goto	u3391
  9263   010912  EF8D  F084         	goto	u3390
  9264   010916                     u3391:
  9265   010916  EF95  F084         	goto	l3768
  9266   01091A                     u3390:
  9267   01091A  5010               	movf	___fladd@bexp^0,w,c
  9268   01091C  A4D8               	btfss	status,2,c
  9269   01091E  EF93  F084         	goto	u3401
  9270   010922  EF95  F084         	goto	u3400
  9271   010926                     u3401:
  9272   010926  EFA7  F084         	goto	l3772
  9273   01092A                     u3400:
  9274   01092A                     l3768:
  9275   01092A  0E00               	movlw	0
  9276   01092C  6E02               	movwf	___fladd@b^0,c
  9277   01092E  0E00               	movlw	0
  9278   010930  6E03               	movwf	(___fladd@b+1)^0,c
  9279   010932  0E00               	movlw	0
  9280   010934  6E04               	movwf	(___fladd@b+2)^0,c
  9281   010936  0E00               	movlw	0
  9282   010938  6E05               	movwf	(___fladd@b+3)^0,c
  9283   01093A  5010               	movf	___fladd@bexp^0,w,c
  9284   01093C  A4D8               	btfss	status,2,c
  9285   01093E  EFA3  F084         	goto	u3411
  9286   010942  EFA5  F084         	goto	u3410
  9287   010946                     u3411:
  9288   010946  EFA7  F084         	goto	l3772
  9289   01094A                     u3410:
  9290   01094A  0E00               	movlw	0
  9291   01094C  6E0E               	movwf	___fladd@signs^0,c
  9292   01094E                     l3772:
  9293   01094E  A010               	btfss	___fladd@bexp^0,0,c
  9294   010950  EFAC  F084         	goto	u3421
  9295   010954  EFAE  F084         	goto	u3420
  9296   010958                     u3421:
  9297   010958  EFB1  F084         	goto	l3776
  9298   01095C                     u3420:
  9299   01095C  8E04               	bsf	(___fladd@b+2)^0,7,c
  9300   01095E  EFB2  F084         	goto	l3778
  9301   010962                     l3776:
  9302   010962  9E04               	bcf	(___fladd@b+2)^0,7,c
  9303   010964                     l3778:
  9304   010964  90D8               	bcf	status,0,c
  9305   010966  3010               	rrcf	___fladd@bexp^0,w,c
  9306   010968  6E05               	movwf	(___fladd@b+3)^0,c
  9307   01096A  AE0E               	btfss	___fladd@signs^0,7,c
  9308   01096C  EFBA  F084         	goto	u3431
  9309   010970  EFBC  F084         	goto	u3430
  9310   010974                     u3431:
  9311   010974  EFBD  F084         	goto	l3784
  9312   010978                     u3430:
  9313   010978  8E05               	bsf	(___fladd@b+3)^0,7,c
  9314   01097A                     l3784:
  9315   01097A  C002  F002         	movff	___fladd@b,?___fladd
  9316   01097E  C003  F003         	movff	___fladd@b+1,?___fladd+1
  9317   010982  C004  F004         	movff	___fladd@b+2,?___fladd+2
  9318   010986  C005  F005         	movff	___fladd@b+3,?___fladd+3
  9319   01098A                     l1048:
  9320   01098A  0012               	return		;funcret
  9321   01098C                     __end_of___fladd:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function ___flneg *****************
  9325 ;; Defined at:
  9326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  f1              4    1[COMRAM] unsigned char 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;		None
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  4    1[COMRAM] unsigned char 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2, status,0
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9344 ;;Total ram usage:        4 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; Hardware stack levels required when called: 2
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		_my_putfloat
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text34
  9355   0129A6                     __ptext34:
  9356                           	callstack 0
  9357   0129A6                     ___flneg:
  9358                           	callstack 26
  9359   0129A6  5002               	movf	___flneg@f1^0,w,c
  9360   0129A8  1003               	iorwf	(___flneg@f1+1)^0,w,c
  9361   0129AA  1004               	iorwf	(___flneg@f1+2)^0,w,c
  9362   0129AC  1005               	iorwf	(___flneg@f1+3)^0,w,c
  9363   0129AE  B4D8               	btfsc	status,2,c
  9364   0129B0  EFDC  F094         	goto	u3811
  9365   0129B4  EFDE  F094         	goto	u3810
  9366   0129B8                     u3811:
  9367   0129B8  EFE6  F094         	goto	l4168
  9368   0129BC                     u3810:
  9369   0129BC  0E00               	movlw	0
  9370   0129BE  1A02               	xorwf	___flneg@f1^0,f,c
  9371   0129C0  0E00               	movlw	0
  9372   0129C2  1A03               	xorwf	(___flneg@f1+1)^0,f,c
  9373   0129C4  0E00               	movlw	0
  9374   0129C6  1A04               	xorwf	(___flneg@f1+2)^0,f,c
  9375   0129C8  0E80               	movlw	128
  9376   0129CA  1A05               	xorwf	(___flneg@f1+3)^0,f,c
  9377   0129CC                     l4168:
  9378   0129CC  C002  F002         	movff	___flneg@f1,?___flneg
  9379   0129D0  C003  F003         	movff	___flneg@f1+1,?___flneg+1
  9380   0129D4  C004  F004         	movff	___flneg@f1+2,?___flneg+2
  9381   0129D8  C005  F005         	movff	___flneg@f1+3,?___flneg+3
  9382   0129DC  0012               	return		;funcret
  9383   0129DE                     __end_of___flneg:
  9384                           	callstack 0
  9385                           
  9386 ;; *************** function ___flmul *****************
  9387 ;; Defined at:
  9388 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;  b               4    1[COMRAM] unsigned char 
  9391 ;;  a               4    5[COMRAM] unsigned char 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;  prod            4   20[COMRAM] struct .
  9394 ;;  grs             4   14[COMRAM] unsigned long 
  9395 ;;  temp            2   24[COMRAM] struct .
  9396 ;;  bexp            1   19[COMRAM] unsigned char 
  9397 ;;  aexp            1   18[COMRAM] unsigned char 
  9398 ;;  sign            1   13[COMRAM] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  4    1[COMRAM] unsigned char 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0, prodl, prodh
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9410 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;Total ram usage:       25 bytes
  9413 ;; Hardware stack levels used: 1
  9414 ;; Hardware stack levels required when called: 2
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_my_putfloat
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text35
  9423   01098C                     __ptext35:
  9424                           	callstack 0
  9425   01098C                     ___flmul:
  9426                           	callstack 26
  9427   01098C  5005               	movf	(___flmul@b+3)^0,w,c
  9428   01098E  0B80               	andlw	128
  9429   010990  6E0E               	movwf	___flmul@sign^0,c
  9430   010992  5005               	movf	(___flmul@b+3)^0,w,c
  9431   010994  2405               	addwf	(___flmul@b+3)^0,w,c
  9432   010996  6E14               	movwf	___flmul@bexp^0,c
  9433   010998  AE04               	btfss	(___flmul@b+2)^0,7,c
  9434   01099A  EFD1  F084         	goto	u3621
  9435   01099E  EFD3  F084         	goto	u3620
  9436   0109A2                     u3621:
  9437   0109A2  EFD4  F084         	goto	l4034
  9438   0109A6                     u3620:
  9439   0109A6  8014               	bsf	___flmul@bexp^0,0,c
  9440   0109A8                     l4034:
  9441   0109A8  5014               	movf	___flmul@bexp^0,w,c
  9442   0109AA  B4D8               	btfsc	status,2,c
  9443   0109AC  EFDA  F084         	goto	u3631
  9444   0109B0  EFDC  F084         	goto	u3630
  9445   0109B4                     u3631:
  9446   0109B4  EFEF  F084         	goto	l4042
  9447   0109B8                     u3630:
  9448   0109B8  2814               	incf	___flmul@bexp^0,w,c
  9449   0109BA  A4D8               	btfss	status,2,c
  9450   0109BC  EFE2  F084         	goto	u3641
  9451   0109C0  EFE4  F084         	goto	u3640
  9452   0109C4                     u3641:
  9453   0109C4  EFEC  F084         	goto	l4040
  9454   0109C8                     u3640:
  9455   0109C8  0E00               	movlw	0
  9456   0109CA  6E02               	movwf	___flmul@b^0,c
  9457   0109CC  0E00               	movlw	0
  9458   0109CE  6E03               	movwf	(___flmul@b+1)^0,c
  9459   0109D0  0E00               	movlw	0
  9460   0109D2  6E04               	movwf	(___flmul@b+2)^0,c
  9461   0109D4  0E00               	movlw	0
  9462   0109D6  6E05               	movwf	(___flmul@b+3)^0,c
  9463   0109D8                     l4040:
  9464   0109D8  8E04               	bsf	(___flmul@b+2)^0,7,c
  9465   0109DA  EFF7  F084         	goto	l4044
  9466   0109DE                     l4042:
  9467   0109DE  0E00               	movlw	0
  9468   0109E0  6E02               	movwf	___flmul@b^0,c
  9469   0109E2  0E00               	movlw	0
  9470   0109E4  6E03               	movwf	(___flmul@b+1)^0,c
  9471   0109E6  0E00               	movlw	0
  9472   0109E8  6E04               	movwf	(___flmul@b+2)^0,c
  9473   0109EA  0E00               	movlw	0
  9474   0109EC  6E05               	movwf	(___flmul@b+3)^0,c
  9475   0109EE                     l4044:
  9476   0109EE  5009               	movf	(___flmul@a+3)^0,w,c
  9477   0109F0  0B80               	andlw	128
  9478   0109F2  1A0E               	xorwf	___flmul@sign^0,f,c
  9479   0109F4  5009               	movf	(___flmul@a+3)^0,w,c
  9480   0109F6  2409               	addwf	(___flmul@a+3)^0,w,c
  9481   0109F8  6E13               	movwf	___flmul@aexp^0,c
  9482   0109FA  AE08               	btfss	(___flmul@a+2)^0,7,c
  9483   0109FC  EF02  F085         	goto	u3651
  9484   010A00  EF04  F085         	goto	u3650
  9485   010A04                     u3651:
  9486   010A04  EF05  F085         	goto	l4052
  9487   010A08                     u3650:
  9488   010A08  8013               	bsf	___flmul@aexp^0,0,c
  9489   010A0A                     l4052:
  9490   010A0A  5013               	movf	___flmul@aexp^0,w,c
  9491   010A0C  B4D8               	btfsc	status,2,c
  9492   010A0E  EF0B  F085         	goto	u3661
  9493   010A12  EF0D  F085         	goto	u3660
  9494   010A16                     u3661:
  9495   010A16  EF20  F085         	goto	l4060
  9496   010A1A                     u3660:
  9497   010A1A  2813               	incf	___flmul@aexp^0,w,c
  9498   010A1C  A4D8               	btfss	status,2,c
  9499   010A1E  EF13  F085         	goto	u3671
  9500   010A22  EF15  F085         	goto	u3670
  9501   010A26                     u3671:
  9502   010A26  EF1D  F085         	goto	l4058
  9503   010A2A                     u3670:
  9504   010A2A  0E00               	movlw	0
  9505   010A2C  6E06               	movwf	___flmul@a^0,c
  9506   010A2E  0E00               	movlw	0
  9507   010A30  6E07               	movwf	(___flmul@a+1)^0,c
  9508   010A32  0E00               	movlw	0
  9509   010A34  6E08               	movwf	(___flmul@a+2)^0,c
  9510   010A36  0E00               	movlw	0
  9511   010A38  6E09               	movwf	(___flmul@a+3)^0,c
  9512   010A3A                     l4058:
  9513   010A3A  8E08               	bsf	(___flmul@a+2)^0,7,c
  9514   010A3C  EF28  F085         	goto	l1125
  9515   010A40                     l4060:
  9516   010A40  0E00               	movlw	0
  9517   010A42  6E06               	movwf	___flmul@a^0,c
  9518   010A44  0E00               	movlw	0
  9519   010A46  6E07               	movwf	(___flmul@a+1)^0,c
  9520   010A48  0E00               	movlw	0
  9521   010A4A  6E08               	movwf	(___flmul@a+2)^0,c
  9522   010A4C  0E00               	movlw	0
  9523   010A4E  6E09               	movwf	(___flmul@a+3)^0,c
  9524   010A50                     l1125:
  9525   010A50  5013               	movf	___flmul@aexp^0,w,c
  9526   010A52  B4D8               	btfsc	status,2,c
  9527   010A54  EF2E  F085         	goto	u3681
  9528   010A58  EF30  F085         	goto	u3680
  9529   010A5C                     u3681:
  9530   010A5C  EF38  F085         	goto	l4064
  9531   010A60                     u3680:
  9532   010A60  5014               	movf	___flmul@bexp^0,w,c
  9533   010A62  A4D8               	btfss	status,2,c
  9534   010A64  EF36  F085         	goto	u3691
  9535   010A68  EF38  F085         	goto	u3690
  9536   010A6C                     u3691:
  9537   010A6C  EF42  F085         	goto	l4068
  9538   010A70                     u3690:
  9539   010A70                     l4064:
  9540   010A70  0E00               	movlw	0
  9541   010A72  6E02               	movwf	?___flmul^0,c
  9542   010A74  0E00               	movlw	0
  9543   010A76  6E03               	movwf	(?___flmul+1)^0,c
  9544   010A78  0E00               	movlw	0
  9545   010A7A  6E04               	movwf	(?___flmul+2)^0,c
  9546   010A7C  0E00               	movlw	0
  9547   010A7E  6E05               	movwf	(?___flmul+3)^0,c
  9548   010A80  EFDA  F086         	goto	l1129
  9549   010A84                     l4068:
  9550   010A84  5008               	movf	(___flmul@a+2)^0,w,c
  9551   010A86  0202               	mulwf	___flmul@b^0,c
  9552   010A88  CFF3 F019          	movff	prodl,___flmul@temp
  9553   010A8C  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9554   010A90  5019               	movf	___flmul@temp^0,w,c
  9555   010A92  6E0F               	movwf	___flmul@grs^0,c
  9556   010A94  6A10               	clrf	(___flmul@grs+1)^0,c
  9557   010A96  6A11               	clrf	(___flmul@grs+2)^0,c
  9558   010A98  6A12               	clrf	(___flmul@grs+3)^0,c
  9559   010A9A  501A               	movf	(___flmul@temp+1)^0,w,c
  9560   010A9C  6E15               	movwf	___flmul@prod^0,c
  9561   010A9E  6A16               	clrf	(___flmul@prod+1)^0,c
  9562   010AA0  6A17               	clrf	(___flmul@prod+2)^0,c
  9563   010AA2  6A18               	clrf	(___flmul@prod+3)^0,c
  9564   010AA4  5007               	movf	(___flmul@a+1)^0,w,c
  9565   010AA6  0203               	mulwf	(___flmul@b+1)^0,c
  9566   010AA8  CFF3 F019          	movff	prodl,___flmul@temp
  9567   010AAC  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9568   010AB0  5019               	movf	___flmul@temp^0,w,c
  9569   010AB2  260F               	addwf	___flmul@grs^0,f,c
  9570   010AB4  0E00               	movlw	0
  9571   010AB6  2210               	addwfc	(___flmul@grs+1)^0,f,c
  9572   010AB8  2211               	addwfc	(___flmul@grs+2)^0,f,c
  9573   010ABA  2212               	addwfc	(___flmul@grs+3)^0,f,c
  9574   010ABC  501A               	movf	(___flmul@temp+1)^0,w,c
  9575   010ABE  2615               	addwf	___flmul@prod^0,f,c
  9576   010AC0  0E00               	movlw	0
  9577   010AC2  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9578   010AC4  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9579   010AC6  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9580   010AC8  5006               	movf	___flmul@a^0,w,c
  9581   010ACA  0204               	mulwf	(___flmul@b+2)^0,c
  9582   010ACC  CFF3 F019          	movff	prodl,___flmul@temp
  9583   010AD0  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9584   010AD4  5019               	movf	___flmul@temp^0,w,c
  9585   010AD6  260F               	addwf	___flmul@grs^0,f,c
  9586   010AD8  0E00               	movlw	0
  9587   010ADA  2210               	addwfc	(___flmul@grs+1)^0,f,c
  9588   010ADC  2211               	addwfc	(___flmul@grs+2)^0,f,c
  9589   010ADE  2212               	addwfc	(___flmul@grs+3)^0,f,c
  9590   010AE0  501A               	movf	(___flmul@temp+1)^0,w,c
  9591   010AE2  2615               	addwf	___flmul@prod^0,f,c
  9592   010AE4  0E00               	movlw	0
  9593   010AE6  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9594   010AE8  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9595   010AEA  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9596   010AEC  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  9597   010AF0  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  9598   010AF4  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  9599   010AF8  6A0F               	clrf	___flmul@grs^0,c
  9600   010AFA  5006               	movf	___flmul@a^0,w,c
  9601   010AFC  0203               	mulwf	(___flmul@b+1)^0,c
  9602   010AFE  CFF3 F019          	movff	prodl,___flmul@temp
  9603   010B02  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9604   010B06  5019               	movf	___flmul@temp^0,w,c
  9605   010B08  260F               	addwf	___flmul@grs^0,f,c
  9606   010B0A  501A               	movf	(___flmul@temp+1)^0,w,c
  9607   010B0C  2210               	addwfc	(___flmul@grs+1)^0,f,c
  9608   010B0E  0E00               	movlw	0
  9609   010B10  2211               	addwfc	(___flmul@grs+2)^0,f,c
  9610   010B12  0E00               	movlw	0
  9611   010B14  2212               	addwfc	(___flmul@grs+3)^0,f,c
  9612   010B16  5007               	movf	(___flmul@a+1)^0,w,c
  9613   010B18  0202               	mulwf	___flmul@b^0,c
  9614   010B1A  CFF3 F019          	movff	prodl,___flmul@temp
  9615   010B1E  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9616   010B22  5019               	movf	___flmul@temp^0,w,c
  9617   010B24  260F               	addwf	___flmul@grs^0,f,c
  9618   010B26  501A               	movf	(___flmul@temp+1)^0,w,c
  9619   010B28  2210               	addwfc	(___flmul@grs+1)^0,f,c
  9620   010B2A  0E00               	movlw	0
  9621   010B2C  2211               	addwfc	(___flmul@grs+2)^0,f,c
  9622   010B2E  0E00               	movlw	0
  9623   010B30  2212               	addwfc	(___flmul@grs+3)^0,f,c
  9624   010B32  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  9625   010B36  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  9626   010B3A  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  9627   010B3E  6A0F               	clrf	___flmul@grs^0,c
  9628   010B40  5006               	movf	___flmul@a^0,w,c
  9629   010B42  0202               	mulwf	___flmul@b^0,c
  9630   010B44  CFF3 F019          	movff	prodl,___flmul@temp
  9631   010B48  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9632   010B4C  5019               	movf	___flmul@temp^0,w,c
  9633   010B4E  260F               	addwf	___flmul@grs^0,f,c
  9634   010B50  501A               	movf	(___flmul@temp+1)^0,w,c
  9635   010B52  2210               	addwfc	(___flmul@grs+1)^0,f,c
  9636   010B54  0E00               	movlw	0
  9637   010B56  2211               	addwfc	(___flmul@grs+2)^0,f,c
  9638   010B58  0E00               	movlw	0
  9639   010B5A  2212               	addwfc	(___flmul@grs+3)^0,f,c
  9640   010B5C  5008               	movf	(___flmul@a+2)^0,w,c
  9641   010B5E  0203               	mulwf	(___flmul@b+1)^0,c
  9642   010B60  CFF3 F019          	movff	prodl,___flmul@temp
  9643   010B64  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9644   010B68  5019               	movf	___flmul@temp^0,w,c
  9645   010B6A  2615               	addwf	___flmul@prod^0,f,c
  9646   010B6C  501A               	movf	(___flmul@temp+1)^0,w,c
  9647   010B6E  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9648   010B70  0E00               	movlw	0
  9649   010B72  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9650   010B74  0E00               	movlw	0
  9651   010B76  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9652   010B78  5007               	movf	(___flmul@a+1)^0,w,c
  9653   010B7A  0204               	mulwf	(___flmul@b+2)^0,c
  9654   010B7C  CFF3 F019          	movff	prodl,___flmul@temp
  9655   010B80  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9656   010B84  5019               	movf	___flmul@temp^0,w,c
  9657   010B86  2615               	addwf	___flmul@prod^0,f,c
  9658   010B88  501A               	movf	(___flmul@temp+1)^0,w,c
  9659   010B8A  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9660   010B8C  0E00               	movlw	0
  9661   010B8E  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9662   010B90  0E00               	movlw	0
  9663   010B92  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9664   010B94  5008               	movf	(___flmul@a+2)^0,w,c
  9665   010B96  0204               	mulwf	(___flmul@b+2)^0,c
  9666   010B98  CFF3 F019          	movff	prodl,___flmul@temp
  9667   010B9C  CFF4 F01A          	movff	prodh,___flmul@temp+1
  9668   010BA0  5019               	movf	___flmul@temp^0,w,c
  9669   010BA2  6E0A               	movwf	??___flmul^0,c
  9670   010BA4  501A               	movf	(___flmul@temp+1)^0,w,c
  9671   010BA6  6E0B               	movwf	(??___flmul+1)^0,c
  9672   010BA8  6A0C               	clrf	(??___flmul+2)^0,c
  9673   010BAA  6A0D               	clrf	(??___flmul+3)^0,c
  9674   010BAC  C00C  F00D         	movff	??___flmul+2,??___flmul+3
  9675   010BB0  C00B  F00C         	movff	??___flmul+1,??___flmul+2
  9676   010BB4  C00A  F00B         	movff	??___flmul,??___flmul+1
  9677   010BB8  6A0A               	clrf	??___flmul^0,c
  9678   010BBA  500A               	movf	??___flmul^0,w,c
  9679   010BBC  2615               	addwf	___flmul@prod^0,f,c
  9680   010BBE  500B               	movf	(??___flmul+1)^0,w,c
  9681   010BC0  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9682   010BC2  500C               	movf	(??___flmul+2)^0,w,c
  9683   010BC4  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9684   010BC6  500D               	movf	(??___flmul+3)^0,w,c
  9685   010BC8  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9686   010BCA  C00F  F00A         	movff	___flmul@grs,??___flmul
  9687   010BCE  C010  F00B         	movff	___flmul@grs+1,??___flmul+1
  9688   010BD2  C011  F00C         	movff	___flmul@grs+2,??___flmul+2
  9689   010BD6  C012  F00D         	movff	___flmul@grs+3,??___flmul+3
  9690   010BDA  0E19               	movlw	25
  9691   010BDC  EFF5  F085         	goto	u3700
  9692   010BE0                     u3705:
  9693   010BE0  90D8               	bcf	status,0,c
  9694   010BE2  320D               	rrcf	(??___flmul+3)^0,f,c
  9695   010BE4  320C               	rrcf	(??___flmul+2)^0,f,c
  9696   010BE6  320B               	rrcf	(??___flmul+1)^0,f,c
  9697   010BE8  320A               	rrcf	??___flmul^0,f,c
  9698   010BEA                     u3700:
  9699   010BEA  2EE8               	decfsz	wreg,f,c
  9700   010BEC  EFF0  F085         	goto	u3705
  9701   010BF0  500A               	movf	??___flmul^0,w,c
  9702   010BF2  2615               	addwf	___flmul@prod^0,f,c
  9703   010BF4  500B               	movf	(??___flmul+1)^0,w,c
  9704   010BF6  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9705   010BF8  500C               	movf	(??___flmul+2)^0,w,c
  9706   010BFA  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9707   010BFC  500D               	movf	(??___flmul+3)^0,w,c
  9708   010BFE  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9709   010C00  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  9710   010C04  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  9711   010C08  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  9712   010C0C  6A0F               	clrf	___flmul@grs^0,c
  9713   010C0E  5013               	movf	___flmul@aexp^0,w,c
  9714   010C10  C014  F00A         	movff	___flmul@bexp,??___flmul
  9715   010C14  6A0B               	clrf	(??___flmul+1)^0,c
  9716   010C16  260A               	addwf	??___flmul^0,f,c
  9717   010C18  0E00               	movlw	0
  9718   010C1A  220B               	addwfc	(??___flmul+1)^0,f,c
  9719   010C1C  0E82               	movlw	130
  9720   010C1E  240A               	addwf	??___flmul^0,w,c
  9721   010C20  6E19               	movwf	___flmul@temp^0,c
  9722   010C22  0EFF               	movlw	255
  9723   010C24  200B               	addwfc	(??___flmul+1)^0,w,c
  9724   010C26  6E1A               	movwf	(___flmul@temp+1)^0,c
  9725   010C28  EF2B  F086         	goto	l4116
  9726   010C2C                     l4110:
  9727   010C2C  90D8               	bcf	status,0,c
  9728   010C2E  3615               	rlcf	___flmul@prod^0,f,c
  9729   010C30  3616               	rlcf	(___flmul@prod+1)^0,f,c
  9730   010C32  3617               	rlcf	(___flmul@prod+2)^0,f,c
  9731   010C34  3618               	rlcf	(___flmul@prod+3)^0,f,c
  9732   010C36  AE12               	btfss	(___flmul@grs+3)^0,7,c
  9733   010C38  EF20  F086         	goto	u3711
  9734   010C3C  EF22  F086         	goto	u3710
  9735   010C40                     u3711:
  9736   010C40  EF23  F086         	goto	l1132
  9737   010C44                     u3710:
  9738   010C44  8015               	bsf	___flmul@prod^0,0,c
  9739   010C46                     l1132:
  9740   010C46  90D8               	bcf	status,0,c
  9741   010C48  360F               	rlcf	___flmul@grs^0,f,c
  9742   010C4A  3610               	rlcf	(___flmul@grs+1)^0,f,c
  9743   010C4C  3611               	rlcf	(___flmul@grs+2)^0,f,c
  9744   010C4E  3612               	rlcf	(___flmul@grs+3)^0,f,c
  9745   010C50  0619               	decf	___flmul@temp^0,f,c
  9746   010C52  A0D8               	btfss	status,0,c
  9747   010C54  061A               	decf	(___flmul@temp+1)^0,f,c
  9748   010C56                     l4116:
  9749   010C56  AE17               	btfss	(___flmul@prod+2)^0,7,c
  9750   010C58  EF30  F086         	goto	u3721
  9751   010C5C  EF32  F086         	goto	u3720
  9752   010C60                     u3721:
  9753   010C60  EF16  F086         	goto	l4110
  9754   010C64                     u3720:
  9755   010C64  0E00               	movlw	0
  9756   010C66  6E13               	movwf	___flmul@aexp^0,c
  9757   010C68  AE12               	btfss	(___flmul@grs+3)^0,7,c
  9758   010C6A  EF39  F086         	goto	u3731
  9759   010C6E  EF3B  F086         	goto	u3730
  9760   010C72                     u3731:
  9761   010C72  EF5F  F086         	goto	l1134
  9762   010C76                     u3730:
  9763   010C76  0EFF               	movlw	255
  9764   010C78  140F               	andwf	___flmul@grs^0,w,c
  9765   010C7A  6E0A               	movwf	??___flmul^0,c
  9766   010C7C  0EFF               	movlw	255
  9767   010C7E  1410               	andwf	(___flmul@grs+1)^0,w,c
  9768   010C80  6E0B               	movwf	(??___flmul+1)^0,c
  9769   010C82  0EFF               	movlw	255
  9770   010C84  1411               	andwf	(___flmul@grs+2)^0,w,c
  9771   010C86  6E0C               	movwf	(??___flmul+2)^0,c
  9772   010C88  0E7F               	movlw	127
  9773   010C8A  1412               	andwf	(___flmul@grs+3)^0,w,c
  9774   010C8C  6E0D               	movwf	(??___flmul+3)^0,c
  9775   010C8E  500A               	movf	??___flmul^0,w,c
  9776   010C90  100B               	iorwf	(??___flmul+1)^0,w,c
  9777   010C92  100C               	iorwf	(??___flmul+2)^0,w,c
  9778   010C94  100D               	iorwf	(??___flmul+3)^0,w,c
  9779   010C96  B4D8               	btfsc	status,2,c
  9780   010C98  EF50  F086         	goto	u3741
  9781   010C9C  EF52  F086         	goto	u3740
  9782   010CA0                     u3741:
  9783   010CA0  EF56  F086         	goto	l1135
  9784   010CA4                     u3740:
  9785   010CA4                     l4124:
  9786   010CA4  0E01               	movlw	1
  9787   010CA6  6E13               	movwf	___flmul@aexp^0,c
  9788   010CA8  EF5F  F086         	goto	l1134
  9789   010CAC                     l1135:
  9790   010CAC  A015               	btfss	___flmul@prod^0,0,c
  9791   010CAE  EF5B  F086         	goto	u3751
  9792   010CB2  EF5D  F086         	goto	u3750
  9793   010CB6                     u3751:
  9794   010CB6  EF5F  F086         	goto	l1134
  9795   010CBA                     u3750:
  9796   010CBA  EF52  F086         	goto	l4124
  9797   010CBE                     l1134:
  9798   010CBE  5013               	movf	___flmul@aexp^0,w,c
  9799   010CC0  B4D8               	btfsc	status,2,c
  9800   010CC2  EF65  F086         	goto	u3761
  9801   010CC6  EF67  F086         	goto	u3760
  9802   010CCA                     u3761:
  9803   010CCA  EF8B  F086         	goto	l4136
  9804   010CCE                     u3760:
  9805   010CCE  0E01               	movlw	1
  9806   010CD0  2615               	addwf	___flmul@prod^0,f,c
  9807   010CD2  0E00               	movlw	0
  9808   010CD4  2216               	addwfc	(___flmul@prod+1)^0,f,c
  9809   010CD6  2217               	addwfc	(___flmul@prod+2)^0,f,c
  9810   010CD8  2218               	addwfc	(___flmul@prod+3)^0,f,c
  9811   010CDA  A018               	btfss	(___flmul@prod+3)^0,0,c
  9812   010CDC  EF72  F086         	goto	u3771
  9813   010CE0  EF74  F086         	goto	u3770
  9814   010CE4                     u3771:
  9815   010CE4  EF8B  F086         	goto	l4136
  9816   010CE8                     u3770:
  9817   010CE8  C015  F00A         	movff	___flmul@prod,??___flmul
  9818   010CEC  C016  F00B         	movff	___flmul@prod+1,??___flmul+1
  9819   010CF0  C017  F00C         	movff	___flmul@prod+2,??___flmul+2
  9820   010CF4  C018  F00D         	movff	___flmul@prod+3,??___flmul+3
  9821   010CF8  340D               	rlcf	(??___flmul+3)^0,w,c
  9822   010CFA  320D               	rrcf	(??___flmul+3)^0,f,c
  9823   010CFC  320C               	rrcf	(??___flmul+2)^0,f,c
  9824   010CFE  320B               	rrcf	(??___flmul+1)^0,f,c
  9825   010D00  320A               	rrcf	??___flmul^0,f,c
  9826   010D02  C00A  F015         	movff	??___flmul,___flmul@prod
  9827   010D06  C00B  F016         	movff	??___flmul+1,___flmul@prod+1
  9828   010D0A  C00C  F017         	movff	??___flmul+2,___flmul@prod+2
  9829   010D0E  C00D  F018         	movff	??___flmul+3,___flmul@prod+3
  9830   010D12  4A19               	infsnz	___flmul@temp^0,f,c
  9831   010D14  2A1A               	incf	(___flmul@temp+1)^0,f,c
  9832   010D16                     l4136:
  9833   010D16  BE1A               	btfsc	(___flmul@temp+1)^0,7,c
  9834   010D18  EF96  F086         	goto	u3781
  9835   010D1C  501A               	movf	(___flmul@temp+1)^0,w,c
  9836   010D1E  E108               	bnz	u3780
  9837   010D20  2819               	incf	___flmul@temp^0,w,c
  9838   010D22  A0D8               	btfss	status,0,c
  9839   010D24  EF96  F086         	goto	u3781
  9840   010D28  EF98  F086         	goto	u3780
  9841   010D2C                     u3781:
  9842   010D2C  EFA2  F086         	goto	l4140
  9843   010D30                     u3780:
  9844   010D30  0E00               	movlw	0
  9845   010D32  6E15               	movwf	___flmul@prod^0,c
  9846   010D34  0E00               	movlw	0
  9847   010D36  6E16               	movwf	(___flmul@prod+1)^0,c
  9848   010D38  0E80               	movlw	128
  9849   010D3A  6E17               	movwf	(___flmul@prod+2)^0,c
  9850   010D3C  0E7F               	movlw	127
  9851   010D3E  6E18               	movwf	(___flmul@prod+3)^0,c
  9852   010D40  EFD0  F086         	goto	l4152
  9853   010D44                     l4140:
  9854   010D44  BE1A               	btfsc	(___flmul@temp+1)^0,7,c
  9855   010D46  EFAF  F086         	goto	u3790
  9856   010D4A  501A               	movf	(___flmul@temp+1)^0,w,c
  9857   010D4C  E106               	bnz	u3791
  9858   010D4E  0419               	decf	___flmul@temp^0,w,c
  9859   010D50  B0D8               	btfsc	status,0,c
  9860   010D52  EFAD  F086         	goto	u3791
  9861   010D56  EFAF  F086         	goto	u3790
  9862   010D5A                     u3791:
  9863   010D5A  EFBB  F086         	goto	l1142
  9864   010D5E                     u3790:
  9865   010D5E  0E00               	movlw	0
  9866   010D60  6E15               	movwf	___flmul@prod^0,c
  9867   010D62  0E00               	movlw	0
  9868   010D64  6E16               	movwf	(___flmul@prod+1)^0,c
  9869   010D66  0E00               	movlw	0
  9870   010D68  6E17               	movwf	(___flmul@prod+2)^0,c
  9871   010D6A  0E00               	movlw	0
  9872   010D6C  6E18               	movwf	(___flmul@prod+3)^0,c
  9873   010D6E  0E00               	movlw	0
  9874   010D70  6E0E               	movwf	___flmul@sign^0,c
  9875   010D72  EFD0  F086         	goto	l4152
  9876   010D76                     l1142:
  9877   010D76  C019  F014         	movff	___flmul@temp,___flmul@bexp
  9878   010D7A  0EFF               	movlw	255
  9879   010D7C  1615               	andwf	___flmul@prod^0,f,c
  9880   010D7E  0EFF               	movlw	255
  9881   010D80  1616               	andwf	(___flmul@prod+1)^0,f,c
  9882   010D82  0E7F               	movlw	127
  9883   010D84  1617               	andwf	(___flmul@prod+2)^0,f,c
  9884   010D86  0E00               	movlw	0
  9885   010D88  1618               	andwf	(___flmul@prod+3)^0,f,c
  9886   010D8A  A014               	btfss	___flmul@bexp^0,0,c
  9887   010D8C  EFCA  F086         	goto	u3801
  9888   010D90  EFCC  F086         	goto	u3800
  9889   010D94                     u3801:
  9890   010D94  EFCD  F086         	goto	l4150
  9891   010D98                     u3800:
  9892   010D98  8E17               	bsf	(___flmul@prod+2)^0,7,c
  9893   010D9A                     l4150:
  9894   010D9A  90D8               	bcf	status,0,c
  9895   010D9C  3014               	rrcf	___flmul@bexp^0,w,c
  9896   010D9E  6E18               	movwf	(___flmul@prod+3)^0,c
  9897   010DA0                     l4152:
  9898   010DA0  500E               	movf	___flmul@sign^0,w,c
  9899   010DA2  1218               	iorwf	(___flmul@prod+3)^0,f,c
  9900   010DA4  C015  F002         	movff	___flmul@prod,?___flmul
  9901   010DA8  C016  F003         	movff	___flmul@prod+1,?___flmul+1
  9902   010DAC  C017  F004         	movff	___flmul@prod+2,?___flmul+2
  9903   010DB0  C018  F005         	movff	___flmul@prod+3,?___flmul+3
  9904   010DB4                     l1129:
  9905   010DB4  0012               	return		;funcret
  9906   010DB6                     __end_of___flmul:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _Wait *****************
  9910 ;; Defined at:
  9911 ;;		line 321 in file "main.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  num             2    1[COMRAM] unsigned short 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  i               2    4[COMRAM] int 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  1    wreg      void 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9928 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;Total ram usage:        5 bytes
  9930 ;; Hardware stack levels used: 1
  9931 ;; Hardware stack levels required when called: 2
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_main
  9936 ;;		_debug_main
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text36
  9941   0129DE                     __ptext36:
  9942                           	callstack 0
  9943   0129DE                     _Wait:
  9944                           	callstack 28
  9945   0129DE                     
  9946                           ;main.c: 321: void Wait(uint16_t num);main.c: 322: {;main.c: 323:      int i ;;main.c: 3
      +                          25:      for (i=0 ; i < num ; i++) {
  9947   0129DE  0E00               	movlw	0
  9948   0129E0  6E06               	movwf	(Wait@i+1)^0,c
  9949   0129E2  0E00               	movlw	0
  9950   0129E4  6E05               	movwf	Wait@i^0,c
  9951   0129E6  EFFF  F094         	goto	l364
  9952   0129EA                     l4812:
  9953                           
  9954                           ;main.c: 326:           _delay((unsigned long)((10)*(48000000/4000.0))) ;
  9955   0129EA  0E9C               	movlw	156
  9956   0129EC  6E04               	movwf	??_Wait^0,c
  9957   0129EE  0ED7               	movlw	215
  9958   0129F0                     u4917:
  9959   0129F0  2EE8               	decfsz	wreg,f,c
  9960   0129F2  D7FE               	bra	u4917
  9961   0129F4  2E04               	decfsz	??_Wait^0,f,c
  9962   0129F6  D7FC               	bra	u4917
  9963   0129F8  F000               	nop	
  9964   0129FA                     
  9965                           ;main.c: 327:      }
  9966   0129FA  4A05               	infsnz	Wait@i^0,f,c
  9967   0129FC  2A06               	incf	(Wait@i+1)^0,f,c
  9968   0129FE                     l364:
  9969   0129FE  5002               	movf	Wait@num^0,w,c
  9970   012A00  5C05               	subwf	Wait@i^0,w,c
  9971   012A02  5003               	movf	(Wait@num+1)^0,w,c
  9972   012A04  5806               	subwfb	(Wait@i+1)^0,w,c
  9973   012A06  A0D8               	btfss	status,0,c
  9974   012A08  EF08  F095         	goto	u4721
  9975   012A0C  EF0A  F095         	goto	u4720
  9976   012A10                     u4721:
  9977   012A10  EFF5  F094         	goto	l4812
  9978   012A14                     u4720:
  9979   012A14  0012               	return		;funcret
  9980   012A16                     __end_of_Wait:
  9981                           	callstack 0
  9982                           
  9983 ;; *************** function _low_isr *****************
  9984 ;; Defined at:
  9985 ;;		line 246 in file "system.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      void 
  9992 ;; Registers used:
  9993 ;;		None
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10003 ;;Total ram usage:        1 bytes
 10004 ;; Hardware stack levels used: 1
 10005 ;; Hardware stack levels required when called: 1
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		Interrupt level 1
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           	psect	intcodelo
 10014   000018                     __pintcodelo:
 10015                           	callstack 0
 10016   000018                     _low_isr:
 10017                           	callstack 20
 10018                           
 10019                           ;incstack = 0
 10020   000018  805D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 10021   00001A  CFE0 F001          	movff	bsr,??_low_isr
 10022   00001E  C001  FFE0         	movff	??_low_isr,bsr
 10023   000022  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10024   000024  0010               	retfie	
 10025   000026                     __end_of_low_isr:
 10026                           	callstack 0
 10027                           
 10028 ;; *************** function _high_isr *****************
 10029 ;; Defined at:
 10030 ;;		line 238 in file "system.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		None
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10048 ;;Total ram usage:        0 bytes
 10049 ;; Hardware stack levels used: 1
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		Interrupt level 2
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	intcode
 10058   000008                     __pintcode:
 10059                           	callstack 0
 10060   000008                     _high_isr:
 10061                           	callstack 20
 10062                           
 10063                           ;incstack = 0
 10064   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10065   00000A  EF7C  F095         	goto	int_func
 10066                           
 10067                           	psect	intcode_body
 10068   012AF8                     __pintcode_body:
 10069                           	callstack 20
 10070   012AF8                     int_func:
 10071                           	callstack 20
 10072   012AF8  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10073   012AFA  0011               	retfie		f
 10074   012AFC                     __end_of_high_isr:
 10075                           	callstack 0
 10076                           
 10077                           	psect	rparam
 10078   000000                     
 10079                           	psect	temp
 10080   00005D                     btemp:
 10081                           	callstack 0
 10082   00005D                     	ds	1
 10083   000000                     int$flags	set	btemp
 10084   000000                     wtemp8	set	btemp+1
 10085   000000                     ttemp5	set	btemp+1
 10086   000000                     ttemp6	set	btemp+4
 10087   000000                     ttemp7	set	btemp+8
 10088                           
 10089                           	psect	config
 10090                           
 10091                           ;Config register CONFIG1L @ 0x1FFF8
 10092                           ;	Watchdog Timer
 10093                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
 10094                           ;	PLL Prescaler Selection
 10095                           ;	PLLDIV = 4, Divide by 4 (16 MHz oscillator input)
 10096                           ;	PLL Enable Configuration Bit
 10097                           ;	CFGPLLEN = ON, PLL Enabled
 10098                           ;	Stack Overflow/Underflow Reset
 10099                           ;	STVREN = OFF, Disabled
 10100                           ;	Extended Instruction Set
 10101                           ;	XINST = OFF, Disabled
 10102   01FFF8                     	org	131064
 10103   01FFF8  88                 	db	136
 10104                           
 10105                           ;Config register CONFIG1H @ 0x1FFF9
 10106                           ;	CPU System Clock Postscaler
 10107                           ;	CPUDIV = OSC1, No CPU system clock divide
 10108                           ;	Code Protect
 10109                           ;	CP0 = OFF, Program memory is not code-protected
 10110   01FFF9                     	org	131065
 10111   01FFF9  F7                 	db	247
 10112                           
 10113                           ;Config register CONFIG2L @ 0x1FFFA
 10114                           ;	Oscillator
 10115                           ;	OSC = HSPLL, HS+PLL, USB-HS+PLL
 10116                           ;	T1OSC/SOSC Power Selection Bits
 10117                           ;	SOSCSEL = 0x3, unprogrammed default
 10118                           ;	EC Clock Out Enable Bit
 10119                           ;	CLKOEC = 0x1, unprogrammed default
 10120                           ;	Fail-Safe Clock Monitor
 10121                           ;	FCMEN = OFF, Disabled
 10122                           ;	Internal External Oscillator Switch Over Mode
 10123                           ;	IESO = OFF, Disabled
 10124   01FFFA                     	org	131066
 10125   01FFFA  3D                 	db	61
 10126                           
 10127                           ;Config register CONFIG2H @ 0x1FFFB
 10128                           ;	Watchdog Postscaler
 10129                           ;	WDTPS = 32768, 1:32768
 10130   01FFFB                     	org	131067
 10131   01FFFB  FF                 	db	255
 10132                           
 10133                           ;Config register CONFIG3L @ 0x1FFFC
 10134                           ;	DSWDT Clock Select
 10135                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
 10136                           ;	RTCC Clock Select
 10137                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
 10138                           ;	Deep Sleep BOR
 10139                           ;	DSBOREN = OFF, Disabled
 10140                           ;	Deep Sleep Watchdog Timer
 10141                           ;	DSWDTEN = OFF, Disabled
 10142                           ;	Deep Sleep Watchdog Postscaler
 10143                           ;	DSWDTPS = 8192, 1:8,192 (8.5 seconds)
 10144   01FFFC                     	org	131068
 10145   01FFFC  61                 	db	97
 10146                           
 10147                           ;Config register CONFIG3H @ 0x1FFFD
 10148                           ;	IOLOCK One-Way Set Enable bit
 10149                           ;	IOL1WAY = OFF, The IOLOCK bit (PPSCON<0>) can be set and cleared as needed
 10150                           ;	ADC 10 or 12 Bit Select
 10151                           ;	ADCSEL = 0x1, unprogrammed default
 10152                           ;	MSSP address masking
 10153                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
 10154   01FFFD                     	org	131069
 10155   01FFFD  FA                 	db	250
 10156                           
 10157                           ;Config register CONFIG4L @ 0x1FFFE
 10158                           ;	Write/Erase Protect Page Start/End Location
 10159                           ;	WPFP = PAGE_1, Write Protect Program Flash Page 1
 10160                           ;	Write/Erase Protect Configuration Region
 10161                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
 10162   01FFFE                     	org	131070
 10163   01FFFE  81                 	db	129
 10164                           
 10165                           ;Config register CONFIG4H @ 0x1FFFF
 10166                           ;	Write Protect Disable bit
 10167                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
 10168                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
 10169                           ;	WPEND = PAGE_0, Pages 0 through WPFP<6:0> erase/write protected
 10170                           ;	Low Speed USB mode with 48 MHz system clock bit
 10171                           ;	LS48MHZ = 0x1, unprogrammed default
 10172   01FFFF                     	org	131071
 10173   01FFFF  F9                 	db	249
 10174                           tosu	equ	0xFFF
 10175                           tosh	equ	0xFFE
 10176                           tosl	equ	0xFFD
 10177                           stkptr	equ	0xFFC
 10178                           pclatu	equ	0xFFB
 10179                           pclath	equ	0xFFA
 10180                           pcl	equ	0xFF9
 10181                           tblptru	equ	0xFF8
 10182                           tblptrh	equ	0xFF7
 10183                           tblptrl	equ	0xFF6
 10184                           tablat	equ	0xFF5
 10185                           prodh	equ	0xFF4
 10186                           prodl	equ	0xFF3
 10187                           indf0	equ	0xFEF
 10188                           postinc0	equ	0xFEE
 10189                           postdec0	equ	0xFED
 10190                           preinc0	equ	0xFEC
 10191                           plusw0	equ	0xFEB
 10192                           fsr0h	equ	0xFEA
 10193                           fsr0l	equ	0xFE9
 10194                           wreg	equ	0xFE8
 10195                           indf1	equ	0xFE7
 10196                           postinc1	equ	0xFE6
 10197                           postdec1	equ	0xFE5
 10198                           preinc1	equ	0xFE4
 10199                           plusw1	equ	0xFE3
 10200                           fsr1h	equ	0xFE2
 10201                           fsr1l	equ	0xFE1
 10202                           bsr	equ	0xFE0
 10203                           indf2	equ	0xFDF
 10204                           postinc2	equ	0xFDE
 10205                           postdec2	equ	0xFDD
 10206                           preinc2	equ	0xFDC
 10207                           plusw2	equ	0xFDB
 10208                           fsr2h	equ	0xFDA
 10209                           fsr2l	equ	0xFD9
 10210                           status	equ	0xFD8

Data Sizes:
    Strings     1216
    Constant    596
    Data        23
    BSS         732
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      92
    BANK0           160     28     134
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_69(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_69(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_66(CODE[16]), STR_59(CODE[26]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[26]), STR_54(CODE[26]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[26]), STR_49(CODE[52]), 
		 -> STR_48(CODE[52]), STR_47(CODE[52]), STR_46(CODE[20]), STR_45(CODE[20]), 
		 -> STR_44(CODE[20]), STR_43(CODE[20]), STR_42(CODE[29]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[20]), STR_38(CODE[30]), STR_37(CODE[20]), 
		 -> STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_32(CODE[24]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[22]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[23]), STR_22(CODE[3]), STR_21(CODE[22]), 
		 -> STR_20(CODE[12]), STR_19(CODE[14]), STR_18(CODE[15]), STR_17(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[22]), STR_10(CODE[5]), STR_9(CODE[10]), STR_8(CODE[15]), 
		 -> STR_7(CODE[22]), STR_6(CODE[6]), STR_5(CODE[32]), STR_4(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_66(CODE[16]), STR_59(CODE[26]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[26]), STR_54(CODE[26]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[26]), STR_49(CODE[52]), 
		 -> STR_48(CODE[52]), STR_47(CODE[52]), STR_46(CODE[20]), STR_45(CODE[20]), 
		 -> STR_44(CODE[20]), STR_43(CODE[20]), STR_42(CODE[29]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[20]), STR_38(CODE[30]), STR_37(CODE[20]), 
		 -> STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_32(CODE[24]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[22]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[23]), STR_22(CODE[3]), STR_21(CODE[22]), 
		 -> STR_20(CODE[12]), STR_19(CODE[14]), STR_18(CODE[15]), STR_17(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[22]), STR_10(CODE[5]), STR_9(CODE[10]), STR_8(CODE[15]), 
		 -> STR_7(CODE[22]), STR_6(CODE[6]), STR_5(CODE[32]), STR_4(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), ?_Xprintf(BANK0[1]), loginfo_buf(BANK1[64]), 
		 -> intbuf(BANK0[2]), log_dt.log_data(BIGRAM[580]), log_dt(BIGRAM[584]), Deb_menue02(CODE[30]), 
		 -> Deb_menue01(CODE[150]), Deb_menue00(CODE[270]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), ?_Xprintf(BANK0[1]), loginfo_buf(BANK1[64]), 
		 -> intbuf(BANK0[2]), log_dt.log_data(BIGRAM[580]), log_dt(BIGRAM[584]), Deb_menue02(CODE[30]), 
		 -> Deb_menue01(CODE[150]), Deb_menue00(CODE[270]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1444$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1444$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_66(CODE[16]), STR_59(CODE[26]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[26]), STR_54(CODE[26]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[26]), STR_49(CODE[52]), 
		 -> STR_48(CODE[52]), STR_47(CODE[52]), STR_46(CODE[20]), STR_45(CODE[20]), 
		 -> STR_44(CODE[20]), STR_43(CODE[20]), STR_42(CODE[29]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[20]), STR_38(CODE[30]), STR_37(CODE[20]), 
		 -> STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_32(CODE[24]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[22]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[23]), STR_22(CODE[3]), STR_21(CODE[22]), 
		 -> STR_20(CODE[12]), STR_19(CODE[14]), STR_18(CODE[15]), STR_17(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[22]), STR_10(CODE[5]), STR_9(CODE[10]), STR_8(CODE[15]), 
		 -> STR_7(CODE[22]), STR_6(CODE[6]), STR_5(CODE[32]), STR_4(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_66(CODE[16]), STR_59(CODE[26]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[26]), STR_54(CODE[26]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[26]), STR_49(CODE[52]), 
		 -> STR_48(CODE[52]), STR_47(CODE[52]), STR_46(CODE[20]), STR_45(CODE[20]), 
		 -> STR_44(CODE[20]), STR_43(CODE[20]), STR_42(CODE[29]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[20]), STR_38(CODE[30]), STR_37(CODE[20]), 
		 -> STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_32(CODE[24]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[22]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[23]), STR_22(CODE[3]), STR_21(CODE[22]), 
		 -> STR_20(CODE[12]), STR_19(CODE[14]), STR_18(CODE[15]), STR_17(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[22]), STR_10(CODE[5]), STR_9(CODE[10]), STR_8(CODE[15]), 
		 -> STR_7(CODE[22]), STR_6(CODE[6]), STR_5(CODE[32]), STR_4(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_66(CODE[16]), STR_59(CODE[26]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[26]), STR_54(CODE[26]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[26]), STR_49(CODE[52]), 
		 -> STR_48(CODE[52]), STR_47(CODE[52]), STR_46(CODE[20]), STR_45(CODE[20]), 
		 -> STR_44(CODE[20]), STR_43(CODE[20]), STR_42(CODE[29]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[20]), STR_38(CODE[30]), STR_37(CODE[20]), 
		 -> STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_32(CODE[24]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[22]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[23]), STR_22(CODE[3]), STR_21(CODE[22]), 
		 -> STR_20(CODE[12]), STR_19(CODE[14]), STR_18(CODE[15]), STR_17(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[22]), STR_10(CODE[5]), STR_9(CODE[10]), STR_8(CODE[15]), 
		 -> STR_7(CODE[22]), STR_6(CODE[6]), STR_5(CODE[32]), STR_4(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1490$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_Xprintf(BANK0[1]), loginfo_buf(BANK1[64]), intbuf(BANK0[2]), 
		 -> log_dt.log_data(BIGRAM[580]), log_dt(BIGRAM[584]), Deb_menue02(CODE[30]), Deb_menue01(CODE[150]), 
		 -> Deb_menue00(CODE[270]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), ?_Xprintf(BANK0[1]), loginfo_buf(BANK1[64]), 
		 -> intbuf(BANK0[2]), log_dt.log_data(BIGRAM[580]), log_dt(BIGRAM[584]), Deb_menue02(CODE[30]), 
		 -> Deb_menue01(CODE[150]), Deb_menue00(CODE[270]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_66(CODE[16]), STR_59(CODE[26]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[26]), STR_54(CODE[26]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[26]), STR_49(CODE[52]), 
		 -> STR_48(CODE[52]), STR_47(CODE[52]), STR_46(CODE[20]), STR_45(CODE[20]), 
		 -> STR_44(CODE[20]), STR_43(CODE[20]), STR_42(CODE[29]), STR_41(CODE[21]), 
		 -> STR_40(CODE[20]), STR_39(CODE[20]), STR_38(CODE[30]), STR_37(CODE[20]), 
		 -> STR_36(CODE[19]), STR_35(CODE[19]), STR_34(CODE[19]), STR_33(CODE[19]), 
		 -> STR_32(CODE[24]), STR_31(CODE[22]), STR_30(CODE[21]), STR_29(CODE[21]), 
		 -> STR_28(CODE[21]), STR_27(CODE[22]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[23]), STR_22(CODE[3]), STR_21(CODE[22]), 
		 -> STR_20(CODE[12]), STR_19(CODE[14]), STR_18(CODE[15]), STR_17(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[22]), STR_10(CODE[5]), STR_9(CODE[10]), STR_8(CODE[15]), 
		 -> STR_7(CODE[22]), STR_6(CODE[6]), STR_5(CODE[32]), STR_4(CODE[14]), 
		 -> STR_3(CODE[16]), STR_2(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    Xprintf@charvalue	PTR unsigned char  size(2) Largest target is 584
		 -> ?_printf(COMRAM[2]), ?_Xprintf(BANK0[1]), loginfo_buf(BANK1[64]), intbuf(BANK0[2]), 
		 -> log_dt(BIGRAM[584]), Deb_menue02(CODE[30]), Deb_menue01(CODE[150]), Deb_menue00(CODE[270]), 

    Xprintf@string	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_63(CODE[14]), STR_62(CODE[14]), 

    Xprintf@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    Xprintf@ap	PTR void [1] size(2) Largest target is 1
		 -> ?_Xprintf(BANK0[1]), 

    sp__my_putshex32	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_putshex32@buf	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    sp__my_putshex	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_putshex@buf	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    sp__my_puts	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_puts@str	PTR unsigned char  size(2) Largest target is 3759
		 -> ?_printf(COMRAM[2]), RAM(DATA[3759]), ?_Xprintf(BANK0[1]), loginfo_buf(BANK1[64]), 
		 -> intbuf(BANK0[2]), log_dt(BIGRAM[584]), Deb_menue02(CODE[30]), Deb_menue01(CODE[150]), 
		 -> Deb_menue00(CODE[270]), 

    my_puts@buf	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_puts@buf2	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    sp__my_putchar	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_putchar@buf	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    sp__my_putfloat	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_putfloat@buf	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    sp__my_putint	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    my_putint@buf	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), 

    putstring@c	PTR unsigned char  size(2) Largest target is 64
		 -> loginfo_buf(BANK1[64]), STR_61(CODE[15]), STR_60(CODE[15]), 

    Set_UasrtBauRaite@dt	PTR struct . size(2) Largest target is 3
		 -> uart_init@dt(COMRAM[3]), 

    S68$pt	PTR struct . size(2) Largest target is 270
		 -> Deb_menue02(CODE[30]), Deb_menue01(CODE[150]), Deb_menue00(CODE[270]), 

    MenueList.pt	PTR struct . size(2) Largest target is 270
		 -> Deb_menue02(CODE[30]), Deb_menue01(CODE[150]), Deb_menue00(CODE[270]), 


Critical Paths under _main in COMRAM

    _uart_init->_Set_UasrtBauRaite
    _Xprintf->_printf
    _putstring->_putch
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___almod
    _my_puts->_my_putchar
    _my_putfloat->___flmul
    _my_putint->___awdiv
    ___flsub->___fladd

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Xprintf

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   46384
                                             26 BANK0      2     2      0
                               _Wait
                            _Xprintf
                              _getch
                          _putstring
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            3     3      0     261
                                              3 COMRAM     3     3      0
                  _Set_UasrtBauRaite
 ---------------------------------------------------------------------------------
 (2) _Set_UasrtBauRaite                                    4     2      2     165
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getch                                                2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Xprintf                                             26    20      6   45551
                                              0 BANK0     26    20      6
                         _my_putchar
                        _my_putfloat
                          _my_putint
                            _my_puts
                         _my_putshex
                       _my_putshex32
                             _printf
                          _putstring
 ---------------------------------------------------------------------------------
 (1) _putstring                                            6     4      2     340
                                              2 COMRAM     6     4      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _printf                                              16     4     12   23223
                                             77 COMRAM    14     2     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   18751
                                             69 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6   18385
                                             48 COMRAM    21    15      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                19    13      6    3895
                                             29 COMRAM    19    13      6
                                _pad
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1911
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   9     5      4    4839
                                              7 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                15     9      6    5028
                                             29 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3379
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1561
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1160
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             11 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     448
                                              1 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     452
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _my_putshex32                                        17    11      6     422
                                              1 COMRAM    17    11      6
 ---------------------------------------------------------------------------------
 (2) _my_putshex                                           9     4      5     858
                                              1 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (2) _my_puts                                              6     2      4     810
                                              4 COMRAM     4     0      4
                         _my_putchar
 ---------------------------------------------------------------------------------
 (3) _my_putchar                                           3     1      2     219
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _my_putfloat                                         27    19      8   12285
                                             26 COMRAM    19    11      8
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _my_putint
 ---------------------------------------------------------------------------------
 (2) _my_putint                                            8     4      4    6193
                                              9 COMRAM     8     4      4
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4507
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             17 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Wait                                                 5     3      2     198
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _low_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _high_isr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Wait
   _Xprintf
     _my_putchar
     _my_putfloat
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _my_putint
         ___awdiv
         ___wmul
     _my_putint
     _my_puts
       _my_putchar
     _my_putshex
     _my_putshex32
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aldiv
             ___almod
             _abs
               ___almod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
             _strlen
           _strncmp
           _xtoa
             _pad
     _putstring
       _putch
   _getch
   _putstring
   _uart_init
     _Set_UasrtBauRaite

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     248      54       15.5%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      40       7       25.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      33        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5C       1       97.9%
BITBIGSFRllllhh     41      0       0      49        0.0%
BITBIGSFRlllhh      27      0       0      47        0.0%
BITBIGSFRllllhl     1F      0       0      50        0.0%
BITBIGSFRhhhl       1C      0       0      35        0.0%
BITBIGSFRllllhl     17      0       0      51        0.0%
BITBIGSFRhlh        14      0       0      38        0.0%
BITBIGSFRlllll       F      0       0      52        0.0%
BITBIGSFRlllhl       E      0       0      48        0.0%
BITBIGSFRhhhh        D      0       0      34        0.0%
BITBIGSFRllhlll      7      0       0      46        0.0%
BITBIGSFRhhll        7      0       0      37        0.0%
BITBIGSFRllhlh       3      0       0      45        0.0%
BITBIGSFRlhll        3      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      36        0.0%
BITBIGSFRhll         2      0       0      39        0.0%
BITBIGSFRlhhlh       1      0       0      41        0.0%
BITBIGSFRlhhhhh      1      0       0      40        0.0%
BITBIGSFRllhh        1      0       0      44        0.0%
BITBIGSFRlhhll       1      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     122      53        0.0%
DATA                 0      0     36A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Sep 11 15:04:41 2023

            my_putshex32@dt 0002              my_putshex32@sw 0011                my_putshex@dt 0002  
              my_putshex@sw 000A             my_putshex32@buf 0006               my_putshex@flg 0004  
             my_putshex@buf 0005                ___awdiv@sign 0007                          bsr 0FE0  
       ___wmul@multiplicand 0004                         l421 2AE4                         l430 2788  
                       l511 2A8A                         l424 2AF6                         l433 2AA6  
                       l434 2AAC                         l418 2A3E                         l603 237C  
                       l364 29FE                         l444 1CB4                         l508 13AE  
                       l454 1764                         l438 2838                         l367 2A14  
                       l447 1D62                         l463 2706                         l457 2AC8  
                       l482 110C                         l492 1E8C                         l742 25D8  
                       l590 1F98                         l808 209E                         l785 29DC  
                       _abs 2966                         _pad 25DA                         wreg 0FE8  
                _TXSTA2bits 0FA8                ___flmul@aexp 0013                ___flmul@bexp 0014  
              ___flmul@sign 000E                ___flmul@temp 0019                ___flmul@prod 0015  
              ___fltol@exp1 000B                        l1040 06A8                        l1041 066E  
                      ?_abs 000C                        l1132 0C46                        l1125 0A50  
                      l1142 0D76                        l1134 0CBE                        l1222 261E  
                      l1135 0CAC                        l1039 06BA                        l1056 07D4  
                      l1048 098A                        l1129 0DB4                        l1065 08A4  
                      l1081 2920                        l1225 2660                        l1233 1410  
                      l1066 0892                        l1227 2682                        l1235 1418  
                      l1180 18B0                        l1236 145E                        l1173 1854  
                      l1325 04CA                        l1166 17BC                        l4000 1CDA  
                      l1352 299C                        l1272 1AAA                        l1256 199A  
                      l1169 1918                        l1249 15AE                        l4010 1D32  
                      l4002 1CF6                        l1258 19A2                        l1355 29A4  
                      l1267 1A62                        l1291 1C1A                        l1195 2A64  
                      l4100 0B84                        l4012 1D3A                        l4004 1D04  
                      l4020 2AB0                        l3300 1EA0                        l1348 288A  
                      l1277 1AD8                        l4110 0C2C                        l4102 0BA0  
                      l4030 0998                        l4006 1D08                        l4022 2ABC  
                      l3310 1ED6                        l3302 1EB0                        l1367 2514  
                      l1375 2964                        l1295 2442                        l1279 1AE0  
                      l4120 0C68                        l4112 0C36                        l4104 0BCA  
                      l4040 09D8                        l4032 09A6                        l4008 1D12  
                      l4016 1D5A                        l4024 2AC0                        l3320 1F1E  
                      l3312 1EE6                        l3304 1EB4                        l3400 2898  
                      l1393 2290                        l4130 0CDA                        l4122 0C76  
                      l4114 0C44                        l4106 0C00                        l4050 0A08  
                      l4042 09DE                        l4034 09A8                        l4210 207E  
                      l3330 1F62                        l3322 1F28                        l3314 1EFC  
                      l3306 1EC2                        l3410 13C4                        l3402 289C  
                      l1299 244A                        l4140 0D44                        l4132 0CE8  
                      l4124 0CA4                        l4116 0C56                        l4108 0C0E  
                      l4060 0A40                        l4052 0A0A                        l4044 09EE  
                      l4036 09B8                        l4028 098C                        l4212 208E  
                      l4204 2052                        l4220 1786                        l3324 1F46  
                      l3316 1F04                        l3332 1F68                        l3308 1ED2  
                      l3340 2292                        l3420 1404                        l3412 13D4  
                      l3404 28CE                        l1389 28DA                        l4150 0D9A  
                      l4142 0D5E                        l4134 0D12                        l4118 0C64  
                      l4070 0A90                        l4062 0A60                        l4054 0A1A  
                      l4046 09F4                        l4038 09C8                        l4206 205E  
                      l4230 17FE                        l4222 17CC                        l3334 1F78  
                      l3326 1F56                        l3318 1F10                        l3350 22C6  
                      l3342 2296                        l3270 245E                        l3430 1452  
                      l3422 1420                        l3414 13E4                        l3502 1A74  
                      l3510 1ABC                        l4144 0D7A                        l4152 0DA0  
                      l4128 0CCE                        l4136 0D16                        l4080 0AE0  
                      l4072 0A9A                        l4064 0A70                        l4056 0A2A  
                      l4048 09FA                        l3600 051A                        l4160 28EC  
                      l4208 206E                        l4240 1886                        l4232 180A  
                      l4224 17E2                        l4216 1768                        l3336 1F88  
                      l3328 1F58                        l3360 230E                        l3352 22D6  
                      l3344 22A4                        l3264 2AE4                        l3272 2470  
                      l3440 14B6                        l3432 145A                        l3424 1430  
                      l3416 13F4                        l3408 13B0                        l3504 1A88  
                      l3520 1AF8                        l3512 1ABE                        l4400 2746  
                      l4154 0DA4                        l4146 0D8A                        l4138 0D30  
                      l4090 0B22                        l4082 0AEC                        l4074 0AB0  
                      l4058 0A3A                        l3610 054C                        l3602 0522  
                      l4250 18C4                        l4242 1892                        l4234 183C  
                      l4218 1778                        l3290 2A66                        l3370 235C  
                      l3362 232C                        l3354 22EC                        l3346 22B4  
                      l3266 2AF2                        l3274 247A                        l3282 2922  
                      l3450 1526                        l3442 14BC                        l3434 1466  
                      l3426 1436                        l3418 13F6                        l3506 1A8C  
                      l3530 1B30                        l3522 1AFE                        l3514 1ACC  
                      l4402 274A                        l4410 2A2E                        l4148 0D98  
                      l4092 0B32                        l4084 0AFA                        l4076 0ABC  
                      l4068 0A84                        l4164 29A6                        l3700 0724  
                      l3620 0582                        l3612 0552                        l3604 0532  
                      l4180 1FEE                        l4172 1F9A                        l4252 18E8  
                      l4244 18A0                        l4236 183E                        l4228 17F6  
                      l3292 2A82                        l4420 15F8                        l4412 15B0  
                      l4500 1014                        l3372 236C                        l3364 233C  
                      l3356 22F4                        l3348 22B8                        l3276 2498  
                      l3268 244C                        l3284 292E                        l3380 25FC  
                      l3460 157E                        l3452 1540                        l3444 14C2  
                      l3436 146E                        l3428 1446                        l3532 1B34  
                      l3524 1B04                        l3540 1B86                        l3516 1AE8  
                      l3508 1AAC                        l4404 2A16                        l4094 0B4C  
                      l4086 0B06                        l4078 0AD4                        l4166 29BC  
                      l3702 0728                        l3710 0748                        l3630 05BE  
                      l3622 0592                        l3614 0560                        l3606 0538  
                      l4158 28DC                        l4182 1FF0                        l4174 1FB0  
                      l4254 18F8                        l4246 18BE                        l4238 184A  
                      l4430 16B6                        l4422 1644                        l4414 15CC  
                      l4510 109E                        l4502 1018                        l3366 2346  
                      l3358 2300                        l3278 24CE                        l3286 2940  
                      l3390 2642                        l3382 260A                        l3462 158E  
                      l3454 155A                        l3438 1474                        l3446 14F6  
                      l3470 1934                        l3542 1BA2                        l3550 1BFA  
                      l3534 1B44                        l3526 1B14                        l3518 1AF0  
                      l4262 283A                        l5310 1144                        l4406 2A20  
                      l4096 0B5C                        l4088 0B16                        l4168 29CC  
                      l3712 076E                        l3720 07C4                        l3704 0736  
                      l3640 05DC                        l3632 05CC                        l3624 0594  
                      l3616 0562                        l3608 054A                        l4184 2000  
                      l4256 1906                        l4248 18C0                        l3800 254A  
                      l4432 16D2                        l4440 1734                        l4424 1652  
                      l4416 15E8                        l4512 10A2                        l4504 101C  
                      l4520 10D2                        l3296 1E8E                        l3368 234C  
                      l3288 2944                        l3392 266E                        l3384 2616  
                      l3376 25DA                        l3448 1510                        l3456 1568  
                      l3560 23E8                        l3480 1978                        l3472 1946  
                      l3544 1BB8                        l3536 1B4A                        l3528 1B24  
                      l4264 2846                        l4272 2A40                        l5320 119C  
                      l5312 114C                        l4408 2A2E                        l5400 2142  
                      l4098 0B78                        l3730 0818                        l3722 07EA  
                      l3714 07A2                        l3706 0738                        l3650 05F0  
                      l3642 05E0                        l3634 05D0                        l3618 0572  
                      l3626 059C                        l4194 202A                        l4186 2004  
                      l4178 1FC4                        l4258 1908                        l3810 2578  
                      l3802 254E                        l4442 1752                        l4434 16E0  
                      l4426 1676                        l4418 15F4                        l4450 2688  
                      l4514 10A2                        l4506 102C                        l4522 1104  
                      l4530 1D64                        l3298 1E92                        l3394 2966  
                      l3386 262A                        l3378 25E8                        l3458 1578  
                      l3562 2408                        l3554 237E                        l3490 19FA  
                      l3474 194E                        l3466 191A                        l3546 1BD2  
                      l3538 1B50                        l4266 2862                        l4274 2A48  
                      l5330 120C                        l5322 11A4                        l5314 115C  
                      l5306 110E                        l5402 2160                        l3740 0842  
                      l3732 0826                        l3724 07FA                        l3716 07A4  
                      l3708 0742                        l3660 0604                        l3652 05F4  
                      l3644 05E4                        l3636 05D4                        l3628 05AC  
                      l4196 2034                        l4188 2012                        l3820 25AC  
                      l3812 2586                        l3804 2556                        l4444 175C  
                      l4436 16E4                        l4428 1682                        l4452 26BE  
                      l4508 105E                        l4540 1E2E                        l3396 2980  
                      l3388 263E                        l3564 2416                        l3556 2386  
                      l3492 1A06                        l3484 19C4                        l3476 1962  
                      l3468 192C                        l3580 2232                        l3572 21D2  
                      l3548 1BEC                        l3900 0310                        l4268 2882  
                      l5340 1268                        l5332 121C                        l5324 11D4  
                      l5316 1164                        l5308 1124                        l5404 2176  
                      l3750 0874                        l3742 0852                        l3734 0828  
                      l3718 07B4                        l3670 0656                        l3662 0608  
                      l3654 05F8                        l3646 05E8                        l3638 05D8  
                      l3590 04E6                        l4198 203E                        l3822 25B2  
                      l3814 258C                        l3806 2568                        l4438 1730  
                      l4454 26C2                        l4470 0E38                        l4462 0DB6  
                      l4550 1E76                        l4542 1E32                        l4534 1D6C  
                      l3558 23AE                        l3398 288C                        l3494 1A3C  
                      l3486 19D8                        l3478 196A                        l3582 2264  
                      l3574 21E0                        l3566 219C                        l3910 037A  
                      l3902 033A                        l5342 1284                        l5334 1224  
                      l5326 11E4                        l5318 1184                        l5350 134E  
                      ?_pad 0013                        l3760 08CE                        l3752 088A  
                      l3736 0836                        l3728 080E                        l3744 0854  
                      l3680 069A                        l3672 0666                        l3656 05FC  
                      l3648 05EC                        l3664 060C                        l3592 04E8  
                      l3816 25A2                        l3808 2570                        l3824 25B8  
                      l4456 26F4                        l4448 2684                        l4480 0EF4  
                      l4472 0E78                        l4464 0DBA                        l4552 1E7A  
                      l4544 1E36                        l4536 1D7C                        l3496 1A40  
                      l3488 19DC                        l3576 2200                        l3568 21C6  
                      l3920 043C                        l3904 035A                        l3912 03AA  
                      l3840 0048                        l3832 0000                        l5344 12AC  
                      l5336 1248                        l5328 11EC                        l5352 1372  
                      l4800 2A9A                        l4810 29DE                        l3770 094A  
                      l3762 0908                        l3738 083E                        l3746 0862  
                      l3682 069C                        l3674 067C                        l3666 0610  
                      l3658 0600                        l3594 04F8                        l3586 04CC  
                      l3826 25C8                        l3818 25AA                        l4458 26FE  
                      l4490 0F9E                        l4482 0F28                        l4474 0EA8  
                      l4466 0DFA                        l4554 1E84                        l4546 1E3A  
                      l4538 1DD8                        l3498 1A44                        l3578 2220  
                      l3922 0444                        l3914 03D2                        l3850 0074  
                      l3842 0054                        l3834 0028                        l5338 1260  
                      l5354 1378                        l5370 20D4                        l4812 29EA  
                      l3780 096A                        l3772 094E                        l3756 08B4  
                      l3764 090A                        l3748 0866                        l3692 06EC  
                      l3684 06A6                        l3676 0688                        l3668 063A  
                      l3596 0508                        l3588 04D8                        l3828 25D0  
                      l4492 0FA2                        l4484 0F2C                        l4476 0EB0  
                      l4468 0DFE                        l4548 1E4A                        l3924 0454  
                      l3916 0408                        l3860 00F4                        l3844 0056  
                      l3852 00AC                        l3836 0036                        l3932 049E  
                      l4396 2708                        l5356 1398                        l5348 12FE  
                      l4820 27FE                        l5380 20DE                        l5372 20D6  
                      l4814 29FA                        l3782 0978                        l3774 095C  
                      l3766 091A                        l3758 08C0                        l3694 06FC  
                      l3686 06C8                        l3678 068C                        l3598 0518  
                      l3790 251A                        l4494 0FA6                        l4486 0F2C  
                      l4478 0EF0                        l3918 0430                        l3862 0104  
                      l3854 00BE                        l3846 0068                        l3838 0044  
                      l4398 2714                        l5358 13A2                        l4830 2810  
                      l4822 2800                        l5390 20F4                        l5382 20E0  
                      l5374 20D8                        l5366 20A0                        l3784 097A  
                      l3776 0962                        l3768 092A                        l3696 070A  
                      l3688 06D8                        l3792 2528                        l4496 0FB6  
                      l4488 0F5E                        l3928 048C                        l3880 01E6  
                      l3864 011A                        l3872 0132                        l3856 00DA  
                      l4840 282A                        l4832 2812                        l4824 2802  
                      l4816 27E2                        l5392 2100                        l5384 20E2  
                      l5376 20DA                        l5368 20A8                        l3778 0964  
                      l3698 0718                        l3794 2530                        l4498 0FDE  
                      l3866 0122                        l3874 016C                        l3858 00EA  
                      l4842 282E                        l4834 2818                        l4826 2808  
                      l4818 27EA                        l5394 210C                        l5386 20E4  
                      l5378 20DC                        l3796 2534                        l3788 2516  
                      l3980 1C2A                        l3892 0280                        l3876 018C  
                      l3884 021A                        l5660 0146                        l3868 012A  
                      l4836 281A                        l4828 280A                        l5396 2120  
                      l5388 20F0                        l3798 2542                        l3990 1C56  
                      l3982 1C36                        l3894 02A4                        l5662 022E  
                      l3886 0244                        l3878 01B0                        l4838 2826  
                      l5398 212C                        l3992 1C72                        l3984 1C3A  
                      l5664 0324                        l3896 02DC                        l3888 0260  
                      l5656 1320                        l3994 1C8E                        l3986 1C42  
                      l3978 1C1C                        l5666 039C                        l5658 009E  
                      l3996 1CBC                        l3988 1C4A                        l5668 10E6  
                      l4798 2A8C                        STR_1 FFDC                        STR_3 FF4D  
                      STR_4 FFB5                        STR_5 FBDB                        STR_6 FFEC  
                      STR_7 FDA9                        STR_8 FF8A                        u3000 21C6  
                      u3001 21C2                        u3010 2200                        u3011 21FC  
                      u3100 0572                        u3020 2220                        u3101 056E  
                      u3021 221C                        u3110 0582                        u3030 2232  
                      u3111 057E                        u3031 222E                        u3200 06C8  
                      u3120 05BE                        u3040 2264                        u3201 06C4  
                      u3121 05BA                        u3041 2260                        u3210 06D8  
                      u3130 05CC                        u3050 04E6                        u2410 2AF2  
                      u3211 06D4                        u3131 05C8                        u3051 04E2  
                      u2411 2AEE                        u3300 0836                        u3220 070A  
                      u3140 063A                        u3060 04F8                        u2500 1F1E  
                      u2420 245E                        _FSEN 79CA                        u3301 0832  
                      u3221 0706                        u3141 0636                        u3061 04F4  
                      u2501 1F1A                        u2421 245A                        u3310 0852  
                      u3230 0718                        u3150 0652                        u3070 0508  
                      u2510 1F46                        u2430 2470                        u3311 084E  
                      u3231 0714                        u3151 064C                        u3071 0504  
                      u2511 1F42                        u2431 246C                        u3400 092A  
                      u3320 0862                        u3240 0736                        u3160 0654  
                      u3080 054A                        u2520 1F78                        u2440 2498  
                      u2600 260A                        u3401 0926                        u3321 085E  
                      u3241 0732                        u3081 0546                        u2521 1F74  
                      u2441 2494                        u2601 2606                        u3410 094A  
                      u3330 0874                        u3250 076E                        u3170 067C  
                      u3090 0560                        u2530 22A4                        u2450 24CE  
                      u2610 2660                        u3411 0946                        u3331 0870  
                      u3251 076A                        u3171 0678                        u3091 055C  
                      u2531 22A0                        u2451 24CA                        u2611 265C  
                      u3420 095C                        u3340 088A                        u3260 07B4  
                      u3180 069A                        u4300 26E4                        u2540 22C6  
                      u2460 2964                        u2620 266E                        u2700 1404  
                      u3500 0028                        u3421 0958                        u3341 0886  
                      u3261 07B0                        u3181 0696                        u2541 22C2  
                      u2461 2960                        u2621 266A                        u2701 1400  
                      u3501 0024                        _IPR1 0F9F                        u3430 0978  
                      u3350 08A0                        u3270 07EA                        u3190 06BA  
                      u4310 26F4                        u2470 1EA0                        u2550 22EC  
                      u2630 2980                        u2710 1430                        u3510 00BE  
                      _IPR2 0FA2                        u3431 0974                        u3351 089C  
                      u3271 07E6                        u3191 06B6                        u4311 26F0  
                      u2471 1E9C                        u2551 22E8                        u2631 297C  
                      u2711 142C                        u3511 00BA                        _IPR3 0FA5  
                      _PIE1 0F9D                        u3360 08B4                        u3280 07FA  
                      u3440 2528                        u3600 1CB4                        u4400 102C  
                      u2480 1EC2                        u2560 230E                        u2720 1446  
                      u2640 28BE                        u2800 1946                        u3520 00EA  
                      u4240 2742                        _PIE2 0FA0                        _IPR4 0F90  
                      u3361 08B0                        u3281 07F6                        u3441 2524  
                      u3601 1CB0                        u4401 1028                        u2481 1EBE  
                      u2561 230A                        u2721 1442                        u2801 1942  
                      u3521 00E6                        _IPR5 0F99                        _PIE3 0FA3  
                      u3370 08CE                        u3290 0826                        u3450 2542  
                      u3610 1CD6                        u2490 1EFC                        u2570 232C  
                      u2730 1510                        u2650 28CE                        u2810 1978  
                      u3530 018C                        u4250 2778                        _PIE4 0F8E  
                      u3371 08CA                        u3291 0822                        u3451 253E  
                      u3611 1CD2                        u4307 26DA                        u2491 1EF8  
                      u2571 2328                        u2731 150C                        u2651 28CA  
                      u2811 1974                        u3531 0188                        _PIE5 0F91  
                      u3700 0BEA                        u3620 09A6                        u3380 0908  
                      u3460 2568                        u4420 105E                        u2580 235C  
                      u2740 1526                        u2660 13C0                        u2820 1996  
                      u2900 1ACC                        u3540 01AC                        u4260 2788  
                      u3621 09A2                        u3381 0904                        u3461 2564  
                      u4421 105A                        u4325 0DC6                        u2581 2358  
                      u2741 1522                        u2661 13BA                        u2821 1992  
                      u2901 1AC8                        u3541 01A8                        u4261 2784  
                      u3710 0C44                        u3630 09B8                        u3390 091A  
                      u3470 2586                        u4270 1652                        u2590 25E8  
                      u2750 1540                        u2670 13C2                        u2830 19C0  
                      u2910 1B14                        u3550 02A0                        u3711 0C40  
                      u3631 09B4                        u3391 0916                        u3471 2582  
                      u4271 164E                        u4415 1038                        u4335 0E44  
                      u2591 25E4                        u2751 153C                        u2647 28B4  
                      u2831 19BC                        u2911 1B10                        u3551 029C  
                      u4247 2738                        u3800 0D98                        u3720 0C64  
                      u3640 09C8                        u3480 25A2                        u4280 1752  
                      u4360 0F5E                        u4440 1D7C                        u2760 155A  
                      u2680 13D4                        u2840 19FA                        u2920 1B70  
                      u3560 03D2                        u3801 0D94                        u3721 0C60  
                      u3705 0BE0                        u3641 09C4                        u3481 259E  
                      u4281 174E                        u4361 0F5A                        u4345 0EBC  
                      u4441 1D78                        u2761 1556                        u2681 13D0  
                      u2841 19F6                        u3561 03CE                        u4257 276E  
                      u3730 0C76                        u3650 0A08                        u3810 29BC  
                      u3490 25C8                        u4290 26B2                        u2770 1568  
                      u2690 13F4                        u2850 1A28                        u2930 1BA2  
                      u3570 0408                        u3731 0C72                        u3651 0A04  
                      u3811 29B8                        u3491 25C4                        u4435 106A  
                      u4355 0F38                        u2771 1564                        u2691 13F0  
                      u2931 1B9E                        u3571 0404                        u3740 0CA4  
                      u3660 0A1A                        u3820 1FB0                        u3900 1786  
                      u4380 0FB6                        u4460 1DD8                        u2780 1578  
                      u2860 1A62                        u2940 1BB8                        u3580 0430  
                      u3741 0CA0                        u3661 0A16                        u3821 1FAC  
                      u3901 1782                        u4381 0FB2                        u4461 1DD4  
                      u2781 1574                        u2861 1A5E                        u2941 1BB4  
                      u2925 1B66                        u3581 042C                        u3750 0CBA  
                      u3670 0A2A                        u3830 1FE4                        u3910 17E2  
                      u3590 1C2A                        u4390 0FDE                        u2870 1A70  
                      u2950 1BD2                        u3751 0CB6                        u3671 0A26  
                      u3911 17DE                        u3591 1C26                        u4391 0FDA  
                      u4375 0F6A                        u4455 1D90                        u2871 1A6C  
                      u2791 1924                        u2951 1BCE                        u4720 2A14  
                      u3760 0CCE                        u3680 0A60                        u3840 2012  
                      u3920 1838                        u4480 1E4A                        u4456 1D9A  
                      u2880 1AAA                        u2960 1BEC                        u4721 2A10  
                      u3761 0CCA                        u3681 0A5C                        u3841 200E  
                      u3921 1834                        u4297 26A8                        u4481 1E46  
                      u4457 1DAA                        u2881 1AA6                        u2857 1A1E  
                      u2961 1BE8                        u3770 0CE8                        u3690 0A70  
                      u3850 2026                        u3930 1882                        u2970 1BFA  
                      u2890 1ABC                        u3771 0CE4                        u3691 0A6C  
                      u3851 2022                        u3835 1FDA                        u3931 187E  
                      u4475 1DEC                        u2971 1BF6                        u2891 1AB8  
                      u3780 0D30                        u3860 204E                        u3940 18A0  
                      u4476 1DF6                        u2980 23AE                        u4900 2120  
                      u3781 0D2C                        u3861 204A                        u3941 189C  
                      u4477 1E06                        u2981 23AA                        u4901 211C  
                      u3790 0D5E                        u3870 206E                        u3950 18B0  
                      u2990 2442                        u3791 0D5A                        u3871 206A  
                      u3951 18AC                        u2991 243E                        u4735 2836  
                      u3880 207E                        u3960 18BE                        u4736 2838  
                      u3881 207A                        u3961 18BA                        _PIR1 0F9E  
                      u3970 18F8                        u3890 1778                        u4690 2A9A  
                      _PIR2 0FA1                        u3971 18F4                        u3891 1774  
                      u4691 2A96                        _PIR3 0FA4                        u3980 1906  
                      _PIR4 0F8F                        u4917 29F0                        u3981 1902  
                      _PIR5 0F98                        u3990 2882                        u3991 287E  
                      u4880 1144                        u4881 1140                        u4890 1398  
                      u4891 1394                        _RCON 0FD0                        _RBPU 7F8F  
                      _Wait 29DE                        abs@a 000C                        _dbuf 0091  
                      _main 20A0                        _dtoa 13B0                        _prec 0062  
                      pad@i 001A                        pad@p 0017                        fsr0h 0FEA  
                      fsr1h 0FE2                        indf0 0FEF                        fsr2h 0FDA  
                      fsr0l 0FE9                        indf2 0FDF                        fsr1l 0FE1  
                      pad@w 001C                        fsr2l 0FD9                        _stoa 191A  
                      btemp 005D                        _xtoa 1AAC                        prodh 0FF4  
                      prodl 0FF3                        start 0026                 _Deb_menue00 F904  
               _Deb_menue01 FA12                 _Deb_menue02 FB21                ___param_bank 0000  
                     ??_abs 000E                       ??_pad 0019                _BAUDCON2bits 0F7C  
                     ?_Wait 0002               ___fltol@sign1 000A             __end_of___aldiv 1F9A  
           __end_of___almod 237E             __end_of___fladd 098C                       ?_main 0001  
                     ?_dtoa 001E             __end_of___awdiv 25DA             __end_of___flneg 29DE  
                     STR_10 FFF2                       STR_11 FD0F                       STR_12 FFE5  
                     STR_20 FFD0                       STR_21 FCF9                       STR_14 FFFB  
                     STR_30 FE13                       STR_31 FCE3                       STR_23 FCB6  
                     STR_40 FEA2                       STR_24 FE28                       STR_32 FC9E  
                     STR_17 FFC3                       STR_33 FEF1                       STR_25 FDD4  
                     STR_41 FDBF                       STR_18 FF7B                       STR_34 FF04  
                     STR_26 FDFE                       STR_50 FC36                       STR_42 FC19  
                     STR_19 FFA7                       STR_35 FF17                       STR_43 FE66  
                     STR_51 FD3B                       STR_27 FCCD                       STR_60 FF5D  
                     STR_36 FF2A                       STR_44 FE8E                       STR_28 FE3D  
                     STR_52 FD25                       STR_61 FF6C                       STR_45 FEB6  
                     STR_37 FE52                       STR_29 FDE9                       STR_53 FD7D  
                     STR_62 FF99                       STR_46 FECA                       STR_54 FC6A  
                     STR_38 FBFB                       STR_63 FF99                       STR_39 FE7A  
                     STR_55 FC50                       STR_47 FB73                       STR_64 FEDE  
                     STR_56 FD51                       STR_48 FB3F                       STR_65 FEDE  
                     STR_57 FD67                       STR_49 FBA7                       STR_66 FF3D  
                     STR_58 FD93                       STR_67 FFF7                       STR_59 FC84  
                     STR_69 FFF7             __end_of___flmul 0DB6             __end_of___flsub 2922  
           __end_of___fltol 20A0                       ?_stoa 000C             ___awdiv@divisor 0004  
                     ?_xtoa 001E                       i1l377 001E                       i2l372 2AF8  
           ___awdiv@counter 0006                       _PLLEN 7CDE             __end_of_Xprintf 13B0  
              vfpfcnvrt@fmt 0033                       _PORTA 0F80                       _PORTB 0F81  
                     _PORTC 0F82                       _PORTD 0F83                       _TRISA 0F92  
                     _TRISB 0F93                       _TRISC 0F94                       _TRISD 0F95  
                     _TRISE 0F96                       _ConvC F8EB                       Wait@i 0005  
                     _flags 005C                       _getch 2A8C         read_prec_or_width@c 000E  
       read_prec_or_width@n 000F                       _fputc 244C                       _fputs 2922  
                     pad@fp 0013                       _width 0060                       _putch 2AE2  
                     dtoa@d 0020                       dtoa@i 002A                       dtoa@p 0026  
                     dtoa@s 002C                       dtoa@w 0028             __end_of_low_isr 0026  
                     tablat 0FF5             __end_of_my_puts 2708                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@i 0018                       stoa@l 0020  
                     stoa@p 001E                       stoa@s 000E                       stoa@w 001A  
                     ttemp5 005E                       ttemp6 0061                       ttemp7 0065  
                     status 0FD8                       wtemp8 005E                       xtoa@c 0030  
                     xtoa@d 0020                       xtoa@i 002E                       xtoa@p 002A  
                     xtoa@w 002C             __end_of_strncmp 2292             __initialization 278A  
              __end_of_Wait 2A16                __end_of_main 219C                __end_of_dtoa 15B0  
              __end_of_stoa 1AAC                __end_of_xtoa 1C1C                      ??_Wait 0004  
                    ??_main 005C                      ??_dtoa 0024                      ??_stoa 0010  
                    ??_xtoa 0024               __activetblptr 0003  __end_of_read_prec_or_width 244C  
                    ?_getch 0002                      ?_fputc 0003                      ?_fputs 000C  
                    _EECON2 0FA7                      _ANCON0 0F48                      _ANCON1 0F49  
          ___awdiv@dividend 0002                      ?_putch 0001                      _INTCON 0FF2  
                    _RCREG2 0FAA                      _RCSTA1 0FAC                      _RCSTA2 0F9C  
                    _OSCCON 0FD3               vfpfcnvrt@done 003B                      _SPBRG1 0FB0  
                    _SPBRG2 0FAB                      _RPOR23 0ED7                      _TXREG2 0FA9  
          __end_of___xxtofl 191A                      _TXSTA1 0FAD                      _TXSTA2 0FA8  
          __end_of_com_list FB21                vfprintf@cfmt 004C            __end_of_high_isr 2AFC  
                 ??___aldiv 000A                   ??___almod 000A                   ??___fladd 000A  
                    ___wmul 2A66                   ??___awdiv 0006                   ??___flneg 0006  
                 ??___flmul 000A                   ??___flsub 001A                   ??___fltol 0006  
                 ??_Xprintf 00B9        read_prec_or_width@ap 000A                      _log_dt 0140  
                    _intbuf 00B1                      clear_0 27B2                      clear_1 27C4  
                    clear_2 27D0            ___awdiv@quotient 0008                      isa$std 0001  
                    _printf 2A40                      pad@buf 0015                      main@ch 00CD  
                    dtoa@fp 001E                      _strlen 288C                      fputc@c 0003  
                    fputs@c 0010                      fputs@i 0011                      fputs@s 000C  
       my_putfloat@fracPart 002A                ?_my_putfloat 001B                __mediumconst F8EA  
                 ??_low_isr 0001                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                   ??_my_puts 0009                      stoa@cp 001C  
                    stoa@fp 000C                      putch@c 0002            __end_of_vfprintf 288C  
                    xtoa@fp 001E                   ??_strncmp 0008                ___xxtofl@arg 000C  
              ___xxtofl@exp 000B                ___xxtofl@val 0002                  __accesstop 0060  
   __end_of__initialization 27D8                  ___flneg@f1 0002               ___rparam_used 0001  
                ___fltol@f1 0002           Xprintf@floatvalue 00BB               __end_of_ConvC F8FB  
            __pcstackCOMRAM 0001                __pidataBANK0 2ACA               __end_of_getch 2AAE  
             __end_of_fputc 2516               __end_of_fputs 2966               __end_of_putch 2AF8  
         __end_of_MenueList F904                     ??_getch 0004                     ??_fputc 0007  
                   ??_fputs 0010                     ??_putch 0002                  __pbssBANK0 0060  
                __pbssBANK1 0100                     ?___wmul 0002                     ?_printf 004E  
                   ?_strlen 0002                     _INTCON2 0FF1                     _INTCON3 0FF0  
                 ?___xxtofl 0002                     _OSCCON2 0F87                     _OSCTUNE 0F9B  
                   _SPBRGH1 0F7F                     _SPBRGH2 0F7D                     _RPINR16 0EF7  
                   _SSP1ADD 0FC8                     _SSP2ADD 0F74                   ?_high_isr 0001  
                   Wait@num 0002                     __Hparam 0000                     __Lparam 0000  
                   ___aldiv 1E8E                     ___almod 2292                     ___fladd 04CC  
                   ___awdiv 2516                     ___flneg 29A6                     ___flmul 098C  
                   ___flsub 28DC                     ___fltol 1F9A                   ?_vfprintf 0046  
                   _Xprintf 110E                     __pcinit 278A                     __ramtop 1000  
                   __ptext0 20A0                     __ptext1 27E2                     __ptext2 2A16  
                   __ptext3 2A8C                     __ptext4 110E                     __ptext5 2708  
                   __ptext6 2A40                     __ptext7 283A                     __ptext8 0000  
                   __ptext9 1AAC       read_prec_or_width@fmt 0008                  ??___xxtofl 0006  
                   _log_sem 006C            ___aldiv@dividend 0002                     _low_isr 0018  
                   _my_puts 2684                  ??_high_isr 0001                     _strncmp 219C  
            __pintcode_body 2AF8        end_of_initialization 27D8        my_putfloat@digit_950 0028  
                   fputc@fp 0005                     int_func 2AF8                     fputs@fp 000E  
        _read_prec_or_width 237E           __end_of_uart_init 283A           __end_of_my_putint 1D64  
             ?_my_putshex32 0002           __end_of_vfpfcnvrt 04CC            ___aldiv@quotient 000C  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0008  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 003F                  ??_vfprintf 004C                     strlen@a 0004  
                   strlen@s 0002                  _my_putchar 2AAE                 uart_init@dt 0004  
                _my_putshex 0DB6           __end_of_putstring 278A                 my_putchar@c 0004  
               ___fladd@grs 0011               ___xxtofl@sign 000A                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISDbits 0F95        ??_read_prec_or_width 000C  
      my_putfloat@precision 001F                 ___flmul@grs 000F              ??_my_putshex32 0008  
            _dev_menue_type 0068                _i2c_sens_cnt 0066           _Set_UasrtBauRaite 2A16  
               vfpfcnvrt@ap 0035                 vfpfcnvrt@cp 0044                 vfpfcnvrt@fp 0031  
            __end_of___wmul 2A8C          ?_Set_UasrtBauRaite 0002              __end_of_printf 2A66  
            __end_of_strlen 28DC         start_initialization 278A                 __end_of_abs 29A6  
               __end_of_pad 2684         ??_Set_UasrtBauRaite 0004                   _MenueList F8FB  
               vfprintf@fmt 0048            Xprintf@charvalue 00C1   __end_of_Set_UasrtBauRaite 2A40  
                  ??___wmul 0006                 __pdataBANK0 00CF                 ?_my_putchar 0002  
               ?_my_putshex 0002                    ??_printf 005A          my_putfloat@intPart 0026  
                  ??_strlen 0004                   ___fladd@a 0006                   ___fladd@b 0002  
               __pbssBIGRAM 0140                   ___flmul@a 0006                   ___flmul@b 0002  
               __pbssCOMRAM 005C                   ___flsub@a 0016                   ___flsub@b 0012  
             __pcstackBANK0 00B3         Set_UasrtBauRaite@dt 0002                   _dtoa$1519 0024  
                 __pintcode 0008               __pmediumconst F8EA                    ?___aldiv 0002  
                  ?___almod 0002                    ?___fladd 0002                    ?___awdiv 0002  
                  ?___flneg 0002                    ?___flmul 0002                    ?___flsub 0012  
                  ?___fltol 0002                    ?_Xprintf 00B3                 __pintcodelo 0018  
          ___almod@dividend 0002                   Xprintf@ap 00C9          Xprintf@uint32value 00C5  
                  _BAUDCON1 0F7E                    _BAUDCON2 0F7C            Xprintf@uintvalue 00C3  
      __end_of_my_putshex32 1E8E                    ?_low_isr 0001                    ?_my_puts 0005  
                  ?_strncmp 0002                   _log_onoff 006B             ___aldiv@divisor 0006  
           ___aldiv@counter 000A                   _input_pos 0064              ___wmul@product 0006  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _PIR3bits 0FA4  
                 _uart_init 27E2                    _SSP1CON1 0FC6                    _SSP1CON2 0FC5  
                  _SSP2CON1 0F72                    _SSP2CON2 0F71                   _my_putint 1C1C  
                  _SSP1STAT 0FC7                    _SSP2STAT 0F73                  my_puts@buf 0007  
                my_puts@str 0005                   _vfpfcnvrt 0000                   _xtoa$1538 0028  
         ___wmul@multiplier 0002                    _CharConv 00CF                _input_string 006D  
             ??_my_putfloat 0023                   _putstring 2708                  vfpfcnvrt@c 0043  
                 copy_data0 279E                    __Hrparam 0000                  vfprintf@ap 004A  
                  __Lrparam 0000                  vfprintf@fp 0046                  ?_uart_init 0001  
                ?_my_putint 000A                  ?_vfpfcnvrt 0031                    ___xxtofl 1766  
           Xprintf@intvalue 00BF                  ?_putstring 0003                    __ptext10 219C  
                  __ptext11 191A                    __ptext20 2292                    __ptext12 288C  
                  __ptext21 1E8E                    __ptext13 237E                    __ptext30 1766  
                  __ptext22 1D64                    __ptext14 13B0                    __ptext31 1F9A  
                  __ptext23 0DB6                    __ptext15 25DA                    __ptext32 28DC  
                  __ptext24 2684                    __ptext16 2922                    __ptext33 04CC  
                  __ptext25 2AAE                    __ptext17 244C                    __ptext34 29A6  
                  __ptext26 15B0                    __ptext18 2AE2                    __ptext35 098C  
                  __ptext27 1C1C                    __ptext19 2966                    __ptext36 29DE  
                  __ptext28 2A66                    __ptext29 2516                    _com_list FAA8  
                  _high_isr 0008             ___almod@divisor 0006             ___almod@counter 000A  
       __end_of_my_putfloat 1766                    _log_stop 006A                  putstring@c 0003  
                putstring@i 0007                 _loginfo_buf 0100                   stoa@F1156 00DF  
                  isa$xinst 0000                    int$flags 005D                    _vfprintf 283A  
                 printf@fmt 004E                ??_my_putchar 0004                ??_my_putshex 0007  
            _vfpfcnvrt$1565 003D            my_putfloat@count 0024                    intlevel1 0000  
                  intlevel2 0000          __end_of_my_putchar 2ACA                  _RCSTA1bits 0FAC  
        __end_of_my_putshex 110E                  _RCSTA2bits 0F9C                   strncmp@_l 0002  
                 strncmp@_r 0004                _my_putshex32 1D64                 ??_uart_init 0004  
                  printf@ap 005A                 ??_my_putint 000E         __end_of_Deb_menue00 FA12  
       __end_of_Deb_menue01 FAA8         __end_of_Deb_menue02 FB3F                 ??_vfpfcnvrt 0037  
                  stoa@nuls 0011               Xprintf@buffer 00CB                  _PPSCONbits 0EBF  
             Xprintf@string 00B3             _input_char_step 0069                    strncmp@l 0009  
                  strncmp@n 0006                    strncmp@r 000B                 _my_putfloat 15B0  
              ___aldiv@sign 000B                 ??_putstring 0005               my_putchar@buf 0002  
             ___fladd@signs 000E              my_putfloat@buf 0021              my_putfloat@num 001B  
              ___almod@sign 000B                ___fladd@aexp 000F                ___fladd@bexp 0010  
             my_putint@keta 0010               my_putint@temp 000E                my_putint@buf 000C  
              my_putint@num 000A               my_putshex32@i 0012  
